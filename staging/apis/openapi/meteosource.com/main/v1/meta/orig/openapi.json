{
  "openapi": "3.0.2",
  "info": {
    "title": "Interactive documentation for your Premium plan",
    "description": "\n\nThis interactive documentation is using your API key which is filled in automatically, you can find and change this in [your dashboard](https://www.meteosource.com/client).\n \nUsing the `GET` button, open your selected endpoint and read the introduction. You will find a detailed description of available parameters. You can complete the `Parameters` section and hit `Execute` to view a full API response. You can then inspect the JSON response, copy the `curl` command to run it on your machine, or obtain a URL of the request. In this way, you can easily build request command for the data you need.\n",
    "version": "v1",
    "x-jentic-source-url": "https://www.meteosource.com/api/v1/premium/openapi.json"
  },
  "servers": [
    {
      "url": "/api/v1/premium"
    }
  ],
  "paths": {
    "/point": {
      "get": {
        "tags": [
          "Point weather"
        ],
        "summary": "Returns weather data for a single point (geographic name or GPS)",
        "description": "## Current weather and forecast for single location\n\n### Location specification\nThe location of the weather data is the only parameter that is required and must be specified. There are two ways to do this:\n1. Specify the GPS coordinates of the location using the parameters `lat` and `lon`.\n 2. **OR** specify the name of the place using the parameter `place_id`. To obtain the `place_id` for the location you want, please use endpoints `/find_places_prefix` (search by prefix) or `/find_places` (search by full name).\n\n*Note: For mountains, it is usually better to specify the `place_id` rather than the `lat` and `lon`. When you use `place_id`, you are guaranteed to receive forecasts for the precise elevation of the peak. When you specify the coordinates, the elevation can be less precise.*\n\n### Sections\nThe endpoint can return multiple sections of data. To obtain the best performance, we advise only requesting the sections you actually need. The available sections are as follows:\n\n * Current weather situation\n* Hourly forecast (for 24/48/96/168 hours, depending on the tier)\n* Daily forecast (for 7/10/30 days, depending on the tier)\n * Minutely precipitation forecast (for 60 minutes in the following hour, only for higher tiers)\n* Weather alerts (only for higher tiers)\n\nBy default, only the current and hourly sections are returned. The division into daily parts (morning, afternoon and evening) is only available for the first 7 days of the forecast. For details regarding available parameters, see the parameter description below.\n\n### Notes\n* **For a detailed description of variables (e.g. icons), please consult \u26a0\ufe0f <a href=\"https://www.meteosource.com/documentation#description\" target=\"_blank\">description of variables</a> \u26a0\ufe0f in Documentation or `Schema` of the response (link next to Example value in the Responses section below).**\n * Variables can be instantaneous, averaged, or accumulated over certain time. For example, `precipitation` forecast provides the precipitation accumulated until the next hour (data with timestamp as `12:00:00` is rain accumulated from `12:00:00` to `13:00:00`).\n* Do **not** make any assumptions about the number and ordering of the variables. New variables and sections may be introduced in the future. Always check the data are present before you try to use them.\n * The response contains an `Expires` header, which defines the point at which the API response will not change for the same request. We highly recommend using this to avoid unnecessary requests and **increase the performance of your app**.\n* Meteosource API supports HTTP compression. To enable it, simply add an `Accept-Encoding: gzip` header to your request.\n* When daylight saving time starts, one hourly record will be missing (typically `2:00:00 AM`). When daylight saving time ends, the hourly forecast will contain two records with duplicate times (typically `2:00:00 AM`).\n* The detailed description of weather alerts is only available in English. The alert category is translated into selected language.",
        "operationId": "point_point_get",
        "parameters": [
          {
            "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use endpoints `/find_places_prefix` (search by prefix) or `/find_places` (search by full name).",
            "required": false,
            "schema": {
              "title": "Place Id",
              "type": "string",
              "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use endpoints `/find_places_prefix` (search by prefix) or `/find_places` (search by full name)."
            },
            "name": "place_id",
            "in": "query"
          },
          {
            "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4",
            "required": false,
            "schema": {
              "title": "Lat",
              "type": "string",
              "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4"
            },
            "name": "lat",
            "in": "query"
          },
          {
            "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4",
            "required": false,
            "schema": {
              "title": "Lon",
              "type": "string",
              "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4"
            },
            "name": "lon",
            "in": "query"
          },
          {
            "description": "Sections to be included in the response. You can specify more section by separating the values with a comma. The available values are:\n \n* ``current``: Current weather situation\n* ``daily``: Forecasts for each whole day, without the daily parts\n* ``daily-parts``: Forecasts for each whole day, morning, afternoon and evening\n    * Important: forecast for the morning, afternoon and evening is available only for the first\n      7 days in the forecast\n* ``hourly``: Forecasts with hourly resolution\n * ``minutely``: Precipitation forecast with 1 minute resolution\n* ``alerts``: The weather alerts\n* ``all``: All sections\n",
            "required": false,
            "schema": {
              "title": "Sections",
              "type": "string",
              "description": "Sections to be included in the response. You can specify more section by separating the values with a comma. The available values are:\n \n* ``current``: Current weather situation\n* ``daily``: Forecasts for each whole day, without the daily parts\n* ``daily-parts``: Forecasts for each whole day, morning, afternoon and evening\n    * Important: forecast for the morning, afternoon and evening is available only for the first\n      7 days in the forecast\n* ``hourly``: Forecasts with hourly resolution\n * ``minutely``: Precipitation forecast with 1 minute resolution\n* ``alerts``: The weather alerts\n* ``all``: All sections\n",
              "default": "current,hourly"
            },
            "name": "sections",
            "in": "query"
          },
          {
            "description": "Timezone to be used for the date fields. If not specified, local timezone of the forecast location will be used.\nThe format is according to the tzinfo database, so values like `Europe/Prague` or `UTC` can be used.\n Alternatively you may use the value ``auto`` in which case the local timezone of the location is used.\nThe full list of valid timezone strings can be found [here](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\n",
            "required": false,
            "schema": {
              "title": "Timezone",
              "type": "string",
              "description": "Timezone to be used for the date fields. If not specified, local timezone of the forecast location will be used.\nThe format is according to the tzinfo database, so values like `Europe/Prague` or `UTC` can be used.\nAlternatively you may use the value ``auto`` in which case the local timezone of the location is used.\nThe full list of valid timezone strings can be found [here](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\n"
            },
            "name": "timezone",
            "in": "query"
          },
          {
            "description": "The language of text summaries and place names (variable names are never translated). Available languages are:\n\n   * ``en``: English\n   * ``es``: Spanish\n   * ``fr``: French\n   * ``de``: German\n   * ``pl``: Polish\n   * ``pt``: Portuguese\n   * ``cs``: Czech\n",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Language"
                }
              ],
              "description": "The language of text summaries and place names (variable names are never translated). Available languages are:\n\n   * ``en``: English\n   * ``es``: Spanish\n   * ``fr``: French\n   * ``de``: German\n   * ``pl``: Polish\n   * ``pt``: Portuguese\n   * ``cs``: Czech\n",
              "default": "en"
            },
            "name": "language",
            "in": "query"
          },
          {
            "description": "Unit system to be used. The available values are:\n\n* `auto`: Select the system automatically, based on the forecast location.\n* `metric`: Metric (SI) units (`\u00b0C`, `mm/h`, `m/s`, `cm`, `km`, `hPa`).\n* `us`: Imperial units (`\u00b0F`, `in/h`, `mph`, `in`, `mi`, `Hg`).\n* `uk`: Same as ``metric``, except that visibility is in `miles` and wind speeds are in `mph`.\n* `ca`: Same as ``metric``, except that wind speeds are in `km/h` and pressure is in `kPa`.\n",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Units"
                }
              ],
              "description": "Unit system to be used. The available values are:\n\n* `auto`: Select the system automatically, based on the forecast location.\n* `metric`: Metric (SI) units (`\u00b0C`, `mm/h`, `m/s`, `cm`, `km`, `hPa`).\n* `us`: Imperial units (`\u00b0F`, `in/h`, `mph`, `in`, `mi`, `Hg`).\n* `uk`: Same as ``metric``, except that visibility is in `miles` and wind speeds are in `mph`.\n* `ca`: Same as ``metric``, except that wind speeds are in `km/h` and pressure is in `kPa`.\n",
              "default": "auto"
            },
            "name": "units",
            "in": "query"
          },
          {
            "description": "Your unique API key. You can either specify it in this parameter, or set it in `X-API-Key` header.",
            "required": false,
            "schema": {
              "title": "Key",
              "type": "string",
              "description": "Your unique API key. You can either specify it in this parameter, or set it in `X-API-Key` header."
            },
            "name": "key",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Point_PointData"
                }
              }
            }
          },
          "400": {
            "description": "Error in passed parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralRequestError"
                }
              }
            }
          },
          "403": {
            "description": "API key not not specified or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralRequestError"
                }
              }
            }
          },
          "402": {
            "description": "Maximum requests per day limit exceeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralRequestError"
                }
              }
            }
          },
          "429": {
            "description": "Maximum requests per minute limit exceeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralRequestError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/find_places": {
      "get": {
        "tags": [
          "Location endpoints"
        ],
        "summary": "Search for places. Complete words required.",
        "description": "## Search for places\n\nYou can use this endpoint to obtain `place_id` of the location you want, to be used in `point` endpoint.\nThe response also contains detailed information about the location, such as coordinates, timezone and the country the place belongs to.\n\nUnlike the `/find_place_prefix` endpoint, complete words are required here. You can search for cities,\nmountains, lakes, countries, ZIP codes, etc. The response can contain multiple places, sorted by relevance.\nYou can then identify the one you want by coordinates, country, or the administrative area.",
        "operationId": "find_places_find_places_get",
        "parameters": [
          {
            "description": "Place name or ZIP code",
            "required": true,
            "schema": {
              "title": "Text",
              "type": "string",
              "description": "Place name or ZIP code"
            },
            "name": "text",
            "in": "query"
          },
          {
            "description": "The language of text summaries and place names (variable names are never translated). Available languages are:\n\n   * ``en``: English\n   * ``es``: Spanish\n   * ``fr``: French\n   * ``de``: German\n   * ``pl``: Polish\n   * ``pt``: Portuguese\n   * ``cs``: Czech\n",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Language"
                }
              ],
              "description": "The language of text summaries and place names (variable names are never translated). Available languages are:\n\n   * ``en``: English\n   * ``es``: Spanish\n   * ``fr``: French\n   * ``de``: German\n   * ``pl``: Polish\n   * ``pt``: Portuguese\n   * ``cs``: Czech\n",
              "default": "en"
            },
            "name": "language",
            "in": "query"
          },
          {
            "description": "Your unique API key. You can either specify it in this parameter, or set it in `X-API-Key` header.",
            "required": false,
            "schema": {
              "title": "Key",
              "type": "string",
              "description": "Your unique API key. You can either specify it in this parameter, or set it in `X-API-Key` header."
            },
            "name": "key",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Find Places Find Places Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FindPlacesModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error in passed parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralRequestError"
                }
              }
            }
          },
          "403": {
            "description": "API key not not specified or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralRequestError"
                }
              }
            }
          },
          "402": {
            "description": "Maximum requests per day limit exceeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralRequestError"
                }
              }
            }
          },
          "429": {
            "description": "Maximum requests per minute limit exceeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralRequestError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/find_places_prefix": {
      "get": {
        "tags": [
          "Location endpoints"
        ],
        "summary": "Prefix search for places. Useful for autocomplete forms.",
        "description": "## Search for places by prefix\n\nYou can use this endpoint to obtain `place_id` of the location you want, to be used in `point` endpoint. The response also contains detailed information about the location, such as coordinates, timezone and the country the place belongs to.\n\nUnlike the `/find_places` endpoint, you should only specify the prefix of the place you are looking for. This is particularly useful for autocomplete forms. You can search for cities, mountains, lakes, countries, ZIP codes, etc. The response can contain multiple places, sorted by relevance. You can then identify the one you want by coordinates, country, or the administrative area.",
        "operationId": "find_places_prefix_find_places_prefix_get",
        "parameters": [
          {
            "description": "Place name or ZIP code",
            "required": true,
            "schema": {
              "title": "Text",
              "type": "string",
              "description": "Place name or ZIP code"
            },
            "name": "text",
            "in": "query"
          },
          {
            "description": "The language of text summaries and place names (variable names are never translated). Available languages are:\n\n   * ``en``: English\n   * ``es``: Spanish\n   * ``fr``: French\n   * ``de``: German\n   * ``pl``: Polish\n   * ``pt``: Portuguese\n   * ``cs``: Czech\n",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Language"
                }
              ],
              "description": "The language of text summaries and place names (variable names are never translated). Available languages are:\n\n   * ``en``: English\n   * ``es``: Spanish\n   * ``fr``: French\n   * ``de``: German\n   * ``pl``: Polish\n   * ``pt``: Portuguese\n   * ``cs``: Czech\n",
              "default": "en"
            },
            "name": "language",
            "in": "query"
          },
          {
            "description": "Your unique API key. You can either specify it in this parameter, or set it in `X-API-Key` header.",
            "required": false,
            "schema": {
              "title": "Key",
              "type": "string",
              "description": "Your unique API key. You can either specify it in this parameter, or set it in `X-API-Key` header."
            },
            "name": "key",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Find Places Prefix Find Places Prefix Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FindPlacesModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error in passed parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralRequestError"
                }
              }
            }
          },
          "403": {
            "description": "API key not not specified or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralRequestError"
                }
              }
            }
          },
          "402": {
            "description": "Maximum requests per day limit exceeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralRequestError"
                }
              }
            }
          },
          "429": {
            "description": "Maximum requests per minute limit exceeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralRequestError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/nearest_place": {
      "get": {
        "tags": [
          "Location endpoints"
        ],
        "summary": "Returns the nearest named location for a given GPS coordinates.",
        "description": "## Search for nearest place by coordinates\n\nYou can use this endpoint to find the nearest place from given coordinates.\n\n*Note: If you specify coordinates of a secluded place (e.g. middle of the ocean), the nearest point can be very far from the coordinates.*",
        "operationId": "nearest_place_nearest_place_get",
        "parameters": [
          {
            "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4",
            "required": true,
            "schema": {
              "title": "Lat",
              "type": "string",
              "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4"
            },
            "name": "lat",
            "in": "query"
          },
          {
            "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4",
            "required": true,
            "schema": {
              "title": "Lon",
              "type": "string",
              "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4"
            },
            "name": "lon",
            "in": "query"
          },
          {
            "description": "The language of text summaries and place names (variable names are never translated). Available languages are:\n\n   * ``en``: English\n   * ``es``: Spanish\n   * ``fr``: French\n   * ``de``: German\n   * ``pl``: Polish\n   * ``pt``: Portuguese\n   * ``cs``: Czech\n",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Language"
                }
              ],
              "description": "The language of text summaries and place names (variable names are never translated). Available languages are:\n\n   * ``en``: English\n   * ``es``: Spanish\n   * ``fr``: French\n   * ``de``: German\n   * ``pl``: Polish\n   * ``pt``: Portuguese\n   * ``cs``: Czech\n",
              "default": "en"
            },
            "name": "language",
            "in": "query"
          },
          {
            "description": "Your unique API key. You can either specify it in this parameter, or set it in `X-API-Key` header.",
            "required": false,
            "schema": {
              "title": "Key",
              "type": "string",
              "description": "Your unique API key. You can either specify it in this parameter, or set it in `X-API-Key` header."
            },
            "name": "key",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindPlacesModel"
                }
              }
            }
          },
          "400": {
            "description": "Error in passed parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralRequestError"
                }
              }
            }
          },
          "403": {
            "description": "API key not not specified or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralRequestError"
                }
              }
            }
          },
          "402": {
            "description": "Maximum requests per day limit exceeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralRequestError"
                }
              }
            }
          },
          "429": {
            "description": "Maximum requests per minute limit exceeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralRequestError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/map": {
      "get": {
        "tags": [
          "Weather maps"
        ],
        "summary": "Returns PNG weather map for given area and variable",
        "description": "## PNG weather forecast maps for given area and variable\n\n### Area specification\nThere are two ways to specify geographical area you need for your map:\n1. Specify `X` and `Y` coordinates and zoom level `Z` of desired tile in <a href=\"https://www.maptiler.com/google-maps-coordinates-tile-bounds-projection/\" rel=\"nofollow\" target=\"_blank\">Google Maps Tile notation</a>.\n2. Specify latitude and longitude bounds of the area you want to cover.\n\n### Notes\n * The resulting PNG maps are **always** in <a href=\"https://epsg.io/3857\" rel=\"nofollow\" target=\"_blank\">Google Mercator projection (EPSG:3857)</a>.\n * As Meteosource only covers areas between latitudes 80\u00b0 and -80\u00b0, you can only request maps within these bounds, when specifying the latitude and longitude boundaries. When specifying the area using Google Maps Tile notation, the regions outside our supported latitudes will be fully transparent.\n* The finest resolution is not available for maps covering very large regions. The resulting map will be automatically downscaled in this case, to guarantee high-speed responses.\n* Weather maps are only supported for forecasts, not for archive data.",
        "operationId": "map_map_get",
        "parameters": [
          {
            "description": "The X coordinate of Google Maps tile",
            "required": false,
            "schema": {
              "title": "Tile X",
              "type": "integer",
              "description": "The X coordinate of Google Maps tile"
            },
            "name": "tile_x",
            "in": "query"
          },
          {
            "description": "The Y coordinate of Google Maps tile",
            "required": false,
            "schema": {
              "title": "Tile Y",
              "type": "integer",
              "description": "The Y coordinate of Google Maps tile"
            },
            "name": "tile_y",
            "in": "query"
          },
          {
            "description": "The zoom level of Google Maps tile",
            "required": false,
            "schema": {
              "title": "Tile Zoom",
              "type": "integer",
              "description": "The zoom level of Google Maps tile"
            },
            "name": "tile_zoom",
            "in": "query"
          },
          {
            "description": "Minimal latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.2\n",
            "required": false,
            "schema": {
              "title": "Min Lat",
              "type": "string",
              "description": "Minimal latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.2\n"
            },
            "name": "min_lat",
            "in": "query"
          },
          {
            "description": "Minimal longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.2\n",
            "required": false,
            "schema": {
              "title": "Min Lon",
              "type": "string",
              "description": "Minimal longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.2\n"
            },
            "name": "min_lon",
            "in": "query"
          },
          {
            "description": "Maximal latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.2.\n",
            "required": false,
            "schema": {
              "title": "Max Lat",
              "type": "string",
              "description": "Maximal latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.2.\n"
            },
            "name": "max_lat",
            "in": "query"
          },
          {
            "description": "Maximal longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.2\n",
            "required": false,
            "schema": {
              "title": "Max Lon",
              "type": "string",
              "description": "Maximal longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.2\n"
            },
            "name": "max_lon",
            "in": "query"
          },
          {
            "description": "Name of the variable for your map. Available values are:\n\n * `temperature`: Temperature 2 metres above ground\n* `feels_like_temperature`: Feels like temperature\n* `clouds`: Percentage of sky covered by clouds\n * `precipitation`: Total precipitation amount accumulated since last hour\n * `wind_speed`: Wind speed 10 metres above the ground\n* `wind_gust`: Wind gust speed\n* `pressure`: Atmospheric pressure at mean sea level\n* `humidity`: Relative humidity\n* `wave_height`: Wave height\n* `wave_period`: Wave period\n * `sea_temperature`: Sea temperature (available only for +-24 hours)\n* `air_quality`: Air quality index\n* `ozone_surface`: Ozone at surface level\n * `ozone_total`: Total column ozone\n* `no2`: Nitrogen dioxide at surface level\n* `pm2.5`: Particulate matter d < 2.5 \u00b5m (PM2.5)\n",
            "required": true,
            "schema": {
              "title": "Variable",
              "type": "string",
              "description": "Name of the variable for your map. Available values are:\n \n* `temperature`: Temperature 2 metres above ground\n* `feels_like_temperature`: Feels like temperature\n* `clouds`: Percentage of sky covered by clouds\n * `precipitation`: Total precipitation amount accumulated since last hour\n * `wind_speed`: Wind speed 10 metres above the ground\n* `wind_gust`: Wind gust speed\n* `pressure`: Atmospheric pressure at mean sea level\n * `humidity`: Relative humidity\n* `wave_height`: Wave height\n* `wave_period`: Wave period\n* `sea_temperature`: Sea temperature (available only for +-24 hours)\n* `air_quality`: Air quality index\n* `ozone_surface`: Ozone at surface level\n* `ozone_total`: Total column ozone\n* `no2`: Nitrogen dioxide at surface level\n* `pm2.5`: Particulate matter d < 2.5 \u00b5m (PM2.5)\n"
            },
            "name": "variable",
            "in": "query"
          },
          {
            "description": "There are two ways to specify date and time for your map:\n\n 1. Datetime in `YYYY-MM-DDTHH:MM` format and `UTC` timezone, e.g. `2021-08-24T12:00`\n 2. Offset from current time in `[+-]<minutes|hours|days>` format, e.g. `+10minutes`, `-2hours` or `+1days`\n",
            "required": true,
            "schema": {
              "title": "Datetime",
              "type": "string",
              "description": "There are two ways to specify date and time for your map:\n \n1. Datetime in `YYYY-MM-DDTHH:MM` format and `UTC` timezone, e.g. `2021-08-24T12:00`\n 2. Offset from current time in `[+-]<minutes|hours|days>` format, e.g. `+10minutes`, `-2hours` or `+1days`\n"
            },
            "name": "datetime",
            "in": "query"
          },
          {
            "description": "Your unique API key. You can either specify it in this parameter, or set it in `X-API-Key` header.",
            "required": false,
            "schema": {
              "title": "Key",
              "type": "string",
              "description": "Your unique API key. You can either specify it in this parameter, or set it in `X-API-Key` header."
            },
            "name": "key",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Error in passed parameter.",
            "content": {
              "image/png": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralRequestError"
                }
              }
            }
          },
          "403": {
            "description": "API key not not specified or invalid.",
            "content": {
              "image/png": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralRequestError"
                }
              }
            }
          },
          "402": {
            "description": "Maximum requests per day limit exceeded.",
            "content": {
              "image/png": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralRequestError"
                }
              }
            }
          },
          "429": {
            "description": "Maximum requests per minute limit exceeded.",
            "content": {
              "image/png": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralRequestError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/time_machine": {
      "get": {
        "tags": [
          "Time machine - historical weather"
        ],
        "summary": "Returns weather data for a single location and given day in the past",
        "description": "## Actual weather data for a single location and day in the past\n \nThe output contains actual weather data for each day up to 20 years in the past, and long-term statistics of selected weather variables aggregated over 40 years.\n\n### Location specification\nThe location of the weather data must be specified. There are two ways to do this:\n1. Specify the GPS coordinates of the location using the parameters `lat` and `lon`.\n2. **OR** specify the name of the place using the parameter `place_id`. To obtain the `place_id` for the location you want, please use endpoints `/find_places_prefix` (search by prefix) or `/find_places` (search by full name).\n\n*Note: For mountains, it is usually better to specify the `place_id` rather than the `lat` and `lon`. When you use `place_id`, you are guaranteed to receive data for the precise elevation of the peak. When you specify the coordinates, the elevation can be less precise.*",
        "operationId": "time_machine_time_machine_get",
        "parameters": [
          {
            "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use endpoints `/find_places_prefix` (search by prefix) or `/find_places` (search by full name).",
            "required": false,
            "schema": {
              "title": "Place Id",
              "type": "string",
              "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use endpoints `/find_places_prefix` (search by prefix) or `/find_places` (search by full name)."
            },
            "name": "place_id",
            "in": "query"
          },
          {
            "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4",
            "required": false,
            "schema": {
              "title": "Lat",
              "type": "string",
              "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4"
            },
            "name": "lat",
            "in": "query"
          },
          {
            "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4",
            "required": false,
            "schema": {
              "title": "Lon",
              "type": "string",
              "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4"
            },
            "name": "lon",
            "in": "query"
          },
          {
            "description": "The day of the data in the past. Specify in `YYYY-MM-DD` format, e.g. `2021-08-24`.\n",
            "required": true,
            "schema": {
              "title": "Date",
              "type": "string",
              "description": "The day of the data in the past. Specify in `YYYY-MM-DD` format, e.g. `2021-08-24`.\n",
              "format": "date"
            },
            "name": "date",
            "in": "query"
          },
          {
            "description": "Timezone to be used for the date fields. If not specified, local timezone of the location will be used.\nThe format is according to the tzinfo database, so values like `Europe/Prague` or `UTC` can be used.\nAlternatively you may use the value ``auto`` in which case the local timezone of the location is used.\nThe full list of valid timezone strings can be found [here](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\n",
            "required": false,
            "schema": {
              "title": "Timezone",
              "type": "string",
              "description": "Timezone to be used for the date fields. If not specified, local timezone of the location will be used.\nThe format is according to the tzinfo database, so values like `Europe/Prague` or `UTC` can be used.\nAlternatively you may use the value ``auto`` in which case the local timezone of the location is used.\nThe full list of valid timezone strings can be found [here](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\n"
            },
            "name": "timezone",
            "in": "query"
          },
          {
            "description": "Unit system to be used. The available values are:\n\n* `auto`: Select the system automatically, based on the forecast location.\n* `metric`: Metric (SI) units (`\u00b0C`, `mm/h`, `m/s`, `cm`, `km`, `hPa`).\n* `us`: Imperial units (`\u00b0F`, `in/h`, `mph`, `in`, `mi`, `Hg`).\n* `uk`: Same as ``metric``, except that visibility is in `miles` and wind speeds are in `mph`.\n* `ca`: Same as ``metric``, except that wind speeds are in `km/h` and pressure is in `kPa`.\n",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Units"
                }
              ],
              "description": "Unit system to be used. The available values are:\n\n* `auto`: Select the system automatically, based on the forecast location.\n* `metric`: Metric (SI) units (`\u00b0C`, `mm/h`, `m/s`, `cm`, `km`, `hPa`).\n* `us`: Imperial units (`\u00b0F`, `in/h`, `mph`, `in`, `mi`, `Hg`).\n* `uk`: Same as ``metric``, except that visibility is in `miles` and wind speeds are in `mph`.\n* `ca`: Same as ``metric``, except that wind speeds are in `km/h` and pressure is in `kPa`.\n",
              "default": "auto"
            },
            "name": "units",
            "in": "query"
          },
          {
            "description": "The language of weather summaries (variable names are never translated). Available languages are:\n\n   * ``en``: English\n   * ``es``: Spanish\n   * ``fr``: French\n   * ``de``: German\n   * ``pl``: Polish\n   * ``pt``: Portuguese\n   * ``cs``: Czech\n",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Language"
                }
              ],
              "description": "The language of weather summaries (variable names are never translated). Available languages are:\n\n   * ``en``: English\n   * ``es``: Spanish\n   * ``fr``: French\n   * ``de``: German\n   * ``pl``: Polish\n   * ``pt``: Portuguese\n   * ``cs``: Czech\n",
              "default": "en"
            },
            "name": "language",
            "in": "query"
          },
          {
            "description": "Your unique API key. You can either specify it in this parameter, or set it in `X-API-Key` header.",
            "required": false,
            "schema": {
              "title": "Key",
              "type": "string",
              "description": "Your unique API key. You can either specify it in this parameter, or set it in `X-API-Key` header."
            },
            "name": "key",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeMachine_TimeMachine"
                }
              }
            }
          },
          "400": {
            "description": "Error in passed parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralRequestError"
                }
              }
            }
          },
          "403": {
            "description": "API key not not specified or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralRequestError"
                }
              }
            }
          },
          "402": {
            "description": "Maximum requests per day limit exceeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralRequestError"
                }
              }
            }
          },
          "429": {
            "description": "Maximum requests per minute limit exceeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralRequestError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/air_quality": {
      "get": {
        "tags": [
          "Point weather"
        ],
        "summary": "Returns air quality data for a single point (geographic name or GPS)",
        "description": "## Air quality forecast for a single location\n\n### Location specification\nThe location of the weather data is the only parameter that is required and must be specified. There are two ways to do this:\n1. Specify the GPS coordinates of the location using the parameters `lat` and `lon`.\n 2. **OR** specify the name of the place using the parameter `place_id`. To obtain the `place_id` for the location you want, please use endpoints `/find_places_prefix` (search by prefix) or `/find_places` (search by full name).\n\n### Notes\n * **For a detailed description of variables, please consult \u26a0\ufe0f <a href=\"https://www.meteosource.com/documentation#description_aq\" target=\"_blank\">description of variables</a> \u26a0\ufe0f in Documentation or `Schema` of the response (link next to Example value in the Responses section below).**\n* Do **not** make any assumptions about the number and ordering of the variables. New variables and sections may be introduced in the future. Always check the data are present before you try to use them.\n* The response contains an `Expires` header, which defines the point at which the API response will not change for the same request. We highly recommend using this to avoid unnecessary requests and **increase the performance of your app**.\n* Meteosource API supports HTTP compression. To enable it, simply add an `Accept-Encoding: gzip` header to your request.\n* When daylight saving time starts, one hourly record will be missing (typically `2:00:00 AM`). When daylight saving time ends, the hourly forecast will contain two records with duplicate times (typically `2:00:00 AM`).",
        "operationId": "air_quality_air_quality_get",
        "parameters": [
          {
            "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use endpoints `/find_places_prefix` (search by prefix) or `/find_places` (search by full name).",
            "required": false,
            "schema": {
              "title": "Place Id",
              "type": "string",
              "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use endpoints `/find_places_prefix` (search by prefix) or `/find_places` (search by full name)."
            },
            "name": "place_id",
            "in": "query"
          },
          {
            "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4",
            "required": false,
            "schema": {
              "title": "Lat",
              "type": "string",
              "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4"
            },
            "name": "lat",
            "in": "query"
          },
          {
            "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4",
            "required": false,
            "schema": {
              "title": "Lon",
              "type": "string",
              "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4"
            },
            "name": "lon",
            "in": "query"
          },
          {
            "description": "Timezone to be used for the date fields. If not specified, local timezone of the forecast location will be used.\nThe format is according to the tzinfo database, so values like `Europe/Prague` or `UTC` can be used.\n Alternatively you may use the value ``auto`` in which case the local timezone of the location is used.\nThe full list of valid timezone strings can be found [here](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\n",
            "required": false,
            "schema": {
              "title": "Timezone",
              "type": "string",
              "description": "Timezone to be used for the date fields. If not specified, local timezone of the forecast location will be used.\nThe format is according to the tzinfo database, so values like `Europe/Prague` or `UTC` can be used.\nAlternatively you may use the value ``auto`` in which case the local timezone of the location is used.\nThe full list of valid timezone strings can be found [here](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\n"
            },
            "name": "timezone",
            "in": "query"
          },
          {
            "description": "Your unique API key. You can either specify it in this parameter, or set it in `X-API-Key` header.",
            "required": false,
            "schema": {
              "title": "Key",
              "type": "string",
              "description": "Your unique API key. You can either specify it in this parameter, or set it in `X-API-Key` header."
            },
            "name": "key",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirQuality_PointData"
                }
              }
            }
          },
          "400": {
            "description": "Error in passed parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralRequestError"
                }
              }
            }
          },
          "403": {
            "description": "API key not not specified or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralRequestError"
                }
              }
            }
          },
          "402": {
            "description": "Maximum requests per day limit exceeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralRequestError"
                }
              }
            }
          },
          "429": {
            "description": "Maximum requests per minute limit exceeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralRequestError"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AirQuality_PointData": {
        "title": "AirQuality_PointData",
        "required": [
          "lat",
          "lon",
          "elevation",
          "data"
        ],
        "type": "object",
        "properties": {
          "lat": {
            "title": "Lat",
            "type": "string",
            "description": "Latitude of the point, always in the format <float><N/S>, for example ``23.5S``"
          },
          "lon": {
            "title": "Lon",
            "type": "string",
            "description": "Longitude of the point, always in the format <float><E/W>, for example ``23.5W``"
          },
          "elevation": {
            "title": "Elevation",
            "type": "integer",
            "description": "Elevation above sea level in metres (for units 'metric', 'uk', 'ca') or feet (for units 'us')"
          },
          "timezone": {
            "title": "Timezone",
            "type": "string",
            "description": "Name of the timezone in format like 'Europe/London'. Available only when the place is specified through place ID."
          },
          "data": {
            "title": "Data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirQuality_PointHourlyData"
            }
          }
        }
      },
      "AirQuality_PointHourlyData": {
        "title": "AirQuality_PointHourlyData",
        "type": "object",
        "properties": {
          "date": {
            "title": "Date",
            "type": "string",
            "description": "Datetime in YYYY-MM-DDTHH:MM:SS format.",
            "format": "date-time",
            "example": "2022-03-30T18:00:00"
          },
          "aerosol_550": {
            "title": "Aerosol 550",
            "type": "number",
            "description": "Total aerosol optical depth at 550 nm.\nUnit: dimensionless"
          },
          "air_quality": {
            "title": "Air Quality",
            "type": "number",
            "description": "Air quality index. The following values can appear:\n\n* 1 - Very good\n* 2 - Good\n* 3 - Medium\n* 4 - Poor\n* 5 - Very poor\n* 6 - Extremely poor\n\nUnit: index"
          },
          "co_surface": {
            "title": "Co Surface",
            "type": "number",
            "description": "Carbon monoxide at surface level.\nUnit: \u00b5g/m3"
          },
          "dust_550nm": {
            "title": "Dust 550Nm",
            "type": "number",
            "description": "Dust aerosol optical depth at 550 nm.\nUnit: dimensionless"
          },
          "dust_mixing_ratio_05": {
            "title": "Dust Mixing Ratio 05",
            "type": "number",
            "description": "Dust aerosol (0.55 - 0.9 \u00b5m) mixing ratio.\nUnit: kg/kg"
          },
          "no2_surface": {
            "title": "No2 Surface",
            "type": "number",
            "description": "Nitrogen dioxide at surface level.\nUnit: \u00b5g/m3"
          },
          "no_surface": {
            "title": "No Surface",
            "type": "number",
            "description": "Nitrogen monoxide at surface level.\nUnit: \u00b5g/m3"
          },
          "ozone_surface": {
            "title": "Ozone Surface",
            "type": "number",
            "description": "Ozone.\nUnit: \u00b5g/m3"
          },
          "ozone_total": {
            "title": "Ozone Total",
            "type": "number",
            "description": "Total column ozone.\nUnit: Dobson"
          },
          "pm10": {
            "title": "Pm10",
            "type": "number",
            "description": "Particulate matter d < 10 \u00b5m (PM10).\nUnit: \u00b5g/m3"
          },
          "pm25": {
            "title": "Pm25",
            "type": "number",
            "description": "Particulate matter d < 2.5 \u00b5m (PM2.5).\nUnit: \u00b5g/m3"
          },
          "so2_surface": {
            "title": "So2 Surface",
            "type": "number",
            "description": "Sulphur dioxide at surface level.\nUnit: \u00b5g/m3"
          }
        }
      },
      "FindPlacesModel": {
        "title": "FindPlacesModel",
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "description": "name of the place",
            "default": "London"
          },
          "place_id": {
            "title": "Place Id",
            "type": "string",
            "description": "unique identifier of the place, which can be used in /point and /map endpoints",
            "default": "london"
          },
          "adm_area1": {
            "title": "Adm Area1",
            "type": "string",
            "description": "first-level administrative area (a US state, for example)",
            "default": "England"
          },
          "adm_area2": {
            "title": "Adm Area2",
            "type": "string",
            "description": "second-level administrative area (a US county, for example)",
            "default": "Greater London"
          },
          "country": {
            "title": "Country",
            "type": "string",
            "description": "name of the country",
            "default": "United Kingdom"
          },
          "lat": {
            "title": "Lat",
            "type": "string",
            "description": "Latitude of the point, always in the format \\<float><N/S>, for example ``23.5S``",
            "default": "23.2N"
          },
          "lon": {
            "title": "Lon",
            "type": "string",
            "description": "Longitude of the point, always in format \\<float><E/W>, for example ``23.5W``",
            "default": "15.3E"
          },
          "timezone": {
            "title": "Timezone",
            "type": "string",
            "description": "Timezone of the point in tzinfo format.",
            "default": "Europe/London"
          },
          "type": {
            "title": "Type",
            "type": "string",
            "description": "The character of the place. May be one of the following values:\n \n* administrative areas (states, counties, districts...): ``administrative_area``\n * country: ``country``\n* a different political entity from a country (for example, a dependent teritory): ``political_entity``\n* villages, towns and cities: ``settlement``\n* air industry locations: ``airbase``, ``airfield``, ``heliport``, ``airport``, ``airport_terminal``\n* places related to water: ``bay``, ``channel``, ``fjord``, ``lake``, ``pond``, ``falls``, ``gulf``,\n    ``harbor``, ``reservoir``, ``sea``, ``dam``, ``cape``, ``island``, ``peninsula``\n* places related to mountain areas: ``hill``, ``mountain``, ``peak``, ``valley``, ``volcano``, ``canyon``\n * other places related to nature: ``park``, ``reserve``, ``resort``, ``desert``\n * places based on postcodes: ``postcode``\n        ",
            "default": "settlement"
          }
        }
      },
      "GeneralRequestError": {
        "title": "GeneralRequestError",
        "required": [
          "detail"
        ],
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "string"
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "Language": {
        "title": "Language",
        "enum": [
          "cs",
          "en",
          "de",
          "es",
          "fr",
          "pl",
          "pt"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "Point_PointAlerts": {
        "title": "Point_PointAlerts",
        "type": "object",
        "properties": {
          "data": {
            "title": "Data",
            "type": "string"
          }
        }
      },
      "Point_PointCurrentData": {
        "title": "Point_PointCurrentData",
        "required": [
          "wind",
          "precipitation",
          "probability"
        ],
        "type": "object",
        "properties": {
          "icon": {
            "title": "Icon",
            "type": "string",
            "description": "String identifier of current weather icon, e.g. `light_rain`."
          },
          "icon_num": {
            "title": "Icon Num",
            "type": "integer",
            "description": "Numeric identifier of current weather icon. The following values can appear:\n\n* 1 - Not available\n* 2 - Sunny\n* 3 - Mostly sunny\n * 4 - Partly sunny\n* 5 - Mostly cloudy\n* 6 - Cloudy\n* 7 - Overcast\n * 8 - Overcast with low clouds\n* 9 - Fog\n* 10 - Light rain\n* 11 - Rain\n * 12 - Possible rain\n* 13 - Rain shower\n* 14 - Thunderstorm\n* 15 - Local thunderstorms\n* 16 - Light snow\n* 17 - Snow\n* 18 - Possible snow\n * 19 - Snow shower\n* 20 - Rain and snow\n* 21 - Possible rain and snow\n * 22 - Rain and snow\n* 23 - Freezing rain\n* 24 - Possible freezing rain\n * 25 - Hail\n* 26 - Clear (night)\n* 27 - Mostly clear (night)\n* 28 - Partly clear (night)\n* 29 - Mostly cloudy (night)\n* 30 - Cloudy (night)\n * 31 - Overcast with low clouds (night)\n* 32 - Rain shower (night)\n * 33 - Local thunderstorms (night)\n* 34 - Snow shower (night)\n* 35 - Rain and snow (night)\n* 36 - Possible freezing rain (night)\n\nUnit: weather_ico0_36"
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "Short text summary of current weather, e.g. `Light rain`."
          },
          "temperature": {
            "title": "Temperature",
            "type": "number",
            "description": "Current temperature 2 metres above ground.\nUnits: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "feels_like": {
            "title": "Feels Like",
            "type": "number",
            "description": "Feels like temperature.\nUnits: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "soil_temperature": {
            "title": "Soil Temperature",
            "type": "number",
            "description": "Soil temperature.\nUnits: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "wind_chill": {
            "title": "Wind Chill",
            "type": "number",
            "description": "Windchill temperature.\nUnits: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "surface_temperature": {
            "title": "Surface Temperature",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "dew_point": {
            "title": "Dew Point",
            "type": "number",
            "description": "Current dew point temperature.\nUnits: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "wind": {
            "$ref": "#/components/schemas/Point_PointCurrentWindData"
          },
          "precipitation": {
            "$ref": "#/components/schemas/Point_PointCurrentPrecipitationData"
          },
          "probability": {
            "$ref": "#/components/schemas/Point_PointCurrentProbData"
          },
          "cloud_cover": {
            "title": "Cloud Cover",
            "type": "number",
            "description": "Percentage of sky covered by clouds.\nUnit: \\%"
          },
          "cape": {
            "title": "Cape",
            "type": "number",
            "description": "Convective available potential energy.\nUnit: J/kg"
          },
          "evaporation": {
            "title": "Evaporation",
            "type": "number",
            "description": "Evaporation of liquid water into water vapor.\nUnit: mm/h"
          },
          "lftx": {
            "title": "Lftx",
            "type": "number",
            "description": "Surface lifted index.\nUnit: K"
          },
          "snow_depth": {
            "title": "Snow Depth",
            "type": "number",
            "description": "Snow depth.\nUnits: metric = cm, us = inch, uk = cm, ca = cm"
          },
          "sunshine_duration": {
            "title": "Sunshine Duration",
            "type": "number",
            "description": "Sunshine duration since start of previous hour.\nUnit: s"
          },
          "irradiance": {
            "title": "Irradiance",
            "type": "number",
            "description": "Global downward short-wave radiation flux.\nUnit: W/m2"
          },
          "ozone": {
            "title": "Ozone",
            "type": "number",
            "description": "Total column of ozone.\nUnit: Dobson"
          },
          "pressure": {
            "title": "Pressure",
            "type": "number",
            "description": "Atmospheric pressure at mean sea level.\nUnits: metric = hPa, us = Hg, uk = hPa, ca = kPa"
          },
          "uv_index": {
            "title": "Uv Index",
            "type": "number",
            "description": "UV index, values from zero (low risk of harm) to 11+ (extreme risk of harm).\nUnit: uv_index"
          },
          "humidity": {
            "title": "Humidity",
            "type": "integer",
            "description": "Relative humidity.\nUnit: \\%"
          },
          "visibility": {
            "title": "Visibility",
            "type": "number",
            "description": "Visibility.\nUnits: metric = km, us = mi, uk = mi, ca = km"
          }
        }
      },
      "Point_PointCurrentPrecipitationData": {
        "title": "Point_PointCurrentPrecipitationData",
        "type": "object",
        "properties": {
          "total": {
            "title": "Total",
            "type": "number",
            "description": "Current amount of precipitation.\nUnits: metric = mm/h, us = inches per hour, uk = mm/h, ca = mm/h"
          },
          "type": {
            "title": "Type",
            "type": "string",
            "description": "Precipitation type, may be one of:\n\n* `none`, it there is no precipitation\n* `rain`\n* `snow`\n* `rain_snow`\n* `ice pellets`\n * `frozen rain`\n\nUnit: prec_str",
            "format": "binary"
          },
          "convective": {
            "title": "Convective",
            "type": "number",
            "description": "Total precipitation amount accumulated since last hour.\n Units: metric = mm/h, us = inches per hour, uk = mm/h, ca = mm/h"
          },
          "rainspot": {
            "title": "Rainspot",
            "type": "string",
            "description": "Precipitation in the surrounding of queried location. The data is 7x7 ASCII art string, queried location being in the center. Character `#` means there is precipitation, `.` means no precipitation. The distance between neighboring cells is 0.25\u00b0.\nUnit: rainspot",
            "format": "binary"
          }
        }
      },
      "Point_PointCurrentProbData": {
        "title": "Point_PointCurrentProbData",
        "type": "object",
        "properties": {
          "precipitation": {
            "title": "Precipitation",
            "type": "integer",
            "description": "Probability of non-zero precipitation.\nUnit: \\%"
          },
          "storm": {
            "title": "Storm",
            "type": "number",
            "description": "Storm probability.\nUnit: \\%"
          },
          "freeze": {
            "title": "Freeze",
            "type": "number",
            "description": "Probability the temperature drops below 0 \u00b0C.\nUnit: \\%"
          }
        }
      },
      "Point_PointCurrentWindData": {
        "title": "Point_PointCurrentWindData",
        "type": "object",
        "properties": {
          "speed": {
            "title": "Speed",
            "type": "number",
            "description": "Wind speed 10 metres above the ground.\nUnits: metric = m/s, us = mph, uk = mph, ca = km/h"
          },
          "gusts": {
            "title": "Gusts",
            "type": "number",
            "description": "Wind gust speed.\nUnits: metric = m/s, us = mph, uk = mph, ca = km/h"
          },
          "angle": {
            "title": "Angle",
            "type": "number",
            "description": "Wind direction angle in degrees, 180\u00b0 means wind from the south.\nUnit: degrees"
          },
          "dir": {
            "title": "Dir",
            "type": "string",
            "description": "Wind direction in `N`, `NNE`, `NE`, ..., `NNW` format.\nUnit: 16dir",
            "format": "binary"
          }
        }
      },
      "Point_PointDaily": {
        "title": "Point_PointDaily",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "Data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Point_PointDailyData"
            }
          }
        }
      },
      "Point_PointDailyAfternoonCloudCoverData": {
        "title": "Point_PointDailyAfternoonCloudCoverData",
        "type": "object",
        "properties": {
          "total": {
            "title": "Total",
            "type": "number",
            "description": "Percentage of sky covered by clouds. (afternoon avg)\nUnit: \\%"
          },
          "low": {
            "title": "Low",
            "type": "number",
            "description": "Unit: %"
          },
          "middle": {
            "title": "Middle",
            "type": "number",
            "description": "Unit: %"
          },
          "high": {
            "title": "High",
            "type": "number",
            "description": "Unit: %"
          }
        }
      },
      "Point_PointDailyAfternoonData": {
        "title": "Point_PointDailyAfternoonData",
        "required": [
          "wind",
          "cloud_cover",
          "precipitation",
          "probability"
        ],
        "type": "object",
        "properties": {
          "weather": {
            "title": "Weather",
            "type": "string",
            "description": "Afternoon day string identifier of the weather icon, e.g. `light_rain`."
          },
          "icon": {
            "title": "Icon",
            "type": "integer",
            "description": "Afternoon umeric identifier of the weather icon. The following values can appear:\n\n* 1 - Not available\n* 2 - Sunny\n* 3 - Mostly sunny\n * 4 - Partly sunny\n* 5 - Mostly cloudy\n* 6 - Cloudy\n* 7 - Overcast\n * 8 - Overcast with low clouds\n* 9 - Fog\n* 10 - Light rain\n* 11 - Rain\n * 12 - Possible rain\n* 13 - Rain shower\n* 14 - Thunderstorm\n* 15 - Local thunderstorms\n* 16 - Light snow\n* 17 - Snow\n* 18 - Possible snow\n * 19 - Snow shower\n* 20 - Rain and snow\n* 21 - Possible rain and snow\n * 22 - Rain and snow\n* 23 - Freezing rain\n* 24 - Possible freezing rain\n * 25 - Hail\n* 26 - Clear (night)\n* 27 - Mostly clear (night)\n* 28 - Partly clear (night)\n* 29 - Mostly cloudy (night)\n* 30 - Cloudy (night)\n * 31 - Overcast with low clouds (night)\n* 32 - Rain shower (night)\n * 33 - Local thunderstorms (night)\n* 34 - Snow shower (night)\n* 35 - Rain and snow (night)\n* 36 - Possible freezing rain (night)\n\nUnit: icon"
          },
          "temperature": {
            "title": "Temperature",
            "type": "number",
            "description": "Temperature 2 metres above ground. (afternoon avg)\nUnits: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "feels_like": {
            "title": "Feels Like",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "soil_temperature": {
            "title": "Soil Temperature",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "wind_chill": {
            "title": "Wind Chill",
            "type": "number",
            "description": "Temperature 2 metres above ground. (afternoon avg)\nUnits: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "dew_point": {
            "title": "Dew Point",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "surface_temperature": {
            "title": "Surface Temperature",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "wind": {
            "$ref": "#/components/schemas/Point_PointDailyAfternoonWindData"
          },
          "cloud_cover": {
            "$ref": "#/components/schemas/Point_PointDailyAfternoonCloudCoverData"
          },
          "pressure": {
            "title": "Pressure",
            "type": "number",
            "description": "Atmospheric pressure at mean sea level. (afternoon avg)\n Units: metric = hPa, us = Hg, uk = hPa, ca = kPa"
          },
          "precipitation": {
            "$ref": "#/components/schemas/Point_PointDailyAfternoonPrecipitationData"
          },
          "probability": {
            "$ref": "#/components/schemas/Point_PointDailyAfternoonProbData"
          },
          "ozone": {
            "title": "Ozone",
            "type": "number",
            "description": "Total column of ozone. (afternoon avg)\nUnit: Dobson"
          },
          "humidity": {
            "title": "Humidity",
            "type": "integer",
            "description": "Relative humidity. (afternoon avg)\nUnit: \\%"
          },
          "snow_depth": {
            "title": "Snow Depth",
            "type": "number",
            "description": "Snow depth. (afternoon avg)\nUnits: metric = cm, us = inch, uk = cm, ca = cm"
          },
          "visibility": {
            "title": "Visibility",
            "type": "number",
            "description": "Visibility. (afternoon avg)\nUnits: metric = km, us = mi, uk = mi, ca = km"
          }
        }
      },
      "Point_PointDailyAfternoonPrecipitationData": {
        "title": "Point_PointDailyAfternoonPrecipitationData",
        "type": "object",
        "properties": {
          "total": {
            "title": "Total",
            "type": "number",
            "description": "Total precipitation amount accumulated since last hour. (afternoon sum)\nUnits: metric = mm/h, us = inches per hour, uk = mm/h, ca = mm/h"
          },
          "type": {
            "title": "Type",
            "type": "string",
            "description": "Precipitation type, may be one of:\n\n* `none`, it there is no precipitation\n* `rain`\n* `snow`\n* `rain_snow`\n* `ice pellets`\n * `frozen rain`\n\nUnit: precipitation type",
            "format": "binary"
          }
        }
      },
      "Point_PointDailyAfternoonProbData": {
        "title": "Point_PointDailyAfternoonProbData",
        "type": "object",
        "properties": {
          "precipitation": {
            "title": "Precipitation",
            "type": "integer",
            "description": "Probability of non-zero precipitation.\nUnit: \\%"
          },
          "storm": {
            "title": "Storm",
            "type": "number",
            "description": "Total precipitation amount accumulated since last hour.\n Unit: mm/h"
          },
          "freeze": {
            "title": "Freeze",
            "type": "number",
            "description": "Probability the temperature drops below 0 \u00b0C. (afternoon avg)\n Unit: %"
          }
        }
      },
      "Point_PointDailyAfternoonWindData": {
        "title": "Point_PointDailyAfternoonWindData",
        "type": "object",
        "properties": {
          "speed": {
            "title": "Speed",
            "type": "number",
            "description": "Units: metric = m/s, us = mph, uk = mph, ca = km/h"
          },
          "gusts": {
            "title": "Gusts",
            "type": "number",
            "description": "Units: metric = m/s, us = mph, uk = mph, ca = km/h"
          },
          "dir": {
            "title": "Dir",
            "type": "string",
            "description": "Afternoon wind direction in `N`, `NNE`, `NE`, ..., `NNW` format.\n Unit: 16dir",
            "format": "binary"
          },
          "angle": {
            "title": "Angle",
            "type": "number",
            "description": "Afternoon wind direction angle in degrees, 180\u00b0 means wind from the south.\nUnit: degrees"
          }
        }
      },
      "Point_PointDailyAllDayCloudCoverData": {
        "title": "Point_PointDailyAllDayCloudCoverData",
        "type": "object",
        "properties": {
          "total": {
            "title": "Total",
            "type": "number",
            "description": "Percentage of sky covered by clouds. (allday avg)\nUnit: \\%"
          },
          "low": {
            "title": "Low",
            "type": "number",
            "description": "Unit: %"
          },
          "middle": {
            "title": "Middle",
            "type": "number",
            "description": "Unit: %"
          },
          "high": {
            "title": "High",
            "type": "number",
            "description": "Unit: %"
          }
        }
      },
      "Point_PointDailyAllDayData": {
        "title": "Point_PointDailyAllDayData",
        "required": [
          "wind",
          "cloud_cover",
          "precipitation",
          "probability"
        ],
        "type": "object",
        "properties": {
          "weather": {
            "title": "Weather",
            "type": "string",
            "description": "All day string identifier of the weather icon, e.g. `light_rain`."
          },
          "icon": {
            "title": "Icon",
            "type": "integer",
            "description": "Numeric identifier of the weather icon. The following values can appear:\n\n* 1 - Not available\n* 2 - Sunny\n* 3 - Mostly sunny\n * 4 - Partly sunny\n* 5 - Mostly cloudy\n* 6 - Cloudy\n* 7 - Overcast\n * 8 - Overcast with low clouds\n* 9 - Fog\n* 10 - Light rain\n* 11 - Rain\n * 12 - Possible rain\n* 13 - Rain shower\n* 14 - Thunderstorm\n* 15 - Local thunderstorms\n* 16 - Light snow\n* 17 - Snow\n* 18 - Possible snow\n * 19 - Snow shower\n* 20 - Rain and snow\n* 21 - Possible rain and snow\n * 22 - Rain and snow\n* 23 - Freezing rain\n* 24 - Possible freezing rain\n * 25 - Hail\n* 26 - Clear (night)\n* 27 - Mostly clear (night)\n* 28 - Partly clear (night)\n* 29 - Mostly cloudy (night)\n* 30 - Cloudy (night)\n * 31 - Overcast with low clouds (night)\n* 32 - Rain shower (night)\n * 33 - Local thunderstorms (night)\n* 34 - Snow shower (night)\n* 35 - Rain and snow (night)\n* 36 - Possible freezing rain (night)\n\nUnit: icon"
          },
          "temperature": {
            "title": "Temperature",
            "type": "number",
            "description": "Temperature 2 metres above ground. (allday avg)\nUnits: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "temperature_min": {
            "title": "Temperature Min",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "temperature_max": {
            "title": "Temperature Max",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "feels_like": {
            "title": "Feels Like",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "feels_like_min": {
            "title": "Feels Like Min",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "feels_like_max": {
            "title": "Feels Like Max",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "soil_temperature": {
            "title": "Soil Temperature",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "soil_temperature_min": {
            "title": "Soil Temperature Min",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "soil_temperature_max": {
            "title": "Soil Temperature Max",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "wind_chill": {
            "title": "Wind Chill",
            "type": "number",
            "description": "Temperature 2 metres above ground. (allday avg)\nUnits: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "wind_chill_min": {
            "title": "Wind Chill Min",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "wind_chill_max": {
            "title": "Wind Chill Max",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "dew_point": {
            "title": "Dew Point",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "dew_point_min": {
            "title": "Dew Point Min",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "dew_point_max": {
            "title": "Dew Point Max",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "surface_temperature": {
            "title": "Surface Temperature",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "surface_temperature_min": {
            "title": "Surface Temperature Min",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "surface_temperature_max": {
            "title": "Surface Temperature Max",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "wind": {
            "$ref": "#/components/schemas/Point_PointDailyAllDayWindData"
          },
          "cloud_cover": {
            "$ref": "#/components/schemas/Point_PointDailyAllDayCloudCoverData"
          },
          "pressure": {
            "title": "Pressure",
            "type": "number",
            "description": "Atmospheric pressure at mean sea level. (allday avg)\nUnits: metric = hPa, us = Hg, uk = hPa, ca = kPa"
          },
          "precipitation": {
            "$ref": "#/components/schemas/Point_PointDailyAllDayPrecipitationData"
          },
          "probability": {
            "$ref": "#/components/schemas/Point_PointDailyAllDayProbData"
          },
          "ozone": {
            "title": "Ozone",
            "type": "number",
            "description": "Total column of ozone. (allday avg)\nUnit: Dobson"
          },
          "humidity": {
            "title": "Humidity",
            "type": "integer",
            "description": "Relative humidity. (allday avg)\nUnit: \\%"
          },
          "snow_depth": {
            "title": "Snow Depth",
            "type": "number",
            "description": "Snow depth. (allday avg)\nUnits: metric = cm, us = inch, uk = cm, ca = cm"
          },
          "visibility": {
            "title": "Visibility",
            "type": "number",
            "description": "Visibility. (allday avg)\nUnits: metric = km, us = mi, uk = mi, ca = km"
          }
        }
      },
      "Point_PointDailyAllDayPrecipitationData": {
        "title": "Point_PointDailyAllDayPrecipitationData",
        "type": "object",
        "properties": {
          "total": {
            "title": "Total",
            "type": "number",
            "description": "Total precipitation amount accumulated since last hour. (allday sum)\nUnits: metric = mm/h, us = inches per hour, uk = mm/h, ca = mm/h"
          },
          "type": {
            "title": "Type",
            "type": "string",
            "description": "Precipitation type, may be one of:\n\n* `none`, it there is no precipitation\n* `rain`\n* `snow`\n* `rain_snow`\n* `ice pellets`\n * `frozen rain`\n\nUnit: precipitation type",
            "format": "binary"
          }
        }
      },
      "Point_PointDailyAllDayProbData": {
        "title": "Point_PointDailyAllDayProbData",
        "type": "object",
        "properties": {
          "precipitation": {
            "title": "Precipitation",
            "type": "integer",
            "description": "Probability of non-zero precipitation.\nUnit: \\%"
          },
          "storm": {
            "title": "Storm",
            "type": "number",
            "description": "Total precipitation amount accumulated since last hour.\n Unit: mm/h"
          },
          "freeze": {
            "title": "Freeze",
            "type": "number",
            "description": "Probability the temperature drops below 0 \u00b0C. (allday avg)\n Unit: %"
          }
        }
      },
      "Point_PointDailyAllDayWindData": {
        "title": "Point_PointDailyAllDayWindData",
        "type": "object",
        "properties": {
          "speed": {
            "title": "Speed",
            "type": "number",
            "description": "Units: metric = m/s, us = mph, uk = mph, ca = km/h"
          },
          "gusts": {
            "title": "Gusts",
            "type": "number",
            "description": "Units: metric = m/s, us = mph, uk = mph, ca = km/h"
          },
          "dir": {
            "title": "Dir",
            "type": "string",
            "description": "All day wind direction in `N`, `NNE`, `NE`, ..., `NNW` format.\n Unit: 16dir",
            "format": "binary"
          },
          "angle": {
            "title": "Angle",
            "type": "number",
            "description": "All day wind direction angle in degrees, 180\u00b0 means wind from the south.\nUnit: degrees"
          }
        }
      },
      "Point_PointDailyAstroData": {
        "title": "Point_PointDailyAstroData",
        "required": [
          "sun",
          "moon"
        ],
        "type": "object",
        "properties": {
          "sun": {
            "$ref": "#/components/schemas/Point_PointDailySunData"
          },
          "moon": {
            "$ref": "#/components/schemas/Point_PointDailyMoonData"
          }
        }
      },
      "Point_PointDailyData": {
        "title": "Point_PointDailyData",
        "required": [
          "all_day",
          "astro",
          "statistics"
        ],
        "type": "object",
        "properties": {
          "day": {
            "title": "Day",
            "type": "string",
            "description": "Datetime in YYYY-MM-DDTHH:MM:SS format.",
            "format": "binary"
          },
          "weather": {
            "title": "Weather",
            "type": "string",
            "description": "All day string identifier of the weather icon, e.g. `light_rain`."
          },
          "icon": {
            "title": "Icon",
            "type": "integer",
            "description": "Numeric identifier of the weather icon. The following values can appear:\n\n* 1 - Not available\n* 2 - Sunny\n* 3 - Mostly sunny\n * 4 - Partly sunny\n* 5 - Mostly cloudy\n* 6 - Cloudy\n* 7 - Overcast\n * 8 - Overcast with low clouds\n* 9 - Fog\n* 10 - Light rain\n* 11 - Rain\n * 12 - Possible rain\n* 13 - Rain shower\n* 14 - Thunderstorm\n* 15 - Local thunderstorms\n* 16 - Light snow\n* 17 - Snow\n* 18 - Possible snow\n * 19 - Snow shower\n* 20 - Rain and snow\n* 21 - Possible rain and snow\n * 22 - Rain and snow\n* 23 - Freezing rain\n* 24 - Possible freezing rain\n * 25 - Hail\n* 26 - Clear (night)\n* 27 - Mostly clear (night)\n* 28 - Partly clear (night)\n* 29 - Mostly cloudy (night)\n* 30 - Cloudy (night)\n * 31 - Overcast with low clouds (night)\n* 32 - Rain shower (night)\n * 33 - Local thunderstorms (night)\n* 34 - Snow shower (night)\n* 35 - Rain and snow (night)\n* 36 - Possible freezing rain (night)\n\nUnit: icon"
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "Short text summary of the weather, e.g. `Light rain`."
          },
          "predictability": {
            "title": "Predictability",
            "type": "integer",
            "description": "Weather predictability. Values from 1 (very high predictability) to 5 (very low predictability).\nUnit: 1-5"
          },
          "all_day": {
            "$ref": "#/components/schemas/Point_PointDailyAllDayData"
          },
          "morning": {
            "$ref": "#/components/schemas/Point_PointDailyMorningData"
          },
          "afternoon": {
            "$ref": "#/components/schemas/Point_PointDailyAfternoonData"
          },
          "evening": {
            "$ref": "#/components/schemas/Point_PointDailyEveningData"
          },
          "astro": {
            "$ref": "#/components/schemas/Point_PointDailyAstroData"
          },
          "statistics": {
            "$ref": "#/components/schemas/Point_PointDailyStatsData"
          }
        }
      },
      "Point_PointDailyEveningCloudCoverData": {
        "title": "Point_PointDailyEveningCloudCoverData",
        "type": "object",
        "properties": {
          "total": {
            "title": "Total",
            "type": "number",
            "description": "Percentage of sky covered by clouds. (evening avg)\nUnit: \\%"
          },
          "low": {
            "title": "Low",
            "type": "number",
            "description": "Unit: %"
          },
          "middle": {
            "title": "Middle",
            "type": "number",
            "description": "Unit: %"
          },
          "high": {
            "title": "High",
            "type": "number",
            "description": "Unit: %"
          }
        }
      },
      "Point_PointDailyEveningData": {
        "title": "Point_PointDailyEveningData",
        "required": [
          "wind",
          "cloud_cover",
          "precipitation",
          "probability"
        ],
        "type": "object",
        "properties": {
          "weather": {
            "title": "Weather",
            "type": "string",
            "description": "Evening day string identifier of the weather icon, e.g. `light_rain`."
          },
          "icon": {
            "title": "Icon",
            "type": "integer",
            "description": "Evening numeric identifier of the weather icon. The following values can appear:\n\n* 1 - Not available\n* 2 - Sunny\n* 3 - Mostly sunny\n * 4 - Partly sunny\n* 5 - Mostly cloudy\n* 6 - Cloudy\n* 7 - Overcast\n * 8 - Overcast with low clouds\n* 9 - Fog\n* 10 - Light rain\n* 11 - Rain\n * 12 - Possible rain\n* 13 - Rain shower\n* 14 - Thunderstorm\n* 15 - Local thunderstorms\n* 16 - Light snow\n* 17 - Snow\n* 18 - Possible snow\n * 19 - Snow shower\n* 20 - Rain and snow\n* 21 - Possible rain and snow\n * 22 - Rain and snow\n* 23 - Freezing rain\n* 24 - Possible freezing rain\n * 25 - Hail\n* 26 - Clear (night)\n* 27 - Mostly clear (night)\n* 28 - Partly clear (night)\n* 29 - Mostly cloudy (night)\n* 30 - Cloudy (night)\n * 31 - Overcast with low clouds (night)\n* 32 - Rain shower (night)\n * 33 - Local thunderstorms (night)\n* 34 - Snow shower (night)\n* 35 - Rain and snow (night)\n* 36 - Possible freezing rain (night)\n\nUnit: icon"
          },
          "temperature": {
            "title": "Temperature",
            "type": "number",
            "description": "Temperature 2 metres above ground. (evening avg)\nUnits: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "feels_like": {
            "title": "Feels Like",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "soil_temperature": {
            "title": "Soil Temperature",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "wind_chill": {
            "title": "Wind Chill",
            "type": "number",
            "description": "Temperature 2 metres above ground. (evening avg)\nUnits: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "dew_point": {
            "title": "Dew Point",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "surface_temperature": {
            "title": "Surface Temperature",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "wind": {
            "$ref": "#/components/schemas/Point_PointDailyEveningWindData"
          },
          "cloud_cover": {
            "$ref": "#/components/schemas/Point_PointDailyEveningCloudCoverData"
          },
          "pressure": {
            "title": "Pressure",
            "type": "number",
            "description": "Atmospheric pressure at mean sea level. (evening avg)\nUnits: metric = hPa, us = Hg, uk = hPa, ca = kPa"
          },
          "precipitation": {
            "$ref": "#/components/schemas/Point_PointDailyEveningPrecipitationData"
          },
          "probability": {
            "$ref": "#/components/schemas/Point_PointDailyEveningProbData"
          },
          "ozone": {
            "title": "Ozone",
            "type": "number",
            "description": "Total column of ozone. (evening avg)\nUnit: Dobson"
          },
          "humidity": {
            "title": "Humidity",
            "type": "integer",
            "description": "Relative humidity. (evening avg)\nUnit: \\%"
          },
          "snow_depth": {
            "title": "Snow Depth",
            "type": "number",
            "description": "Snow depth. (evening avg)\nUnits: metric = cm, us = inch, uk = cm, ca = cm"
          },
          "visibility": {
            "title": "Visibility",
            "type": "number",
            "description": "Visibility. (evening avg)\nUnits: metric = km, us = mi, uk = mi, ca = km"
          }
        }
      },
      "Point_PointDailyEveningPrecipitationData": {
        "title": "Point_PointDailyEveningPrecipitationData",
        "type": "object",
        "properties": {
          "total": {
            "title": "Total",
            "type": "number",
            "description": "Total precipitation amount accumulated since last hour. (evening sum)\nUnits: metric = mm/h, us = inches per hour, uk = mm/h, ca = mm/h"
          },
          "type": {
            "title": "Type",
            "type": "string",
            "description": "Precipitation type, may be one of:\n\n* `none`, it there is no precipitation\n* `rain`\n* `snow`\n* `rain_snow`\n* `ice pellets`\n * `frozen rain`\n\nUnit: precipitation type",
            "format": "binary"
          }
        }
      },
      "Point_PointDailyEveningProbData": {
        "title": "Point_PointDailyEveningProbData",
        "type": "object",
        "properties": {
          "precipitation": {
            "title": "Precipitation",
            "type": "integer",
            "description": "Probability of non-zero precipitation.\nUnit: \\%"
          },
          "storm": {
            "title": "Storm",
            "type": "number",
            "description": "Total precipitation amount accumulated since last hour.\n Unit: mm/h"
          },
          "freeze": {
            "title": "Freeze",
            "type": "number",
            "description": "Probability the temperature drops below 0 \u00b0C. (evening avg)\n Unit: %"
          }
        }
      },
      "Point_PointDailyEveningWindData": {
        "title": "Point_PointDailyEveningWindData",
        "type": "object",
        "properties": {
          "speed": {
            "title": "Speed",
            "type": "number",
            "description": "Units: metric = m/s, us = mph, uk = mph, ca = km/h"
          },
          "gusts": {
            "title": "Gusts",
            "type": "number",
            "description": "Units: metric = m/s, us = mph, uk = mph, ca = km/h"
          },
          "dir": {
            "title": "Dir",
            "type": "string",
            "description": "Evening wind direction in `N`, `NNE`, `NE`, ..., `NNW` format.\n Unit: 16dir",
            "format": "binary"
          },
          "angle": {
            "title": "Angle",
            "type": "number",
            "description": "Evening wind direction angle in degrees, 180\u00b0 means wind from the south.\nUnit: degrees"
          }
        }
      },
      "Point_PointDailyMoonData": {
        "title": "Point_PointDailyMoonData",
        "type": "object",
        "properties": {
          "phase": {
            "title": "Phase",
            "type": "string",
            "description": "Name of the moon phase, one of 'new_moon', 'first_quarter', 'full_moon', 'last_quarter'.",
            "format": "binary"
          },
          "rise": {
            "title": "Rise",
            "type": "string",
            "description": "Datetime of the moonrise or null if the moon does not rise on given day.",
            "format": "date-time",
            "example": "2022-03-30T18:00:00"
          },
          "set": {
            "title": "Set",
            "type": "string",
            "description": "Datetime of the moonset or null if the moon does not set on given day.",
            "format": "date-time",
            "example": "2022-03-30T18:00:00"
          },
          "always_up": {
            "title": "Always Up",
            "type": "boolean",
            "description": "True if the moon never sets on given day, false otherwise."
          },
          "always_down": {
            "title": "Always Down",
            "type": "boolean",
            "description": "True if the moon never rises on given day, false otherwise."
          }
        }
      },
      "Point_PointDailyMorningCloudCoverData": {
        "title": "Point_PointDailyMorningCloudCoverData",
        "type": "object",
        "properties": {
          "total": {
            "title": "Total",
            "type": "number",
            "description": "Percentage of sky covered by clouds. (morning avg)\nUnit: \\%"
          },
          "low": {
            "title": "Low",
            "type": "number",
            "description": "Unit: %"
          },
          "middle": {
            "title": "Middle",
            "type": "number",
            "description": "Unit: %"
          },
          "high": {
            "title": "High",
            "type": "number",
            "description": "Unit: %"
          }
        }
      },
      "Point_PointDailyMorningData": {
        "title": "Point_PointDailyMorningData",
        "required": [
          "wind",
          "cloud_cover",
          "precipitation",
          "probability"
        ],
        "type": "object",
        "properties": {
          "weather": {
            "title": "Weather",
            "type": "string",
            "description": "Morning day string identifier of the weather icon, e.g. `light_rain`."
          },
          "icon": {
            "title": "Icon",
            "type": "integer",
            "description": "Morning numeric identifier of the weather icon. The following values can appear:\n\n* 1 - Not available\n* 2 - Sunny\n* 3 - Mostly sunny\n * 4 - Partly sunny\n* 5 - Mostly cloudy\n* 6 - Cloudy\n* 7 - Overcast\n * 8 - Overcast with low clouds\n* 9 - Fog\n* 10 - Light rain\n* 11 - Rain\n * 12 - Possible rain\n* 13 - Rain shower\n* 14 - Thunderstorm\n* 15 - Local thunderstorms\n* 16 - Light snow\n* 17 - Snow\n* 18 - Possible snow\n * 19 - Snow shower\n* 20 - Rain and snow\n* 21 - Possible rain and snow\n * 22 - Rain and snow\n* 23 - Freezing rain\n* 24 - Possible freezing rain\n * 25 - Hail\n* 26 - Clear (night)\n* 27 - Mostly clear (night)\n* 28 - Partly clear (night)\n* 29 - Mostly cloudy (night)\n* 30 - Cloudy (night)\n * 31 - Overcast with low clouds (night)\n* 32 - Rain shower (night)\n * 33 - Local thunderstorms (night)\n* 34 - Snow shower (night)\n* 35 - Rain and snow (night)\n* 36 - Possible freezing rain (night)\n\nUnit: icon"
          },
          "temperature": {
            "title": "Temperature",
            "type": "number",
            "description": "Temperature 2 metres above ground. (morning avg)\nUnits: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "feels_like": {
            "title": "Feels Like",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "soil_temperature": {
            "title": "Soil Temperature",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "wind_chill": {
            "title": "Wind Chill",
            "type": "number",
            "description": "Temperature 2 metres above ground. (morning avg)\nUnits: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "dew_point": {
            "title": "Dew Point",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "surface_temperature": {
            "title": "Surface Temperature",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "wind": {
            "$ref": "#/components/schemas/Point_PointDailyMorningWindData"
          },
          "cloud_cover": {
            "$ref": "#/components/schemas/Point_PointDailyMorningCloudCoverData"
          },
          "pressure": {
            "title": "Pressure",
            "type": "number",
            "description": "Atmospheric pressure at mean sea level. (morning avg)\nUnits: metric = hPa, us = Hg, uk = hPa, ca = kPa"
          },
          "precipitation": {
            "$ref": "#/components/schemas/Point_PointDailyMorningPrecipitationData"
          },
          "probability": {
            "$ref": "#/components/schemas/Point_PointDailyMorningProbData"
          },
          "ozone": {
            "title": "Ozone",
            "type": "number",
            "description": "Total column of ozone. (morning avg)\nUnit: Dobson"
          },
          "humidity": {
            "title": "Humidity",
            "type": "integer",
            "description": "Relative humidity. (morning avg)\nUnit: \\%"
          },
          "snow_depth": {
            "title": "Snow Depth",
            "type": "number",
            "description": "Snow depth. (morning avg)\nUnits: metric = cm, us = inch, uk = cm, ca = cm"
          },
          "visibility": {
            "title": "Visibility",
            "type": "number",
            "description": "Visibility. (morning avg)\nUnits: metric = km, us = mi, uk = mi, ca = km"
          }
        }
      },
      "Point_PointDailyMorningPrecipitationData": {
        "title": "Point_PointDailyMorningPrecipitationData",
        "type": "object",
        "properties": {
          "total": {
            "title": "Total",
            "type": "number",
            "description": "Total precipitation amount accumulated since last hour. (morning sum)\nUnits: metric = mm/h, us = inches per hour, uk = mm/h, ca = mm/h"
          },
          "type": {
            "title": "Type",
            "type": "string",
            "description": "Precipitation type, may be one of:\n\n* `none`, it there is no precipitation\n* `rain`\n* `snow`\n* `rain_snow`\n* `ice pellets`\n * `frozen rain`\n\nUnit: precipitation type",
            "format": "binary"
          }
        }
      },
      "Point_PointDailyMorningProbData": {
        "title": "Point_PointDailyMorningProbData",
        "type": "object",
        "properties": {
          "precipitation": {
            "title": "Precipitation",
            "type": "integer",
            "description": "Probability of non-zero precipitation.\nUnit: \\%"
          },
          "storm": {
            "title": "Storm",
            "type": "number",
            "description": "Total precipitation amount accumulated since last hour.\n Unit: mm/h"
          },
          "freeze": {
            "title": "Freeze",
            "type": "number",
            "description": "Probability the temperature drops below 0 \u00b0C. (morning avg)\n Unit: %"
          }
        }
      },
      "Point_PointDailyMorningWindData": {
        "title": "Point_PointDailyMorningWindData",
        "type": "object",
        "properties": {
          "speed": {
            "title": "Speed",
            "type": "number",
            "description": "Units: metric = m/s, us = mph, uk = mph, ca = km/h"
          },
          "gusts": {
            "title": "Gusts",
            "type": "number",
            "description": "Units: metric = m/s, us = mph, uk = mph, ca = km/h"
          },
          "dir": {
            "title": "Dir",
            "type": "string",
            "description": "Morning wind direction in `N`, `NNE`, `NE`, ..., `NNW` format.\n Unit: 16dir",
            "format": "binary"
          },
          "angle": {
            "title": "Angle",
            "type": "number",
            "description": "Morning wind direction angle in degrees, 180\u00b0 means wind from the south.\nUnit: degrees"
          }
        }
      },
      "Point_PointDailyStatsData": {
        "title": "Point_PointDailyStatsData",
        "required": [
          "temperature",
          "wind",
          "precipitation"
        ],
        "type": "object",
        "properties": {
          "temperature": {
            "$ref": "#/components/schemas/Point_PointDailyStatsTemperatureData"
          },
          "wind": {
            "$ref": "#/components/schemas/Point_PointDailyStatsWindData"
          },
          "precipitation": {
            "$ref": "#/components/schemas/Point_PointDailyStatsPrecipitationData"
          }
        }
      },
      "Point_PointDailyStatsPrecipitationData": {
        "title": "Point_PointDailyStatsPrecipitationData",
        "type": "object",
        "properties": {
          "avg": {
            "title": "Avg",
            "type": "number",
            "description": "Long-term average daily precipitation amount.\nUnits: metric = mm/day, us = inches per day, uk = mm/day, ca = mm/day"
          },
          "probability": {
            "title": "Probability",
            "type": "integer",
            "description": "Long-term average precipitation probability.\nUnit: \\%"
          }
        }
      },
      "Point_PointDailyStatsTemperatureData": {
        "title": "Point_PointDailyStatsTemperatureData",
        "type": "object",
        "properties": {
          "avg": {
            "title": "Avg",
            "type": "number",
            "description": "Long-term temperature average.\nUnits: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "avg_min": {
            "title": "Avg Min",
            "type": "number",
            "description": "Long-term daily minimum temperature average.\nUnits: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "avg_max": {
            "title": "Avg Max",
            "type": "number",
            "description": "Long-term daily maximum temperature average.\nUnits: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "record_min": {
            "title": "Record Min",
            "type": "number",
            "description": "Historical daily minimum temperature.\nUnits: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "record_max": {
            "title": "Record Max",
            "type": "number",
            "description": "Historical daily maximum.\nUnits: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          }
        }
      },
      "Point_PointDailyStatsWindData": {
        "title": "Point_PointDailyStatsWindData",
        "type": "object",
        "properties": {
          "avg_speed": {
            "title": "Avg Speed",
            "type": "number",
            "description": "Long-term average wind speed.\nUnits: metric = m/s, us = mph, uk = mph, ca = km/h"
          },
          "avg_angle": {
            "title": "Avg Angle",
            "type": "number",
            "description": "Long-term average wind angle.\nUnit: deg"
          },
          "avg_dir": {
            "title": "Avg Dir",
            "type": "string",
            "description": "Long-term average wind direction in 'N', 'NNE', 'NE', ... 'NNW' format.\nUnit: 16dir",
            "format": "binary"
          },
          "max_speed": {
            "title": "Max Speed",
            "type": "number",
            "description": "Historical daily maximum wind speed.\nUnits: metric = m/s, us = mph, uk = mph, ca = km/h"
          },
          "max_gust": {
            "title": "Max Gust",
            "type": "number",
            "description": "Historical daily maximum wind gust speed.\nUnits: metric = m/s, us = mph, uk = mph, ca = km/h"
          }
        }
      },
      "Point_PointDailySunData": {
        "title": "Point_PointDailySunData",
        "type": "object",
        "properties": {
          "rise": {
            "title": "Rise",
            "type": "string",
            "description": "Datetime of the sunrise or null during polar day/night.",
            "format": "date-time",
            "example": "2022-03-30T18:00:00"
          },
          "set": {
            "title": "Set",
            "type": "string",
            "description": "Datetime of the sunset or null during polar day/night.",
            "format": "date-time",
            "example": "2022-03-30T18:00:00"
          },
          "always_up": {
            "title": "Always Up",
            "type": "boolean",
            "description": "True if the sun never sets on given day (polar day), false otherwise."
          },
          "always_down": {
            "title": "Always Down",
            "type": "boolean",
            "description": "True if the sun never rises on given day (polar night), false otherwise."
          }
        }
      },
      "Point_PointData": {
        "title": "Point_PointData",
        "required": [
          "lat",
          "lon",
          "elevation",
          "units",
          "alerts"
        ],
        "type": "object",
        "properties": {
          "lat": {
            "title": "Lat",
            "type": "string",
            "description": "Latitude of the point, always in the format <float><N/S>, for example ``23.5S``"
          },
          "lon": {
            "title": "Lon",
            "type": "string",
            "description": "Longitude of the point, always in the format <float><E/W>, for example ``23.5W``"
          },
          "elevation": {
            "title": "Elevation",
            "type": "integer",
            "description": "Elevation above sea level in metres (for units 'metric', 'uk', 'ca') or feet (for units 'us')"
          },
          "timezone": {
            "title": "Timezone",
            "type": "string",
            "description": "Name of the timezone in format like 'Europe/London'. Available only when the place is specified through place ID."
          },
          "units": {
            "title": "Units",
            "type": "string",
            "description": "Unit system (metric, uk, ca or us)"
          },
          "current": {
            "$ref": "#/components/schemas/Point_PointCurrentData"
          },
          "minutely": {
            "$ref": "#/components/schemas/Point_PointMinutely"
          },
          "hourly": {
            "$ref": "#/components/schemas/Point_PointHourly"
          },
          "daily": {
            "$ref": "#/components/schemas/Point_PointDaily"
          },
          "alerts": {
            "$ref": "#/components/schemas/Point_PointAlerts"
          }
        }
      },
      "Point_PointHourly": {
        "title": "Point_PointHourly",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "Data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Point_PointHourlyData"
            }
          }
        }
      },
      "Point_PointHourlyCloudCoverData": {
        "title": "Point_PointHourlyCloudCoverData",
        "type": "object",
        "properties": {
          "total": {
            "title": "Total",
            "type": "number",
            "description": "Unit: \\%"
          },
          "low": {
            "title": "Low",
            "type": "number",
            "description": "Percentage of sky covered by low clouds.\nUnit: \\%"
          },
          "middle": {
            "title": "Middle",
            "type": "number",
            "description": "Percentage of sky covered by middle clouds.\nUnit: \\%"
          },
          "high": {
            "title": "High",
            "type": "number",
            "description": "Percentage of sky covered by high clouds.\nUnit: \\%"
          }
        }
      },
      "Point_PointHourlyData": {
        "title": "Point_PointHourlyData",
        "required": [
          "wind",
          "cloud_cover",
          "precipitation",
          "probability"
        ],
        "type": "object",
        "properties": {
          "date": {
            "title": "Date",
            "type": "string",
            "description": "Datetime in YYYY-MM-DDTHH:MM:SS format.",
            "format": "date-time",
            "example": "2022-03-30T18:00:00"
          },
          "weather": {
            "title": "Weather",
            "type": "string",
            "description": "String identifier of the weather icon, e.g. `light_rain`."
          },
          "icon": {
            "title": "Icon",
            "type": "integer",
            "description": "Numeric identifier of the weather icon. The following values can appear:\n\n* 1 - Not available\n* 2 - Sunny\n* 3 - Mostly sunny\n * 4 - Partly sunny\n* 5 - Mostly cloudy\n* 6 - Cloudy\n* 7 - Overcast\n * 8 - Overcast with low clouds\n* 9 - Fog\n* 10 - Light rain\n* 11 - Rain\n * 12 - Possible rain\n* 13 - Rain shower\n* 14 - Thunderstorm\n* 15 - Local thunderstorms\n* 16 - Light snow\n* 17 - Snow\n* 18 - Possible snow\n * 19 - Snow shower\n* 20 - Rain and snow\n* 21 - Possible rain and snow\n * 22 - Rain and snow\n* 23 - Freezing rain\n* 24 - Possible freezing rain\n * 25 - Hail\n* 26 - Clear (night)\n* 27 - Mostly clear (night)\n* 28 - Partly clear (night)\n* 29 - Mostly cloudy (night)\n* 30 - Cloudy (night)\n * 31 - Overcast with low clouds (night)\n* 32 - Rain shower (night)\n * 33 - Local thunderstorms (night)\n* 34 - Snow shower (night)\n* 35 - Rain and snow (night)\n* 36 - Possible freezing rain (night)\n\nUnit: weather_ico0_36"
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "Short text summary of the weather, e.g. `Light rain`."
          },
          "temperature": {
            "title": "Temperature",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "feels_like": {
            "title": "Feels Like",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "soil_temperature": {
            "title": "Soil Temperature",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "wind_chill": {
            "title": "Wind Chill",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "dew_point": {
            "title": "Dew Point",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "surface_temperature": {
            "title": "Surface Temperature",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "wind": {
            "$ref": "#/components/schemas/Point_PointHourlyWindData"
          },
          "cloud_cover": {
            "$ref": "#/components/schemas/Point_PointHourlyCloudCoverData"
          },
          "pressure": {
            "title": "Pressure",
            "type": "number",
            "description": "Atmospheric pressure at mean sea level.\nUnits: metric = hPa, us = Hg, uk = hPa, ca = kPa"
          },
          "precipitation": {
            "$ref": "#/components/schemas/Point_PointHourlyPrecipitationData"
          },
          "probability": {
            "$ref": "#/components/schemas/Point_PointHourlyProbData"
          },
          "cape": {
            "title": "Cape",
            "type": "number",
            "description": "Convective available potential energy.\nUnit: J/kg"
          },
          "evaporation": {
            "title": "Evaporation",
            "type": "number",
            "description": "Evaporation of liquid water into water vapor.\nUnit: mm/h"
          },
          "irradiance": {
            "title": "Irradiance",
            "type": "number",
            "description": "Global downward short-wave radiation flux.\nUnit: W/m2"
          },
          "lftx": {
            "title": "Lftx",
            "type": "number",
            "description": "Surface lifted index.\nUnit: K"
          },
          "ozone": {
            "title": "Ozone",
            "type": "number",
            "description": "Total column of ozone.\nUnit: Dobson"
          },
          "uv_index": {
            "title": "Uv Index",
            "type": "number",
            "description": "UV index, values from zero (low risk of harm) to 11+ (extreme risk of harm).\nUnit: uv_index"
          },
          "humidity": {
            "title": "Humidity",
            "type": "integer",
            "description": "Relative humidity.\nUnit: \\%"
          },
          "snow_depth": {
            "title": "Snow Depth",
            "type": "number",
            "description": "Snow depth.\nUnits: metric = cm, us = inch, uk = cm, ca = cm"
          },
          "sunshine_duration": {
            "title": "Sunshine Duration",
            "type": "number",
            "description": "Sunshine duration since start of previous hour.\nUnit: s"
          },
          "visibility": {
            "title": "Visibility",
            "type": "number",
            "description": "Visibility.\nUnits: metric = km, us = mi, uk = mi, ca = km"
          }
        }
      },
      "Point_PointHourlyPrecipitationData": {
        "title": "Point_PointHourlyPrecipitationData",
        "type": "object",
        "properties": {
          "total": {
            "title": "Total",
            "type": "number",
            "description": "Total precipitation amount accumulated since last hour.\n Units: metric = mm/h, us = inches per hour, uk = mm/h, ca = mm/h"
          },
          "type": {
            "title": "Type",
            "type": "string",
            "description": "Precipitation type, may be one of:\n\n* `none`, it there is no precipitation\n* `rain`\n* `snow`\n* `rain_snow`\n* `ice pellets`\n * `frozen rain`\n\nUnit: precipitation type",
            "format": "binary"
          },
          "convective": {
            "title": "Convective",
            "type": "number",
            "description": "Total precipitation amount accumulated since last hour.\n Units: metric = mm/h, us = inches per hour, uk = mm/h, ca = mm/h"
          },
          "rainspot": {
            "title": "Rainspot",
            "type": "string",
            "description": "Precipitation in the surrounding of queried location. The data is 7x7 ASCII art string, queried location being in the center. Character `#` means there is precipitation, `.` means no precipitation. The distance between neighboring cells is 0.25\u00b0.\nUnit: rainspot",
            "format": "binary"
          }
        }
      },
      "Point_PointHourlyProbData": {
        "title": "Point_PointHourlyProbData",
        "type": "object",
        "properties": {
          "precipitation": {
            "title": "Precipitation",
            "type": "integer",
            "description": "Probability of non-zero precipitation.\nUnit: \\%"
          },
          "storm": {
            "title": "Storm",
            "type": "number",
            "description": "Total precipitation amount accumulated since last hour.\n Unit: mm/h"
          },
          "freeze": {
            "title": "Freeze",
            "type": "number",
            "description": "Unit: \\%"
          }
        }
      },
      "Point_PointHourlyWindData": {
        "title": "Point_PointHourlyWindData",
        "type": "object",
        "properties": {
          "speed": {
            "title": "Speed",
            "type": "number",
            "description": "Units: metric = m/s, us = mph, uk = mph, ca = km/h"
          },
          "gusts": {
            "title": "Gusts",
            "type": "number",
            "description": "Units: metric = m/s, us = mph, uk = mph, ca = km/h"
          },
          "dir": {
            "title": "Dir",
            "type": "string",
            "description": "Wind direction in `N`, `NNE`, `NE`, ..., `NNW` format.\nUnit: 16dir",
            "format": "binary"
          },
          "angle": {
            "title": "Angle",
            "type": "number",
            "description": "Wind direction angle in degrees, 180\u00b0 means wind from the south.\nUnit: degrees"
          }
        }
      },
      "Point_PointMinutely": {
        "title": "Point_PointMinutely",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "Text summary about upcoming precipitation.\nUnit: summary"
          },
          "data": {
            "title": "Data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Point_PointMinutelyPrecipitationData"
            }
          }
        }
      },
      "Point_PointMinutelyPrecipitationData": {
        "title": "Point_PointMinutelyPrecipitationData",
        "type": "object",
        "properties": {
          "date": {
            "title": "Date",
            "type": "string",
            "description": "Datetime in YYYY-MM-DDTHH:MM:SS format.",
            "format": "date-time",
            "example": "2022-03-30T18:00:00"
          },
          "precipitation": {
            "title": "Precipitation",
            "type": "number",
            "description": "Minutely precipitation amount (per hour). For the startup tier, showing one value per 10 minutes.\nFor other tiers, showing one value per each minute.\n\nUnit: mm/h"
          }
        }
      },
      "TimeMachine_Model6": {
        "title": "TimeMachine_Model6",
        "required": [
          "wind",
          "cloud_cover",
          "precipitation"
        ],
        "type": "object",
        "properties": {
          "temperature": {
            "title": "Temperature",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "temperature_min": {
            "title": "Temperature Min",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "temperature_max": {
            "title": "Temperature Max",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "feels_like": {
            "title": "Feels Like",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "feels_like_min": {
            "title": "Feels Like Min",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "feels_like_max": {
            "title": "Feels Like Max",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "wind_chill": {
            "title": "Wind Chill",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "wind_chill_min": {
            "title": "Wind Chill Min",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "wind_chill_max": {
            "title": "Wind Chill Max",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "soil_temperature": {
            "title": "Soil Temperature",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "soil_temperature_min": {
            "title": "Soil Temperature Min",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "soil_temperature_max": {
            "title": "Soil Temperature Max",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "dew_point": {
            "title": "Dew Point",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "dew_point_min": {
            "title": "Dew Point Min",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "dew_point_max": {
            "title": "Dew Point Max",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "surface_temperature": {
            "title": "Surface Temperature",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "surface_temperature_min": {
            "title": "Surface Temperature Min",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "surface_temperature_max": {
            "title": "Surface Temperature Max",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "wind": {
            "$ref": "#/components/schemas/TimeMachine_Model7"
          },
          "cloud_cover": {
            "$ref": "#/components/schemas/TimeMachine_Model8"
          },
          "pressure": {
            "title": "Pressure",
            "type": "number",
            "description": "Units: metric = hPa, us = Hg, uk = hPa, ca = kPa"
          },
          "precipitation": {
            "$ref": "#/components/schemas/TimeMachine_Model9"
          },
          "humidity": {
            "title": "Humidity",
            "type": "number",
            "description": "Unit: \\%"
          }
        }
      },
      "TimeMachine_Model7": {
        "title": "TimeMachine_Model7",
        "type": "object",
        "properties": {
          "speed": {
            "title": "Speed",
            "type": "number",
            "description": "Units: metric = m/s, us = mph, uk = mph, ca = km/h"
          },
          "gusts": {
            "title": "Gusts",
            "type": "number",
            "description": "Units: metric = m/s, us = mph, uk = mph, ca = km/h"
          },
          "dir": {
            "title": "Dir",
            "type": "string",
            "description": "All day wind direction in `N`, `NNE`, `NE`, ..., `NNW` format.\n Unit: 16dir",
            "format": "binary"
          },
          "angle": {
            "title": "Angle",
            "type": "number"
          }
        }
      },
      "TimeMachine_Model8": {
        "title": "TimeMachine_Model8",
        "type": "object",
        "properties": {
          "total": {
            "title": "Total",
            "type": "number",
            "description": "Unit: %"
          },
          "low": {
            "title": "Low",
            "type": "number",
            "description": "Unit: %"
          },
          "middle": {
            "title": "Middle",
            "type": "number",
            "description": "Unit: %"
          },
          "high": {
            "title": "High",
            "type": "number",
            "description": "Unit: %"
          }
        }
      },
      "TimeMachine_Model9": {
        "title": "TimeMachine_Model9",
        "type": "object",
        "properties": {
          "total": {
            "title": "Total",
            "type": "number",
            "description": "Units: metric = mm/h, us = inches per hour, uk = mm/h, ca = mm/h"
          },
          "type": {
            "title": "Type",
            "type": "string",
            "format": "binary"
          }
        }
      },
      "TimeMachine_PointDailyStatsData": {
        "title": "TimeMachine_PointDailyStatsData",
        "required": [
          "temperature",
          "wind",
          "precipitation"
        ],
        "type": "object",
        "properties": {
          "temperature": {
            "$ref": "#/components/schemas/TimeMachine_PointDailyStatsTemperatureData"
          },
          "wind": {
            "$ref": "#/components/schemas/TimeMachine_PointDailyStatsWindData"
          },
          "precipitation": {
            "$ref": "#/components/schemas/TimeMachine_PointDailyStatsPrecipitationData"
          }
        }
      },
      "TimeMachine_PointDailyStatsPrecipitationData": {
        "title": "TimeMachine_PointDailyStatsPrecipitationData",
        "type": "object",
        "properties": {
          "avg": {
            "title": "Avg",
            "type": "number",
            "description": "Long-term average daily precipitation amount.\nUnits: metric = mm/day, us = inches per day, uk = mm/day, ca = mm/day"
          },
          "probability": {
            "title": "Probability",
            "type": "integer",
            "description": "Long-term average precipitation probability.\nUnit: \\%"
          }
        }
      },
      "TimeMachine_PointDailyStatsTemperatureData": {
        "title": "TimeMachine_PointDailyStatsTemperatureData",
        "type": "object",
        "properties": {
          "avg": {
            "title": "Avg",
            "type": "number",
            "description": "Long-term temperature average.\nUnits: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "avg_min": {
            "title": "Avg Min",
            "type": "number",
            "description": "Long-term daily minimum temperature average.\nUnits: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "avg_max": {
            "title": "Avg Max",
            "type": "number",
            "description": "Long-term daily maximum temperature average.\nUnits: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "record_min": {
            "title": "Record Min",
            "type": "number",
            "description": "Historical daily minimum temperature.\nUnits: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "record_max": {
            "title": "Record Max",
            "type": "number",
            "description": "Historical daily maximum.\nUnits: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          }
        }
      },
      "TimeMachine_PointDailyStatsWindData": {
        "title": "TimeMachine_PointDailyStatsWindData",
        "type": "object",
        "properties": {
          "avg_speed": {
            "title": "Avg Speed",
            "type": "number",
            "description": "Long-term average wind speed.\nUnits: metric = m/s, us = mph, uk = mph, ca = km/h"
          },
          "avg_angle": {
            "title": "Avg Angle",
            "type": "number",
            "description": "Long-term average wind angle.\nUnit: deg"
          },
          "avg_dir": {
            "title": "Avg Dir",
            "type": "string",
            "description": "Long-term average wind direction in 'N', 'NNE', 'NE', ... 'NNW' format.\nUnit: 16dir",
            "format": "binary"
          },
          "max_speed": {
            "title": "Max Speed",
            "type": "number",
            "description": "Historical daily maximum wind speed.\nUnits: metric = m/s, us = mph, uk = mph, ca = km/h"
          },
          "max_gust": {
            "title": "Max Gust",
            "type": "number",
            "description": "Historical daily maximum wind gust speed.\nUnits: metric = m/s, us = mph, uk = mph, ca = km/h"
          }
        }
      },
      "TimeMachine_TimeMachine": {
        "title": "TimeMachine_TimeMachine",
        "required": [
          "lat",
          "lon",
          "elevation",
          "units",
          "data",
          "daily",
          "statistics"
        ],
        "type": "object",
        "properties": {
          "lat": {
            "title": "Lat",
            "type": "string",
            "description": "Latitude of the point, always in the format <float><N/S>, for example ``23.5S``"
          },
          "lon": {
            "title": "Lon",
            "type": "string",
            "description": "Longitude of the point, always in the format <float><E/W>, for example ``23.5W``"
          },
          "elevation": {
            "title": "Elevation",
            "type": "integer",
            "description": "Elevation above sea level in metres (for units 'metric', 'uk', 'ca') or feet (for units 'us')"
          },
          "timezone": {
            "title": "Timezone",
            "type": "string",
            "description": "Name of the timezone in format like 'Europe/London'. Available only when the place is specified through place ID."
          },
          "units": {
            "title": "Units",
            "type": "string",
            "description": "Unit system (metric, uk, ca or us)"
          },
          "data": {
            "title": "Data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimeMachine_TimeMachineHourlyData"
            }
          },
          "daily": {
            "$ref": "#/components/schemas/TimeMachine_Model6"
          },
          "statistics": {
            "$ref": "#/components/schemas/TimeMachine_PointDailyStatsData"
          }
        }
      },
      "TimeMachine_TimeMachineCloudCoverData": {
        "title": "TimeMachine_TimeMachineCloudCoverData",
        "type": "object",
        "properties": {
          "total": {
            "title": "Total",
            "type": "integer",
            "description": "Percentage of sky covered by clouds.\nUnit: %"
          },
          "low": {
            "title": "Low",
            "type": "integer",
            "description": "Percentage of sky covered by low clouds.\nUnit: %"
          },
          "middle": {
            "title": "Middle",
            "type": "integer",
            "description": "Percentage of sky covered by middle clouds.\nUnit: %"
          },
          "high": {
            "title": "High",
            "type": "integer",
            "description": "Percentage of sky covered by high clouds.\nUnit: %"
          }
        }
      },
      "TimeMachine_TimeMachineHourlyData": {
        "title": "TimeMachine_TimeMachineHourlyData",
        "required": [
          "wind",
          "cloud_cover",
          "precipitation"
        ],
        "type": "object",
        "properties": {
          "date": {
            "title": "Date",
            "type": "string",
            "description": "Datetime in YYYY-MM-DDTHH:MM:SS format.",
            "format": "date-time",
            "example": "2022-03-30T18:00:00"
          },
          "weather": {
            "title": "Weather",
            "type": "string",
            "description": "String identifier of the weather icon, e.g. `light_rain`."
          },
          "summary": {
            "title": "Summary",
            "type": "string",
            "description": "Short text summary of the weather, e.g. `Light rain`."
          },
          "icon": {
            "title": "Icon",
            "type": "integer",
            "description": "Numeric identifier of the weather icon. The following values can appear:\n\n* 1 - Not available\n* 2 - Sunny\n* 3 - Mostly sunny\n * 4 - Partly sunny\n* 5 - Mostly cloudy\n* 6 - Cloudy\n* 7 - Overcast\n * 8 - Overcast with low clouds\n* 9 - Fog\n* 10 - Light rain\n* 11 - Rain\n * 12 - Possible rain\n* 13 - Rain shower\n* 14 - Thunderstorm\n* 15 - Local thunderstorms\n* 16 - Light snow\n* 17 - Snow\n* 18 - Possible snow\n * 19 - Snow shower\n* 20 - Rain and snow\n* 21 - Possible rain and snow\n * 22 - Rain and snow\n* 23 - Freezing rain\n* 24 - Possible freezing rain\n * 25 - Hail\n* 26 - Clear (night)\n* 27 - Mostly clear (night)\n* 28 - Partly clear (night)\n* 29 - Mostly cloudy (night)\n* 30 - Cloudy (night)\n * 31 - Overcast with low clouds (night)\n* 32 - Rain shower (night)\n * 33 - Local thunderstorms (night)\n* 34 - Snow shower (night)\n* 35 - Rain and snow (night)\n* 36 - Possible freezing rain (night)\n\nUnit: N/A"
          },
          "temperature": {
            "title": "Temperature",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "feels_like": {
            "title": "Feels Like",
            "type": "number",
            "description": "Feels like temperature.\nUnits: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "wind_chill": {
            "title": "Wind Chill",
            "type": "number",
            "description": "Windchill temperature.\nUnits: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "soil_temperature": {
            "title": "Soil Temperature",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "dew_point": {
            "title": "Dew Point",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "surface_temperature": {
            "title": "Surface Temperature",
            "type": "number",
            "description": "Units: metric = \u00b0C, us = \u00b0F, uk = \u00b0C, ca = \u00b0C"
          },
          "wind": {
            "$ref": "#/components/schemas/TimeMachine_TimeMachineWindData"
          },
          "cloud_cover": {
            "$ref": "#/components/schemas/TimeMachine_TimeMachineCloudCoverData"
          },
          "pressure": {
            "title": "Pressure",
            "type": "number",
            "description": "Atmospheric pressure at mean sea level.\nUnits: metric = hPa, us = Hg, uk = hPa, ca = kPa"
          },
          "precipitation": {
            "$ref": "#/components/schemas/TimeMachine_TimeMachinePrecipitationData"
          },
          "cape": {
            "title": "Cape",
            "type": "integer",
            "description": "Convective available potential energy.\nUnit: J/kg"
          },
          "evaporation": {
            "title": "Evaporation",
            "type": "integer",
            "description": "Evaporation of liquid water into water vapor.\nUnit: mm/h"
          },
          "irradiance": {
            "title": "Irradiance",
            "type": "integer",
            "description": "Global downward short-wave radiation flux.\nUnit: W/m2"
          },
          "ozone": {
            "title": "Ozone",
            "type": "integer",
            "description": "Total column of ozone.\nUnit: Dobson"
          },
          "humidity": {
            "title": "Humidity",
            "type": "integer",
            "description": "Relative humidity.\nUnit: \\%"
          }
        }
      },
      "TimeMachine_TimeMachinePrecipitationData": {
        "title": "TimeMachine_TimeMachinePrecipitationData",
        "type": "object",
        "properties": {
          "total": {
            "title": "Total",
            "type": "number",
            "description": "Total precipitation amount accumulated since last hour.\n Units: metric = mm/h, us = inches per hour, uk = mm/h, ca = mm/h"
          },
          "type": {
            "title": "Type",
            "type": "string",
            "description": "Precipitation type, may be one of:\n\n* `none`, it there is no precipitation\n* `rain`\n* `snow`\n* `rain_snow`\n* `ice pellets`\n * `frozen rain`\n\nUnit: precipitation type",
            "format": "binary"
          }
        }
      },
      "TimeMachine_TimeMachineWindData": {
        "title": "TimeMachine_TimeMachineWindData",
        "type": "object",
        "properties": {
          "speed": {
            "title": "Speed",
            "type": "integer",
            "description": "Wind speed 10 metres above the ground.\nUnits: metric = m/s, us = mph, uk = mph, ca = km/h"
          },
          "gusts": {
            "title": "Gusts",
            "type": "integer",
            "description": "Wind gust speed.\nUnits: metric = m/s, us = mph, uk = mph, ca = km/h"
          },
          "angle": {
            "title": "Angle",
            "type": "integer",
            "description": "Wind direction in `N`, `NNE`, `NE`, ..., `NNW` format.\nUnit: deg"
          },
          "dir": {
            "title": "Dir",
            "type": "string",
            "description": "Wind direction in `N`, `NNE`, `NE`, ..., `NNW` format.\nUnit: 16dir",
            "format": "binary"
          }
        }
      },
      "Units": {
        "title": "Units",
        "enum": [
          "auto",
          "metric",
          "us",
          "uk",
          "ca"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "APIKeyHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    }
  }
}