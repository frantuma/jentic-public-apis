{
  "openapi": "3.0.1",
  "info": {
    "title": "API V1",
    "version": "v1",
    "x-jentic-source-url": "https://ably.com/api-docs/v1/swagger.yaml"
  },
  "paths": {
    "/accounts/{id}/stats": {
      "get": {
        "summary": "Retrieves account stats",
        "tags": [
          "accounts"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "unit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns account stats",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/account_stats_response"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Account not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{account_id}/apps": {
      "get": {
        "summary": "Lists account apps",
        "tags": [
          "apps"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "App list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/app_response"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Account not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates an app",
        "tags": [
          "apps"
        ],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "201": {
            "description": "App created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Account not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app_post"
              }
            }
          }
        }
      }
    },
    "/apps/{id}": {
      "patch": {
        "summary": "Updates an app",
        "tags": [
          "apps"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "App updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Invalid resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app_patch"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes an app",
        "tags": [
          "apps"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "204": {
            "description": "App deleted"
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{id}/pkcs12": {
      "post": {
        "summary": "Updates app's APNS info from a .p12 file",
        "tags": [
          "apps"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "App updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/app_pkcs12"
              }
            }
          }
        }
      }
    },
    "/apps/{id}/stats": {
      "get": {
        "summary": "Retrieves app stats",
        "tags": [
          "apps"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "unit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns app stats",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/app_stats_response"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{app_id}/keys": {
      "get": {
        "summary": "Lists app keys",
        "tags": [
          "keys"
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Key list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/key_response"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates a key",
        "tags": [
          "keys"
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Key created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/key_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/key_post"
              }
            }
          }
        }
      }
    },
    "/apps/{app_id}/keys/{key_id}": {
      "patch": {
        "summary": "Updates a key",
        "tags": [
          "keys"
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Key updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/key_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/key_patch"
              }
            }
          }
        }
      }
    },
    "/apps/{app_id}/keys/{key_id}/revoke": {
      "post": {
        "summary": "Revokes a key",
        "tags": [
          "keys"
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Key revoked"
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{app_id}/namespaces": {
      "get": {
        "summary": "Lists namespaces",
        "tags": [
          "namespaces"
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/namespace_response"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates a namespace",
        "tags": [
          "namespaces"
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Namespace created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/namespace_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/namespace_post"
              }
            }
          }
        }
      }
    },
    "/apps/{app_id}/namespaces/{namespace_id}": {
      "patch": {
        "summary": "Updates a namespace",
        "tags": [
          "namespaces"
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/namespace_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/namespace_patch"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes a namespace",
        "tags": [
          "namespaces"
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Namespace deleted"
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{app_id}/queues": {
      "get": {
        "summary": "Lists queues",
        "tags": [
          "queues"
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Queue list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/queue_response"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "503": {
            "description": "503 Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates a queue",
        "tags": [
          "queues"
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Queue created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/queue_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/queue"
              }
            }
          }
        }
      }
    },
    "/apps/{app_id}/queues/{queue_id}": {
      "delete": {
        "summary": "Deletes a queue",
        "tags": [
          "queues"
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "queue_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Queue deleted"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "App/Queue not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "503": {
            "description": "503 Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{app_id}/rules": {
      "get": {
        "summary": "Lists Integration rules",
        "tags": [
          "rules"
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Integration Rule list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/rule_response"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates a Integration Rule",
        "tags": [
          "rules"
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Integration Rule created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rule_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/rule_post"
              }
            }
          }
        }
      }
    },
    "/apps/{app_id}/rules/{rule_id}": {
      "get": {
        "summary": "Gets a Integration Rule by ID",
        "tags": [
          "rules"
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Integration Rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rule_response"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Updates a Integration Rule",
        "tags": [
          "rules"
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Integration Rule updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rule_response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/rule_patch"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes a Integration Rule",
        "tags": [
          "rules"
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Integration Rule deleted"
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "App not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "504": {
            "description": "Gateway timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/me": {
      "get": {
        "summary": "Get token details",
        "tags": [
          "tokens"
        ],
        "security": [
          {
            "bearer_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Token details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/me"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearer_auth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "rule_source": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "channelFilter": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "channelFilter",
          "type"
        ]
      },
      "rule_source_patch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "channelFilter": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "rule_post": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/http_rule_post"
          },
          {
            "$ref": "#/components/schemas/ifttt_rule_post"
          },
          {
            "$ref": "#/components/schemas/zapier_rule_post"
          },
          {
            "$ref": "#/components/schemas/cloudflare_worker_rule_post"
          },
          {
            "$ref": "#/components/schemas/azure_function_rule_post"
          },
          {
            "$ref": "#/components/schemas/google_cloud_function_rule_post"
          },
          {
            "$ref": "#/components/schemas/aws_lambda_rule_post"
          },
          {
            "$ref": "#/components/schemas/aws_kinesis_rule_post"
          },
          {
            "$ref": "#/components/schemas/aws_sqs_rule_post"
          },
          {
            "$ref": "#/components/schemas/amqp_rule_post"
          },
          {
            "$ref": "#/components/schemas/amqp_external_rule_post"
          },
          {
            "$ref": "#/components/schemas/kafka_rule_post"
          },
          {
            "$ref": "#/components/schemas/pulsar_rule_post"
          },
          {
            "$ref": "#/components/schemas/ingress_postgres_outbox_rule_post"
          },
          {
            "$ref": "#/components/schemas/ingress_mongodb_rule_post"
          }
        ],
        "discriminator": {
          "propertyName": "ruleType",
          "mapping": {
            "http": "#/components/schemas/http_rule_post",
            "http/ifttt": "#/components/schemas/ifttt_rule_post",
            "http/zapier": "#/components/schemas/zapier_rule_post",
            "http/cloudflare-worker": "#/components/schemas/cloudflare_worker_rule_post",
            "http/azure-function": "#/components/schemas/azure_function_rule_post",
            "http/google-cloud-function": "#/components/schemas/google_cloud_function_rule_post",
            "aws/lambda": "#/components/schemas/aws_lambda_rule_post",
            "aws/kinesis": "#/components/schemas/aws_kinesis_rule_post",
            "aws/sqs": "#/components/schemas/aws_sqs_rule_post",
            "amqp": "#/components/schemas/amqp_rule_post",
            "amqp/external": "#/components/schemas/amqp_external_rule_post",
            "kafka": "#/components/schemas/kafka_rule_post",
            "pulsar": "#/components/schemas/pulsar_rule_post",
            "ingress-postgres-outbox": "#/components/schemas/ingress_postgres_outbox_rule_post",
            "ingress/mongodb": "#/components/schemas/ingress_mongodb_rule_post"
          }
        }
      },
      "rule_patch": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/http_rule_patch"
          },
          {
            "$ref": "#/components/schemas/ifttt_rule_patch"
          },
          {
            "$ref": "#/components/schemas/zapier_rule_patch"
          },
          {
            "$ref": "#/components/schemas/cloudflare_worker_rule_patch"
          },
          {
            "$ref": "#/components/schemas/azure_function_rule_patch"
          },
          {
            "$ref": "#/components/schemas/google_cloud_function_rule_patch"
          },
          {
            "$ref": "#/components/schemas/aws_lambda_rule_patch"
          },
          {
            "$ref": "#/components/schemas/aws_kinesis_rule_patch"
          },
          {
            "$ref": "#/components/schemas/aws_sqs_rule_patch"
          },
          {
            "$ref": "#/components/schemas/amqp_rule_patch"
          },
          {
            "$ref": "#/components/schemas/amqp_external_rule_patch"
          },
          {
            "$ref": "#/components/schemas/kafka_rule_patch"
          },
          {
            "$ref": "#/components/schemas/pulsar_rule_patch"
          },
          {
            "$ref": "#/components/schemas/ingress_postgres_outbox_rule_patch"
          },
          {
            "$ref": "#/components/schemas/ingress_mongodb_rule_patch"
          }
        ],
        "discriminator": {
          "propertyName": "ruleType",
          "mapping": {
            "http": "#/components/schemas/http_rule_patch",
            "http/ifttt": "#/components/schemas/ifttt_rule_patch",
            "http/zapier": "#/components/schemas/zapier_rule_patch",
            "http/cloudflare-worker": "#/components/schemas/cloudflare_worker_rule_patch",
            "http/azure-function": "#/components/schemas/azure_function_rule_patch",
            "http/google-cloud-function": "#/components/schemas/google_cloud_function_rule_patch",
            "aws/lambda": "#/components/schemas/aws_lambda_rule_patch",
            "aws/kinesis": "#/components/schemas/aws_kinesis_rule_patch",
            "aws/sqs": "#/components/schemas/aws_sqs_rule_patch",
            "amqp": "#/components/schemas/amqp_rule_patch",
            "amqp/external": "#/components/schemas/amqp_external_rule_patch",
            "kafka": "#/components/schemas/kafka_rule_patch",
            "pulsar": "#/components/schemas/pulsar_rule_patch",
            "ingress-postgres-outbox": "#/components/schemas/ingress_postgres_outbox_rule_patch",
            "ingress/mongodb": "#/components/schemas/ingress_mongodb_rule_patch"
          }
        }
      },
      "rule_response": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/http_rule_response"
          },
          {
            "$ref": "#/components/schemas/ifttt_rule_response"
          },
          {
            "$ref": "#/components/schemas/zapier_rule_response"
          },
          {
            "$ref": "#/components/schemas/cloudflare_worker_rule_response"
          },
          {
            "$ref": "#/components/schemas/azure_function_rule_response"
          },
          {
            "$ref": "#/components/schemas/google_cloud_function_rule_response"
          },
          {
            "$ref": "#/components/schemas/aws_lambda_rule_response"
          },
          {
            "$ref": "#/components/schemas/aws_kinesis_rule_response"
          },
          {
            "$ref": "#/components/schemas/aws_sqs_rule_response"
          },
          {
            "$ref": "#/components/schemas/amqp_rule_response"
          },
          {
            "$ref": "#/components/schemas/amqp_external_rule_response"
          },
          {
            "$ref": "#/components/schemas/kafka_rule_response"
          },
          {
            "$ref": "#/components/schemas/pulsar_rule_response"
          },
          {
            "$ref": "#/components/schemas/ingress_postgres_outbox_rule_response"
          },
          {
            "$ref": "#/components/schemas/ingress_mongodb_rule_response"
          },
          {
            "$ref": "#/components/schemas/unsupported_rule_response"
          }
        ],
        "discriminator": {
          "propertyName": "ruleType",
          "mapping": {
            "http": "#/components/schemas/http_rule_response",
            "http/ifttt": "#/components/schemas/ifttt_rule_response",
            "http/zapier": "#/components/schemas/zapier_rule_response",
            "http/cloudflare-worker": "#/components/schemas/cloudflare_worker_rule_response",
            "http/azure-function": "#/components/schemas/azure_function_rule_response",
            "http/google-cloud-function": "#/components/schemas/google_cloud_function_rule_response",
            "aws/lambda": "#/components/schemas/aws_lambda_rule_response",
            "aws/kinesis": "#/components/schemas/aws_kinesis_rule_response",
            "aws/sqs": "#/components/schemas/aws_sqs_rule_response",
            "amqp": "#/components/schemas/amqp_rule_response",
            "amqp/external": "#/components/schemas/amqp_external_rule_response",
            "kafka": "#/components/schemas/kafka_rule_response",
            "pulsar": "#/components/schemas/pulsar_rule_response",
            "ingress-postgres-outbox": "#/components/schemas/ingress_postgres_outbox_rule_response",
            "ingress/mongodb": "#/components/schemas/ingress_mongodb_rule_response",
            "unsupported": "#/components/schemas/unsupported_rule_response"
          }
        }
      },
      "http_rule_post": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "http"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "url": {
                "type": "string"
              },
              "headers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              "signingKeyId": {
                "type": "string",
                "nullable": true
              },
              "enveloped": {
                "type": "boolean",
                "nullable": true
              },
              "format": {
                "type": "string"
              }
            },
            "required": [
              "url",
              "format"
            ]
          }
        },
        "required": [
          "ruleType",
          "requestMode",
          "source",
          "target"
        ]
      },
      "http_rule_patch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "http"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source_patch"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "url": {
                "type": "string"
              },
              "headers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              "signingKeyId": {
                "type": "string",
                "nullable": true
              },
              "enveloped": {
                "type": "boolean",
                "nullable": true
              },
              "format": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "ruleType"
        ]
      },
      "http_rule_response": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "created": {
            "type": "number"
          },
          "modified": {
            "type": "number"
          },
          "_links": {
            "type": "object",
            "nullable": true
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "http"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "url": {
                "type": "string"
              },
              "headers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              "signingKeyId": {
                "type": "string",
                "nullable": true
              },
              "enveloped": {
                "type": "boolean",
                "nullable": true
              },
              "format": {
                "type": "string"
              }
            },
            "required": [
              "url",
              "format"
            ]
          }
        },
        "required": [
          "ruleType",
          "requestMode",
          "source",
          "target"
        ]
      },
      "ifttt_rule_post": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "http/ifttt"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "webhookKey": {
                "type": "string"
              },
              "eventName": {
                "type": "string"
              }
            },
            "required": [
              "webhookKey",
              "eventName"
            ]
          }
        },
        "required": [
          "ruleType",
          "requestMode",
          "source",
          "target"
        ]
      },
      "ifttt_rule_patch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "http/ifttt"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source_patch"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "webhookKey": {
                "type": "string"
              },
              "eventName": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "ruleType"
        ]
      },
      "ifttt_rule_response": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "http/ifttt"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "webhookKey": {
                "type": "string"
              },
              "eventName": {
                "type": "string"
              }
            },
            "required": [
              "webhookKey",
              "eventName"
            ]
          },
          "id": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "created": {
            "type": "number"
          },
          "modified": {
            "type": "number"
          },
          "_links": {
            "type": "object",
            "nullable": true
          }
        },
        "required": [
          "ruleType",
          "requestMode",
          "source",
          "target"
        ]
      },
      "zapier_rule_post": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "http/zapier"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "url": {
                "type": "string"
              },
              "headers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              "signingKeyId": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "url"
            ]
          }
        },
        "required": [
          "ruleType",
          "requestMode",
          "source",
          "target"
        ]
      },
      "zapier_rule_patch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "http/zapier"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source_patch"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "url": {
                "type": "string"
              },
              "headers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              "signingKeyId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "required": [
          "ruleType"
        ]
      },
      "zapier_rule_response": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "created": {
            "type": "number"
          },
          "modified": {
            "type": "number"
          },
          "_links": {
            "type": "object",
            "nullable": true
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "http/zapier"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "url": {
                "type": "string"
              },
              "headers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              "signingKeyId": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "url"
            ]
          }
        },
        "required": [
          "ruleType",
          "requestMode",
          "source",
          "target"
        ]
      },
      "cloudflare_worker_rule_post": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "http/cloudflare-worker"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "url": {
                "type": "string"
              },
              "headers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              "signingKeyId": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "url"
            ]
          }
        },
        "required": [
          "ruleType",
          "requestMode",
          "source",
          "target"
        ]
      },
      "cloudflare_worker_rule_patch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "http/cloudflare-worker"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source_patch"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "url": {
                "type": "string"
              },
              "headers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              "signingKeyId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        },
        "required": [
          "ruleType"
        ]
      },
      "cloudflare_worker_rule_response": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "created": {
            "type": "number"
          },
          "modified": {
            "type": "number"
          },
          "_links": {
            "type": "object",
            "nullable": true
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "http/cloudflare-worker"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "url": {
                "type": "string"
              },
              "headers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              "signingKeyId": {
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "url"
            ]
          }
        },
        "required": [
          "ruleType",
          "requestMode",
          "source",
          "target"
        ]
      },
      "azure_function_rule_post": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "http/azure-function"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "azureAppId": {
                "type": "string"
              },
              "azureFunctionName": {
                "type": "string"
              },
              "headers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              "signingKeyId": {
                "type": "string",
                "nullable": true
              },
              "enveloped": {
                "type": "boolean",
                "nullable": true
              },
              "format": {
                "type": "string"
              }
            },
            "required": [
              "azureAppId",
              "azureFunctionName"
            ]
          }
        },
        "required": [
          "ruleType",
          "requestMode",
          "source",
          "target"
        ]
      },
      "azure_function_rule_patch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "http/azure-function"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source_patch"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "azureAppId": {
                "type": "string"
              },
              "azureFunctionName": {
                "type": "string"
              },
              "headers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              "signingKeyId": {
                "type": "string",
                "nullable": true
              },
              "enveloped": {
                "type": "boolean",
                "nullable": true
              },
              "format": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "ruleType"
        ]
      },
      "azure_function_rule_response": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "created": {
            "type": "number"
          },
          "modified": {
            "type": "number"
          },
          "_links": {
            "type": "object",
            "nullable": true
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "http/azure-function"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "azureAppId": {
                "type": "string"
              },
              "azureFunctionName": {
                "type": "string"
              },
              "headers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              "signingKeyId": {
                "type": "string",
                "nullable": true
              },
              "enveloped": {
                "type": "boolean",
                "nullable": true
              },
              "format": {
                "type": "string"
              }
            },
            "required": [
              "azureAppId",
              "azureFunctionName"
            ]
          }
        },
        "required": [
          "ruleType",
          "requestMode",
          "source",
          "target"
        ]
      },
      "google_cloud_function_rule_post": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "http/google-cloud-function"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "region": {
                "type": "string"
              },
              "projectId": {
                "type": "string"
              },
              "functionName": {
                "type": "string"
              },
              "headers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              "signingKeyId": {
                "type": "string",
                "nullable": true
              },
              "enveloped": {
                "type": "boolean",
                "nullable": true
              },
              "format": {
                "type": "string"
              }
            },
            "required": [
              "region",
              "projectId",
              "functionName"
            ]
          }
        },
        "required": [
          "ruleType",
          "requestMode",
          "source",
          "target"
        ]
      },
      "google_cloud_function_rule_patch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "http/google-cloud-function"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source_patch"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "region": {
                "type": "string"
              },
              "projectId": {
                "type": "string"
              },
              "functionName": {
                "type": "string"
              },
              "headers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              "signingKeyId": {
                "type": "string",
                "nullable": true
              },
              "enveloped": {
                "type": "boolean",
                "nullable": true
              },
              "format": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "ruleType"
        ]
      },
      "google_cloud_function_rule_response": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "created": {
            "type": "number"
          },
          "modified": {
            "type": "number"
          },
          "_links": {
            "type": "object",
            "nullable": true
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "http/google-cloud-function"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "region": {
                "type": "string"
              },
              "projectId": {
                "type": "string"
              },
              "functionName": {
                "type": "string"
              },
              "headers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              "signingKeyId": {
                "type": "string",
                "nullable": true
              },
              "enveloped": {
                "type": "boolean",
                "nullable": true
              },
              "format": {
                "type": "string"
              }
            },
            "required": [
              "region",
              "projectId",
              "functionName"
            ]
          }
        },
        "required": [
          "ruleType",
          "requestMode",
          "source",
          "target"
        ]
      },
      "aws_access_keys": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "authenticationMode": {
            "type": "string",
            "enum": [
              "credentials"
            ]
          },
          "accessKeyId": {
            "type": "string"
          },
          "secretAccessKey": {
            "type": "string"
          }
        },
        "required": [
          "accessKeyId",
          "secretAccessKey"
        ]
      },
      "aws_access_keys_response": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "authenticationMode": {
            "type": "string",
            "enum": [
              "credentials"
            ]
          },
          "accessKeyId": {
            "type": "string"
          }
        }
      },
      "aws_assume_role": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "authenticationMode": {
            "type": "string",
            "enum": [
              "assumeRole"
            ]
          },
          "assumeRoleArn": {
            "type": "string"
          }
        },
        "required": [
          "assumeRoleArn"
        ]
      },
      "aws_lambda_rule_post": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "aws/lambda"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "region": {
                "type": "string"
              },
              "functionName": {
                "type": "string"
              },
              "authentication": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/aws_access_keys"
                  },
                  {
                    "$ref": "#/components/schemas/aws_assume_role"
                  }
                ],
                "discriminator": {
                  "propertyName": "authenticationMode",
                  "mapping": {
                    "credentials": "#/components/schemas/aws_access_keys",
                    "assumeRole": "#/components/schemas/aws_assume_role"
                  }
                }
              },
              "enveloped": {
                "type": "boolean",
                "nullable": true
              }
            },
            "required": [
              "region",
              "functionName",
              "authentication"
            ]
          }
        },
        "required": [
          "ruleType",
          "requestMode",
          "source",
          "target"
        ]
      },
      "aws_lambda_rule_patch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "aws/lambda"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source_patch"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "region": {
                "type": "string"
              },
              "functionName": {
                "type": "string"
              },
              "authentication": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/aws_access_keys"
                  },
                  {
                    "$ref": "#/components/schemas/aws_assume_role"
                  }
                ],
                "discriminator": {
                  "propertyName": "authenticationMode",
                  "mapping": {
                    "credentials": "#/components/schemas/aws_access_keys",
                    "assumeRole": "#/components/schemas/aws_assume_role"
                  }
                }
              },
              "enveloped": {
                "type": "boolean",
                "nullable": true
              }
            },
            "required": [
              "region",
              "functionName",
              "authentication"
            ]
          }
        },
        "required": [
          "ruleType"
        ]
      },
      "aws_lambda_rule_response": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "created": {
            "type": "number"
          },
          "modified": {
            "type": "number"
          },
          "_links": {
            "type": "object",
            "nullable": true
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "aws/lambda"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "region": {
                "type": "string"
              },
              "functionName": {
                "type": "string"
              },
              "authentication": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/aws_access_keys_response"
                  },
                  {
                    "$ref": "#/components/schemas/aws_assume_role"
                  }
                ],
                "discriminator": {
                  "propertyName": "authenticationMode",
                  "mapping": {
                    "credentials": "#/components/schemas/aws_access_keys_response",
                    "assumeRole": "#/components/schemas/aws_assume_role"
                  }
                }
              },
              "enveloped": {
                "type": "boolean",
                "nullable": true
              },
              "format": {
                "type": "string"
              }
            },
            "required": [
              "region",
              "functionName",
              "authentication"
            ]
          }
        },
        "required": [
          "ruleType",
          "requestMode",
          "source",
          "target"
        ]
      },
      "aws_kinesis_rule_post": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "aws/kinesis"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "region": {
                "type": "string"
              },
              "streamName": {
                "type": "string"
              },
              "partitionKey": {
                "type": "string"
              },
              "authentication": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/aws_access_keys"
                  },
                  {
                    "$ref": "#/components/schemas/aws_assume_role"
                  }
                ],
                "discriminator": {
                  "propertyName": "authenticationMode",
                  "mapping": {
                    "credentials": "#/components/schemas/aws_access_keys",
                    "assumeRole": "#/components/schemas/aws_assume_role"
                  }
                }
              },
              "enveloped": {
                "type": "boolean",
                "nullable": true
              },
              "format": {
                "type": "string"
              }
            },
            "required": [
              "region",
              "streamName",
              "partitionKey",
              "authentication",
              "format"
            ]
          }
        },
        "required": [
          "ruleType",
          "requestMode",
          "source",
          "target"
        ]
      },
      "aws_kinesis_rule_patch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "aws/kinesis"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source_patch"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "region": {
                "type": "string"
              },
              "streamName": {
                "type": "string"
              },
              "partitionKey": {
                "type": "string"
              },
              "authentication": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/aws_access_keys"
                  },
                  {
                    "$ref": "#/components/schemas/aws_assume_role"
                  }
                ],
                "discriminator": {
                  "propertyName": "authenticationMode",
                  "mapping": {
                    "credentials": "#/components/schemas/aws_access_keys",
                    "assumeRole": "#/components/schemas/aws_assume_role"
                  }
                }
              },
              "enveloped": {
                "type": "boolean",
                "nullable": true
              },
              "format": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "ruleType"
        ]
      },
      "aws_kinesis_rule_response": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "created": {
            "type": "number"
          },
          "modified": {
            "type": "number"
          },
          "_links": {
            "type": "object",
            "nullable": true
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "aws/kinesis"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "region": {
                "type": "string"
              },
              "streamName": {
                "type": "string"
              },
              "partitionKey": {
                "type": "string"
              },
              "authentication": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/aws_access_keys_response"
                  },
                  {
                    "$ref": "#/components/schemas/aws_assume_role"
                  }
                ],
                "discriminator": {
                  "propertyName": "authenticationMode",
                  "mapping": {
                    "credentials": "#/components/schemas/aws_access_keys_response",
                    "assumeRole": "#/components/schemas/aws_assume_role"
                  }
                }
              },
              "enveloped": {
                "type": "boolean",
                "nullable": true
              },
              "format": {
                "type": "string"
              }
            },
            "required": [
              "region",
              "streamName",
              "partitionKey",
              "authentication",
              "format"
            ]
          }
        },
        "required": [
          "ruleType",
          "requestMode",
          "source",
          "target"
        ]
      },
      "aws_sqs_rule_post": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "aws/sqs"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "region": {
                "type": "string"
              },
              "awsAccountId": {
                "type": "string"
              },
              "queueName": {
                "type": "string"
              },
              "authentication": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/aws_access_keys"
                  },
                  {
                    "$ref": "#/components/schemas/aws_assume_role"
                  }
                ],
                "discriminator": {
                  "propertyName": "authenticationMode",
                  "mapping": {
                    "credentials": "#/components/schemas/aws_access_keys",
                    "assumeRole": "#/components/schemas/aws_assume_role"
                  }
                }
              },
              "enveloped": {
                "type": "boolean",
                "nullable": true
              },
              "format": {
                "type": "string"
              }
            },
            "required": [
              "region",
              "awsAccountId",
              "queueName",
              "authentication"
            ]
          }
        },
        "required": [
          "ruleType",
          "requestMode",
          "source",
          "target"
        ]
      },
      "aws_sqs_rule_patch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "aws/sqs"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source_patch"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "region": {
                "type": "string"
              },
              "awsAccountId": {
                "type": "string"
              },
              "queueName": {
                "type": "string"
              },
              "authentication": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/aws_access_keys"
                  },
                  {
                    "$ref": "#/components/schemas/aws_assume_role"
                  }
                ],
                "discriminator": {
                  "propertyName": "authenticationMode",
                  "mapping": {
                    "credentials": "#/components/schemas/aws_access_keys",
                    "assumeRole": "#/components/schemas/aws_assume_role"
                  }
                }
              },
              "enveloped": {
                "type": "boolean",
                "nullable": true
              },
              "format": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "ruleType"
        ]
      },
      "aws_sqs_rule_response": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "created": {
            "type": "number"
          },
          "modified": {
            "type": "number"
          },
          "_links": {
            "type": "object",
            "nullable": true
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "aws/sqs"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "region": {
                "type": "string"
              },
              "awsAccountId": {
                "type": "string"
              },
              "queueName": {
                "type": "string"
              },
              "authentication": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/aws_access_keys_response"
                  },
                  {
                    "$ref": "#/components/schemas/aws_assume_role"
                  }
                ],
                "discriminator": {
                  "propertyName": "authenticationMode",
                  "mapping": {
                    "credentials": "#/components/schemas/aws_access_keys_response",
                    "assumeRole": "#/components/schemas/aws_assume_role"
                  }
                }
              },
              "enveloped": {
                "type": "boolean",
                "nullable": true
              },
              "format": {
                "type": "string"
              }
            },
            "required": [
              "region",
              "awsAccountId",
              "queueName",
              "authentication"
            ]
          }
        },
        "required": [
          "ruleType",
          "requestMode",
          "source",
          "target"
        ]
      },
      "amqp_rule_post": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "amqp"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "queueId": {
                "type": "string"
              },
              "headers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              "enveloped": {
                "type": "boolean",
                "nullable": true
              },
              "format": {
                "type": "string"
              }
            },
            "required": [
              "queueId"
            ]
          }
        },
        "required": [
          "ruleType",
          "requestMode",
          "source",
          "target"
        ]
      },
      "amqp_rule_patch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "amqp"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source_patch"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "queueId": {
                "type": "string"
              },
              "headers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              "enveloped": {
                "type": "boolean",
                "nullable": true
              },
              "format": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "ruleType"
        ]
      },
      "amqp_rule_response": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "created": {
            "type": "number"
          },
          "modified": {
            "type": "number"
          },
          "_links": {
            "type": "object",
            "nullable": true
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "amqp"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "queueId": {
                "type": "string"
              },
              "headers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              "enveloped": {
                "type": "boolean",
                "nullable": true
              },
              "format": {
                "type": "string"
              }
            },
            "required": [
              "queueId"
            ]
          }
        },
        "required": [
          "ruleType",
          "requestMode",
          "source",
          "target"
        ]
      },
      "amqp_external_rule_post": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "amqp/external"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "url": {
                "type": "string"
              },
              "routingKey": {
                "type": "string"
              },
              "exchange": {
                "type": "string"
              },
              "mandatoryRoute": {
                "type": "boolean"
              },
              "persistentMessages": {
                "type": "boolean"
              },
              "messageTtl": {
                "type": "integer"
              },
              "headers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              "enveloped": {
                "type": "boolean",
                "nullable": true
              },
              "format": {
                "type": "string"
              }
            },
            "required": [
              "url",
              "routingKey",
              "mandatoryRoute",
              "persistentMessages"
            ]
          }
        },
        "required": [
          "ruleType",
          "requestMode",
          "source",
          "target"
        ]
      },
      "amqp_external_rule_patch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "amqp/external"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source_patch"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "url": {
                "type": "string"
              },
              "routingKey": {
                "type": "string"
              },
              "exchange": {
                "type": "string"
              },
              "mandatoryRoute": {
                "type": "boolean"
              },
              "persistentMessages": {
                "type": "boolean"
              },
              "messageTtl": {
                "type": "integer"
              },
              "headers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              "enveloped": {
                "type": "boolean",
                "nullable": true
              },
              "format": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "ruleType"
        ]
      },
      "amqp_external_rule_response": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "created": {
            "type": "number"
          },
          "modified": {
            "type": "number"
          },
          "_links": {
            "type": "object",
            "nullable": true
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "amqp/external"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "url": {
                "type": "string"
              },
              "routingKey": {
                "type": "string"
              },
              "exchange": {
                "type": "string"
              },
              "mandatoryRoute": {
                "type": "boolean"
              },
              "persistentMessages": {
                "type": "boolean"
              },
              "messageTtl": {
                "type": "integer"
              },
              "headers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              },
              "enveloped": {
                "type": "boolean",
                "nullable": true
              },
              "format": {
                "type": "string"
              }
            },
            "required": [
              "url",
              "routingKey",
              "mandatoryRoute",
              "persistentMessages"
            ]
          }
        },
        "required": [
          "ruleType",
          "requestMode",
          "source",
          "target"
        ]
      },
      "kafka_rule_post": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "kafka"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "routingKey": {
                "type": "string"
              },
              "brokers": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "auth": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "sasl": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "mechanism": {
                        "type": "string",
                        "enum": [
                          "plain",
                          "scram-sha-256",
                          "scram-sha-512"
                        ]
                      },
                      "username": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "enveloped": {
                "type": "boolean",
                "nullable": true
              },
              "format": {
                "type": "string"
              }
            },
            "required": [
              "routingKey",
              "brokers",
              "auth"
            ]
          }
        },
        "required": [
          "ruleType",
          "requestMode",
          "source",
          "target"
        ]
      },
      "kafka_rule_patch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "kafka"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source_patch"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "routingKey": {
                "type": "string"
              },
              "brokers": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "auth": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "sasl": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "mechanism": {
                        "type": "string",
                        "enum": [
                          "plain",
                          "scram-sha-256",
                          "scram-sha-512"
                        ]
                      },
                      "username": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "enveloped": {
                "type": "boolean",
                "nullable": true
              },
              "format": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "ruleType"
        ]
      },
      "kafka_rule_response": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "created": {
            "type": "number"
          },
          "modified": {
            "type": "number"
          },
          "_links": {
            "type": "object",
            "nullable": true
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "kafka"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "routingKey": {
                "type": "string"
              },
              "brokers": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "auth": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "sasl": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "mechanism": {
                        "type": "string",
                        "enum": [
                          "plain",
                          "scram-sha-256",
                          "scram-sha-512"
                        ]
                      },
                      "username": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "enveloped": {
                "type": "boolean",
                "nullable": true
              },
              "format": {
                "type": "string"
              }
            },
            "required": [
              "routingKey",
              "brokers",
              "auth"
            ]
          }
        },
        "required": [
          "ruleType",
          "requestMode",
          "source",
          "target"
        ]
      },
      "pulsar_token_auth": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "authenticationMode": {
            "type": "string",
            "enum": [
              "token"
            ]
          },
          "token": {
            "type": "string"
          }
        },
        "required": [
          "token",
          "authenticationMode"
        ]
      },
      "pulsar_rule_post": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "pulsar"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "routingKey": {
                "type": "string"
              },
              "topic": {
                "type": "string"
              },
              "serviceUrl": {
                "type": "string"
              },
              "tlsTrustCerts": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              },
              "authentication": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/pulsar_token_auth"
                  }
                ],
                "discriminator": {
                  "propertyName": "authenticationMode",
                  "mapping": {
                    "token": "#/components/schemas/pulsar_token_auth"
                  }
                }
              },
              "enveloped": {
                "type": "boolean",
                "nullable": true
              },
              "format": {
                "type": "string"
              }
            },
            "required": [
              "topic",
              "authentication",
              "serviceUrl"
            ]
          }
        },
        "required": [
          "ruleType",
          "requestMode",
          "source",
          "target"
        ]
      },
      "pulsar_rule_patch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "pulsar"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source_patch"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "routingKey": {
                "type": "string"
              },
              "topic": {
                "type": "string"
              },
              "serviceUrl": {
                "type": "string"
              },
              "tlsTrustCerts": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              },
              "authentication": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/pulsar_token_auth"
                  }
                ],
                "discriminator": {
                  "propertyName": "authenticationMode",
                  "mapping": {
                    "token": "#/components/schemas/pulsar_token_auth"
                  }
                }
              },
              "enveloped": {
                "type": "boolean",
                "nullable": true
              },
              "format": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "ruleType"
        ]
      },
      "pulsar_rule_response": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "created": {
            "type": "number"
          },
          "modified": {
            "type": "number"
          },
          "_links": {
            "type": "object",
            "nullable": true
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "pulsar"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "routingKey": {
                "type": "string"
              },
              "topic": {
                "type": "string"
              },
              "serviceUrl": {
                "type": "string"
              },
              "tlsTrustCerts": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              },
              "authentication": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/pulsar_token_auth"
                  }
                ],
                "discriminator": {
                  "propertyName": "authenticationMode",
                  "mapping": {
                    "token": "#/components/schemas/pulsar_token_auth"
                  }
                }
              },
              "enveloped": {
                "type": "boolean",
                "nullable": true
              },
              "format": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "ruleType",
          "requestMode",
          "source",
          "target"
        ]
      },
      "ingress_postgres_outbox_rule_post": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "ingress-postgres-outbox"
            ]
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "url": {
                "type": "string"
              },
              "outboxTableSchema": {
                "type": "string"
              },
              "outboxTableName": {
                "type": "string"
              },
              "nodesTableSchema": {
                "type": "string"
              },
              "nodesTableName": {
                "type": "string"
              },
              "sslMode": {
                "type": "string",
                "enum": [
                  "prefer",
                  "require",
                  "verify-ca",
                  "verify-full"
                ]
              },
              "sslRootCert": {
                "type": "string",
                "nullable": true
              },
              "primarySite": {
                "type": "string",
                "example": "us-east-1-A"
              }
            },
            "required": [
              "url",
              "outboxTableSchema",
              "outboxTableName",
              "nodesTableSchema",
              "nodesTableName",
              "sslMode",
              "primarySite"
            ]
          }
        },
        "required": [
          "ruleType",
          "target"
        ]
      },
      "ingress_postgres_outbox_rule_patch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "ingress-postgres-outbox"
            ]
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "url": {
                "type": "string"
              },
              "outboxTableSchema": {
                "type": "string"
              },
              "outboxTableName": {
                "type": "string"
              },
              "nodesTableSchema": {
                "type": "string"
              },
              "nodesTableName": {
                "type": "string"
              },
              "sslMode": {
                "type": "string",
                "enum": [
                  "prefer",
                  "require",
                  "verify-ca",
                  "verify-full"
                ]
              },
              "sslRootCert": {
                "type": "string",
                "nullable": true
              },
              "primarySite": {
                "type": "string",
                "example": "us-east-1-A"
              }
            },
            "required": [
              "url",
              "outboxTableSchema",
              "outboxTableName",
              "nodesTableSchema",
              "nodesTableName",
              "sslMode",
              "primarySite"
            ]
          }
        },
        "required": [
          "ruleType",
          "target"
        ]
      },
      "ingress_postgres_outbox_rule_response": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "created": {
            "type": "number"
          },
          "modified": {
            "type": "number"
          },
          "_links": {
            "type": "object",
            "nullable": true
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "ingress-postgres-outbox"
            ]
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "url": {
                "type": "string"
              },
              "outboxTableSchema": {
                "type": "string"
              },
              "outboxTableName": {
                "type": "string"
              },
              "nodesTableSchema": {
                "type": "string"
              },
              "nodesTableName": {
                "type": "string"
              },
              "sslMode": {
                "type": "string",
                "enum": [
                  "prefer",
                  "require",
                  "verify-ca",
                  "verify-full"
                ]
              },
              "sslRootCert": {
                "type": "string",
                "nullable": true
              },
              "primarySite": {
                "type": "string",
                "example": "us-east-1-A"
              }
            }
          }
        },
        "required": [
          "ruleType",
          "target"
        ]
      },
      "ingress_mongodb_rule_post": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "ingress/mongodb"
            ]
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "url": {
                "type": "string"
              },
              "database": {
                "type": "string"
              },
              "collection": {
                "type": "string"
              },
              "pipeline": {
                "type": "string"
              },
              "fullDocument": {
                "type": "string",
                "enum": [
                  "updateLookup",
                  "whenAvailable",
                  "off"
                ],
                "default": "off"
              },
              "fullDocumentBeforeChange": {
                "type": "string",
                "enum": [
                  "whenAvailable",
                  "off"
                ],
                "default": "off"
              },
              "primarySite": {
                "type": "string",
                "example": "us-east-1-A"
              }
            },
            "required": [
              "url",
              "database",
              "collection",
              "pipeline",
              "primarySite"
            ]
          }
        },
        "required": [
          "ruleType",
          "target"
        ]
      },
      "ingress_mongodb_rule_patch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "status": {
            "type": "string"
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "ingress/mongodb"
            ]
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "url": {
                "type": "string"
              },
              "database": {
                "type": "string"
              },
              "collection": {
                "type": "string"
              },
              "pipeline": {
                "type": "string"
              },
              "fullDocument": {
                "type": "string",
                "enum": [
                  "updateLookup",
                  "whenAvailable",
                  "off"
                ],
                "default": "off"
              },
              "fullDocumentBeforeChange": {
                "type": "string",
                "enum": [
                  "whenAvailable",
                  "off"
                ],
                "default": "off"
              },
              "primarySite": {
                "type": "string",
                "example": "us-east-1-A"
              }
            },
            "required": [
              "url",
              "database",
              "collection",
              "pipeline",
              "primarySite"
            ]
          }
        },
        "required": [
          "ruleType",
          "target"
        ]
      },
      "ingress_mongodb_rule_response": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "created": {
            "type": "number"
          },
          "modified": {
            "type": "number"
          },
          "_links": {
            "type": "object",
            "nullable": true
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "ingress/mongodb"
            ]
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "watch": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "collection": {
                "type": "string"
              },
              "database": {
                "type": "string"
              },
              "pipeline": {
                "type": "string"
              },
              "fullDocument": {
                "type": "string",
                "enum": [
                  "updateLookup",
                  "whenAvailable",
                  "off"
                ],
                "default": "off"
              },
              "fullDocumentBeforeChange": {
                "type": "string",
                "enum": [
                  "whenAvailable",
                  "off"
                ],
                "default": "off"
              },
              "primarySite": {
                "type": "string",
                "example": "us-east-1-A"
              },
              "provisionedCapacity": {
                "type": "number"
              }
            }
          }
        },
        "required": [
          "ruleType",
          "target"
        ]
      },
      "unsupported_rule_response": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "created": {
            "type": "number"
          },
          "modified": {
            "type": "number"
          },
          "_links": {
            "type": "object",
            "nullable": true
          },
          "ruleType": {
            "type": "string",
            "enum": [
              "unsupported"
            ]
          },
          "requestMode": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/rule_source"
          },
          "target": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "url": {
                "type": "string"
              }
            },
            "required": [
              "url"
            ]
          }
        },
        "required": [
          "ruleType",
          "requestMode",
          "source",
          "target"
        ]
      },
      "queue": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "ttl": {
            "type": "integer"
          },
          "maxLength": {
            "type": "integer"
          },
          "region": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "ttl",
          "maxLength",
          "region"
        ]
      },
      "queue_response": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "amqp": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "uri": {
                "type": "string"
              },
              "queueName": {
                "type": "string"
              }
            }
          },
          "stomp": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "uri": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "destination": {
                "type": "string"
              }
            }
          },
          "state": {
            "type": "string"
          },
          "messages": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ready": {
                "type": "integer",
                "nullable": true
              },
              "unacknowledged": {
                "type": "integer",
                "nullable": true
              },
              "total": {
                "type": "integer",
                "nullable": true
              }
            }
          },
          "stats": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "publishRate": {
                "type": "number",
                "nullable": true
              },
              "deliveryRate": {
                "type": "number",
                "nullable": true
              },
              "acknowledgementRate": {
                "type": "number",
                "nullable": true
              }
            }
          },
          "ttl": {
            "type": "integer"
          },
          "maxLength": {
            "type": "integer"
          },
          "deadletter": {
            "type": "boolean"
          },
          "deadletterId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "namespace_post": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "authenticated": {
            "type": "boolean",
            "default": false
          },
          "persisted": {
            "type": "boolean",
            "default": false
          },
          "persistLast": {
            "type": "boolean",
            "default": false
          },
          "pushEnabled": {
            "type": "boolean",
            "default": false
          },
          "tlsOnly": {
            "type": "boolean",
            "default": false
          },
          "exposeTimeserial": {
            "type": "boolean",
            "default": false
          },
          "populateChannelRegistry": {
            "type": "boolean",
            "default": false
          },
          "batchingEnabled": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "batchingInterval": {
            "type": "integer",
            "nullable": true
          },
          "conflationEnabled": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "conflationInterval": {
            "type": "integer",
            "nullable": true
          },
          "conflationKey": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id"
        ]
      },
      "namespace_patch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "authenticated": {
            "type": "boolean"
          },
          "persisted": {
            "type": "boolean"
          },
          "persistLast": {
            "type": "boolean"
          },
          "pushEnabled": {
            "type": "boolean"
          },
          "tlsOnly": {
            "type": "boolean"
          },
          "exposeTimeserial": {
            "type": "boolean"
          },
          "populateChannelRegistry": {
            "type": "boolean"
          },
          "batchingEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "batchingInterval": {
            "type": "integer",
            "nullable": true
          },
          "conflationEnabled": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "conflationInterval": {
            "type": "integer",
            "nullable": true
          },
          "conflationKey": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "namespace_response": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "appId": {
            "type": "string"
          },
          "authenticated": {
            "type": "boolean"
          },
          "created": {
            "type": "integer"
          },
          "modified": {
            "type": "integer"
          },
          "id": {
            "type": "string"
          },
          "persisted": {
            "type": "boolean"
          },
          "persistLast": {
            "type": "boolean"
          },
          "pushEnabled": {
            "type": "boolean"
          },
          "tlsOnly": {
            "type": "boolean"
          },
          "exposeTimeserial": {
            "type": "boolean"
          },
          "populateChannelRegistry": {
            "type": "boolean"
          },
          "batchingEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "batchingInterval": {
            "type": "integer",
            "nullable": true
          },
          "conflationEnabled": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "conflationInterval": {
            "type": "integer",
            "nullable": true
          },
          "conflationKey": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "app_post": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "deprecated": true
          },
          "tlsOnly": {
            "type": "boolean",
            "nullable": true
          },
          "fcmKey": {
            "type": "string",
            "nullable": true
          },
          "fcmServiceAccount": {
            "type": "string",
            "nullable": true
          },
          "fcmProjectId": {
            "type": "string",
            "nullable": true
          },
          "apnsCertificate": {
            "type": "string",
            "nullable": true
          },
          "apnsPrivateKey": {
            "type": "string",
            "nullable": true
          },
          "apnsUseSandboxEndpoint": {
            "type": "boolean",
            "nullable": true
          }
        },
        "required": [
          "name"
        ]
      },
      "app_patch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "tlsOnly": {
            "type": "boolean",
            "nullable": true
          },
          "fcmKey": {
            "type": "string",
            "nullable": true
          },
          "fcmServiceAccount": {
            "type": "string",
            "nullable": true
          },
          "fcmProjectId": {
            "type": "string",
            "nullable": true
          },
          "apnsCertificate": {
            "type": "string",
            "nullable": true
          },
          "apnsPrivateKey": {
            "type": "string",
            "nullable": true
          },
          "apnsUseSandboxEndpoint": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "app_pkcs12": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "p12File": {
            "type": "string",
            "format": "binary"
          },
          "p12Pass": {
            "type": "string"
          }
        },
        "required": [
          "p12File",
          "p12Pass"
        ]
      },
      "app_response": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "accountId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "tlsOnly": {
            "type": "boolean",
            "nullable": true
          },
          "apnsUseSandboxEndpoint": {
            "type": "boolean",
            "nullable": true
          },
          "created": {
            "type": "integer"
          },
          "modified": {
            "type": "integer"
          },
          "_links": {
            "type": "object",
            "nullable": true
          }
        }
      },
      "key_post": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "revocableTokens": {
            "type": "boolean",
            "nullable": true
          },
          "capability": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "example": {
          "name": "string",
          "revocableTokens": true,
          "capability": {
            "channel1": [
              "publish",
              "subscribe"
            ],
            "channel2": [
              "history"
            ]
          }
        },
        "required": [
          "name",
          "capability"
        ]
      },
      "key_patch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "revocableTokens": {
            "type": "boolean",
            "nullable": true
          },
          "capability": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "example": {
          "name": "string",
          "revocableTokens": true,
          "capability": {
            "channel1": [
              "publish",
              "subscribe"
            ],
            "channel2": [
              "history"
            ]
          }
        }
      },
      "key_response": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "appId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "integer"
          },
          "key": {
            "type": "string"
          },
          "revocableTokens": {
            "type": "boolean",
            "nullable": true
          },
          "capability": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "created": {
            "type": "integer"
          },
          "modified": {
            "type": "integer"
          }
        },
        "example": {
          "appId": "string",
          "id": "string",
          "name": "string",
          "key": "string",
          "created": 0,
          "modified": 0,
          "revocableTokens": true,
          "capability": {
            "channel1": [
              "publish",
              "subscribe"
            ],
            "channel2": [
              "history"
            ]
          }
        }
      },
      "account_stats_response": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "intervalId": {
            "type": "string",
            "description": "The identifier for the stats interval.",
            "example": "2024-08-04:20"
          },
          "unit": {
            "type": "string",
            "description": "The time unit for the stats. Can be `minute`, `hour`, `day`, or `month`.",
            "example": "hour"
          },
          "schema": {
            "type": "string",
            "description": "The schema URL defining the structure of the stats.",
            "example": "https://schemas.ably.com/json/account-stats-0.0.4.json"
          },
          "entries": {
            "type": "object",
            "description": "Contains the actual statistics entries for this interval.",
            "additionalProperties": true,
            "example": {}
          },
          "accountId": {
            "type": "string",
            "description": "The ID of the account the stats are associated with.",
            "example": "DhSspB"
          }
        },
        "required": [
          "intervalId",
          "unit",
          "accountId",
          "schema",
          "entries"
        ]
      },
      "app_stats_response": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "intervalId": {
            "type": "string",
            "description": "The identifier for the stats interval.",
            "example": "2024-08-04:20"
          },
          "unit": {
            "type": "string",
            "description": "The time unit for the stats. Can be `minute`, `hour`, `day`, or `month`.",
            "example": "hour"
          },
          "schema": {
            "type": "string",
            "description": "The schema URL defining the structure of the stats.",
            "example": "https://schemas.ably.com/json/app-stats-0.0.5.json"
          },
          "entries": {
            "type": "object",
            "description": "Contains the actual statistics entries for this interval.",
            "additionalProperties": true,
            "example": {}
          },
          "appId": {
            "type": "string",
            "description": "The ID of the application the stats are associated with.",
            "example": "MKEFrw"
          }
        },
        "required": [
          "intervalId",
          "unit",
          "appId",
          "schema",
          "entries"
        ]
      },
      "me": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "token": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "capabilities": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "id",
              "name",
              "capabilities"
            ]
          },
          "user": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "integer"
              },
              "email": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "email"
            ]
          },
          "account": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name"
            ]
          }
        }
      },
      "error": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer"
          },
          "statusCode": {
            "type": "integer"
          },
          "href": {
            "type": "string"
          },
          "details": {
            "type": "object",
            "nullable": true
          }
        },
        "required": [
          "message",
          "code",
          "statusCode",
          "href"
        ]
      }
    }
  },
  "basePath": "/v1",
  "servers": [
    {
      "url": "https://control.ably.net/v1"
    }
  ]
}