{
  "openapi": "3.0.0",
  "info": {
    "description": "This is an interactive document explaining the API(s) that could be used to fetch data from [Hubhopper](https://hubhopper.com). Use the api key provided to authorize `x-api-key` and test the API(s). The output data models are also available for reference.",
    "title": "Hubhopper Partner Integration API(s) - Production",
    "version": "v5",
    "x-jentic-source-url": "https://docs.hubhopper.com/api/integrations/partner/swagger.yaml"
  },
  "servers": [
    {
      "url": "https://apis.hubhopper.com/partner"
    }
  ],
  "paths": {
    "/categories": {
      "get": {
        "parameters": [
          {
            "description": "Provide the size of the page to fetch.",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Provide the page number to fetch.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryList"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "404 response"
          },
          "500": {
            "description": "500 response"
          }
        },
        "security": [
          {
            "api_key": [],
            "partner_id": []
          }
        ],
        "tags": [
          "Category"
        ],
        "description": "Get the list of all content categories."
      }
    },
    "/categories/{categoryId}": {
      "get": {
        "parameters": [
          {
            "description": "Unique qualifier for a category.",
            "in": "path",
            "name": "categoryId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleCategory"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "404 response"
          },
          "500": {
            "description": "500 response"
          }
        },
        "security": [
          {
            "api_key": [],
            "partner_id": []
          }
        ],
        "tags": [
          "Category"
        ],
        "description": "Get specific content category."
      }
    },
    "/categories/{categoryId}/podcasts": {
      "get": {
        "parameters": [
          {
            "description": "Unique qualifier for a category.",
            "in": "path",
            "name": "categoryId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Provide the page number to fetch.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Provide the size of the page to fetch.",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Order the items by 'newest' | 'random'",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Takes filters like 'lang' in a url encoded json. \nExample:\n1)Single ->\n&nbsp;&nbsp;&nbsp;&nbsp; var filterJson = {\"lang\":[\"en\"]};\n&nbsp;&nbsp;&nbsp;&nbsp; var url = baseUrl+'?'+filters=enocdeURI(JSON.stringify(filterJson));\n2)Multiple ->\n&nbsp;&nbsp;&nbsp;&nbsp; var filterJson = {\"lang\":[\"en\",\"hi\"]};\n&nbsp;&nbsp;&nbsp;&nbsp; var url = baseUrl+'?'+filters=enocdeURI(JSON.stringify(filterJson));",
            "in": "query",
            "name": "filters",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PodcastList"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "404 response"
          },
          "500": {
            "description": "500 response"
          }
        },
        "security": [
          {
            "api_key": [],
            "partner_id": []
          }
        ],
        "tags": [
          "Category"
        ],
        "description": "Get a list of all podcasts under a category."
      }
    },
    "/podcasts": {
      "get": {
        "parameters": [
          {
            "description": "Provide the page number to fetch.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Provide the size of the page to fetch.",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Order the items by 'newest' | 'random'",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Takes filters like 'lang' in a url encoded json. \nExample:\n1)Single ->\n&nbsp;&nbsp;&nbsp;&nbsp; var filterJson = {\"lang\":[\"en\"]};\n&nbsp;&nbsp;&nbsp;&nbsp; var url = baseUrl+'?'+filters=enocdeURI(JSON.stringify(filterJson));\n2)Multiple ->\n&nbsp;&nbsp;&nbsp;&nbsp; var filterJson = {\"lang\":[\"en\",\"hi\"]};\n&nbsp;&nbsp;&nbsp;&nbsp; var url = baseUrl+'?'+filters=enocdeURI(JSON.stringify(filterJson));",
            "in": "query",
            "name": "filters",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PodcastList"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "404 response"
          },
          "500": {
            "description": "500 response"
          }
        },
        "security": [
          {
            "api_key": [],
            "partner_id": []
          }
        ],
        "tags": [
          "Podcast"
        ],
        "description": "Get the list of all podcasts."
      }
    },
    "/podcasts/{podcastId}": {
      "get": {
        "parameters": [
          {
            "description": "Unique qualifier for a podcast.",
            "in": "path",
            "name": "podcastId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SinglePodcast"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response"
          },
          "500": {
            "description": "500 response"
          }
        },
        "security": [
          {
            "api_key": [],
            "partner_id": []
          }
        ],
        "tags": [
          "Podcast"
        ],
        "description": "Get a single Podcast."
      }
    },
    "/podcasts/{podcastId}/episodes": {
      "get": {
        "parameters": [
          {
            "description": "Provide the page number to fetch.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Provide the size of the page to fetch.",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Order the items by 'newest' | 'random'",
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Takes filters like 'lang' in a url encoded json. \nExample:\n1)Single ->\n&nbsp;&nbsp;&nbsp;&nbsp; var filterJson = {\"lang\":[\"en\"]};\n&nbsp;&nbsp;&nbsp;&nbsp; var url = baseUrl+'?'+filters=enocdeURI(JSON.stringify(filterJson));\n2)Multiple ->\n&nbsp;&nbsp;&nbsp;&nbsp; var filterJson = {\"lang\":[\"en\",\"hi\"]};\n&nbsp;&nbsp;&nbsp;&nbsp; var url = baseUrl+'?'+filters=enocdeURI(JSON.stringify(filterJson));",
            "in": "query",
            "name": "filters",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique qualifier for a podcast.",
            "in": "path",
            "name": "podcastId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PodcastEpisodeList"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "404 response"
          },
          "500": {
            "description": "500 response"
          }
        },
        "security": [
          {
            "api_key": [],
            "partner_id": []
          }
        ],
        "tags": [
          "Podcast"
        ],
        "description": "Get a list of all episodes under a podcast."
      }
    },
    "/util/languages": {
      "get": {
        "parameters": [
          {
            "description": "Provide the size of the page to fetch.",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Provide the page number to fetch.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LanguageList"
                }
              }
            },
            "description": "200 response"
          },
          "204": {
            "description": "204 response"
          },
          "401": {
            "description": "401 response"
          },
          "404": {
            "description": "404 response"
          },
          "500": {
            "description": "500 response"
          }
        },
        "security": [
          {
            "api_key": [],
            "partner_id": []
          }
        ],
        "tags": [
          "Util"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "CategoryList": {
        "properties": {
          "categories": {
            "items": {
              "$ref": "#/components/schemas/CategoryListCategoriesItem"
            },
            "type": "array"
          },
          "noOfPages": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "pageSize": {
            "type": "integer"
          },
          "total": {
            "type": "integer"
          }
        },
        "title": "CategoryListOutputModel",
        "type": "object"
      },
      "CategoryListCategoriesItem": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Empty": {
        "title": "Empty Schema",
        "type": "object"
      },
      "Error": {
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "title": "Error Schema",
        "type": "object"
      },
      "LanguageItem": {
        "properties": {
          "code": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "title": "LanguageItem",
        "type": "object"
      },
      "LanguageList": {
        "properties": {
          "languages": {
            "items": {
              "$ref": "#/components/schemas/LanguageItem"
            },
            "type": "array"
          },
          "noOfPages": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "pageSize": {
            "type": "integer"
          },
          "total": {
            "type": "integer"
          }
        },
        "title": "LanguageList",
        "type": "object"
      },
      "PodcastEpisodeList": {
        "properties": {
          "episodes": {
            "items": {
              "$ref": "#/components/schemas/PodcastEpisodeListEpisodesItem"
            },
            "type": "array"
          },
          "noOfPages": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "pageSize": {
            "type": "integer"
          },
          "total": {
            "type": "integer"
          }
        },
        "title": "PodcastEpisodeListOutputModel",
        "type": "object"
      },
      "PodcastEpisodeListEpisodesItem": {
        "properties": {
          "author": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "episodeId": {
            "type": "integer"
          },
          "episodeUrl": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "isNew": {
            "type": "boolean"
          },
          "play": {
            "properties": {
              "duration": {
                "type": "string"
              },
              "durationInSec": {
                "type": "integer"
              },
              "size": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "podcastId": {
            "type": "integer"
          },
          "podcastUrl": {
            "type": "string"
          },
          "publishTime": {
            "type": "string"
          },
          "publishedOn": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PodcastList": {
        "properties": {
          "noOfPages": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "pageSize": {
            "type": "integer"
          },
          "podcasts": {
            "items": {
              "$ref": "#/components/schemas/PodcastListPodcastsItem"
            },
            "type": "array"
          },
          "total": {
            "type": "integer"
          }
        },
        "title": "PodcastListOutputModel",
        "type": "object"
      },
      "PodcastListPodcastsItem": {
        "properties": {
          "author": {
            "type": "string"
          },
          "category": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "categoryId": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "episodes": {
            "type": "integer"
          },
          "featured": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "featuredId": {
            "type": "integer"
          },
          "image": {
            "type": "string"
          },
          "keywords": {
            "type": "string"
          },
          "latestEpisodeTime": {
            "type": "string"
          },
          "podcastId": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SingleCategory": {
        "description": "Model to fetch a single category.",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/SingleCategoryCategory"
          }
        },
        "title": "SingleCategoryOutputModel",
        "type": "object"
      },
      "SingleCategoryCategory": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SinglePodcast": {
        "properties": {
          "podcast": {
            "$ref": "#/components/schemas/SinglePodcastPodcast"
          }
        },
        "title": "SinglePodcastOutputModel",
        "type": "object"
      },
      "SinglePodcastPodcast": {
        "properties": {
          "author": {
            "type": "string"
          },
          "category": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "categoryId": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "episodes": {
            "type": "integer"
          },
          "featured": {
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "featuredId": {
            "type": "integer"
          },
          "image": {
            "type": "string"
          },
          "keywords": {
            "type": "string"
          },
          "latest_episode_time": {
            "type": "string"
          },
          "podcastId": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "website": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "api_key": {
        "in": "header",
        "name": "x-api-key",
        "type": "apiKey"
      },
      "partner_id": {
        "in": "header",
        "name": "hhPartnerId",
        "type": "apiKey"
      }
    }
  },
  "tags": [
    {
      "description": "API(s) related to Categories.",
      "name": "Category"
    },
    {
      "description": "API(s) related to Podcasts and Episodes.",
      "name": "Podcast"
    },
    {
      "description": "API(s) related to Content Utility on Hubhopper.",
      "name": "Util"
    }
  ]
}