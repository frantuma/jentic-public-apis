[
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Found 3 absolute http references: [(('servers', 0, 'url'), 'url', 'https://papinet.papinet.io'), (('info', 'license', 'url'), 'url', 'https://github.com/papinet/papiNet-API/blob/patrice-v1.0.0/LICENSE'), (('info', 'contact', 'url'), 'url', 'https://github.com/papinet/papiNet-API/issues')]",
    "severity": 3,
    "code": "found-absolute-http-references",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec",
      "absoluteRefsCount": "3"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Every operation should have security defined on it or on the root level. [path: paths./orders.get]",
    "severity": 1,
    "code": "security-defined",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/orders",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Every operation should have security defined on it or on the root level. [path: paths./orders/{orderId}.get]",
    "severity": 1,
    "code": "security-defined",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/orders/{orderId}",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./orders.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/orders",
        "get",
        "operationId"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./orders.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/orders",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./orders/{orderId}.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/orders/{orderId}",
        "get",
        "operationId"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./orders/{orderId}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/orders/{orderId}",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 24,
        "character": 12
      },
      "end": {
        "line": 67,
        "character": 61
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./orders.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/orders",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 24,
        "character": 12
      },
      "end": {
        "line": 67,
        "character": 61
      }
    },
    "message": "Operation must have non-empty \"tags\" array. [path: paths./orders.get]",
    "severity": 2,
    "code": "operation-tags",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/orders",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 76,
        "character": 12
      },
      "end": {
        "line": 97,
        "character": 57
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./orders/{orderId}.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/orders/{orderId}",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 76,
        "character": 12
      },
      "end": {
        "line": 97,
        "character": 57
      }
    },
    "message": "Operation must have non-empty \"tags\" array. [path: paths./orders/{orderId}.get]",
    "severity": 2,
    "code": "operation-tags",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/orders/{orderId}",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Found 3 absolute http references: [(('servers', 0, 'url'), 'url', 'https://papinet.papinet.io'), (('info', 'license', 'url'), 'url', 'https://github.com/papinet/papiNet-API/blob/patrice-v1.0.0/LICENSE'), (('info', 'contact', 'url'), 'url', 'https://github.com/papinet/papiNet-API/issues')]",
    "severity": 3,
    "code": "found-absolute-http-references",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec",
      "absoluteRefsCount": "3"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Every operation should have security defined on it or on the root level. [path: paths./orders.get]",
    "severity": 1,
    "code": "security-defined",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/orders",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Every operation should have security defined on it or on the root level. [path: paths./orders/{orderId}.get]",
    "severity": 1,
    "code": "security-defined",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/orders/{orderId}",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./orders.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/orders",
        "get",
        "operationId"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./orders.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/orders",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./orders/{orderId}.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/orders/{orderId}",
        "get",
        "operationId"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./orders/{orderId}.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/orders/{orderId}",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 24,
        "character": 12
      },
      "end": {
        "line": 67,
        "character": 61
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./orders.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/orders",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 24,
        "character": 12
      },
      "end": {
        "line": 67,
        "character": 61
      }
    },
    "message": "Operation must have non-empty \"tags\" array. [path: paths./orders.get]",
    "severity": 2,
    "code": "operation-tags",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/orders",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 76,
        "character": 12
      },
      "end": {
        "line": 97,
        "character": 57
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./orders/{orderId}.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/orders/{orderId}",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 76,
        "character": 12
      },
      "end": {
        "line": 97,
        "character": 57
      }
    },
    "message": "Operation must have non-empty \"tags\" array. [path: paths./orders/{orderId}.get]",
    "severity": 2,
    "code": "operation-tags",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/orders/{orderId}",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  }
]