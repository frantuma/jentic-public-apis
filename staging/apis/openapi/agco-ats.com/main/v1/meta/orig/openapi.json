{
  "openapi": "3.0.0",
  "info": {
    "title": "API",
    "version": "v1",
    "x-jentic-source-url": "https://secure.agco-ats.com:443/swagger/docs/v1"
  },
  "servers": [
    {
      "url": "https://secure.agco-ats.com/"
    }
  ],
  "paths": {
    "/api/v2/AftermarketServices/Certificates": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Object"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/System.Object"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Object"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/System.Object"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AftermarketServices"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "AftermarketServices_GetCerts",
        "summary": "No Documentation Found."
      }
    },
    "/api/v2/AftermarketServices/ECUs/{serialNumber}": {
      "put": {
        "parameters": [
          {
            "description": "The serial number of the ECU.",
            "in": "path",
            "name": "serialNumber",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The EDT Instance Id of the kit calling this method.",
            "in": "query",
            "name": "EDTInstanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AGCOPowerServices.Models.ECU"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AGCOPowerServices.Models.ECU"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AGCOPowerServices.Models.ECU"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AGCOPowerServices.Models.ECU"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AftermarketServices"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "AftermarketServices_PutECU",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AGCOPowerServices.Models.ECU"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AGCOPowerServices.Models.ECU"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AGCOPowerServices.Models.ECU"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AGCOPowerServices.Models.ECU"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/AGCOPowerServices.Models.ECU"
              }
            }
          },
          "description": "The ecu to modify.",
          "required": true
        },
        "summary": "Activate or Deactivate an ECU, or Report an ECU as Damaged."
      }
    },
    "/api/v2/AftermarketServices/Engines/{serialNumber}/IQACodes": {
      "get": {
        "parameters": [
          {
            "description": "The serial number of the engine.",
            "in": "path",
            "name": "serialNumber",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The EDT Instance Id of the kit calling this method.",
            "in": "query",
            "name": "EDTInstanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "text/xml": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AftermarketServices"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "AftermarketServices_GetEngineIQACodes",
        "summary": "Get injector codes given engine."
      },
      "put": {
        "parameters": [
          {
            "description": "The serial number of the Engine",
            "in": "path",
            "name": "serialNumber",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The EDT Instance Id of the kit calling this method.",
            "in": "query",
            "name": "EDTInstanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AftermarketServices"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "AftermarketServices_PutIQACodes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "application/xml": {
              "schema": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "text/json": {
              "schema": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "text/xml": {
              "schema": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            }
          },
          "description": "A string array of IQA codes in physical order",
          "required": true
        },
        "summary": "Report the IQA codes used by an engine"
      }
    },
    "/api/v2/AftermarketServices/Engines/{serialNumber}/ProductionData": {
      "get": {
        "parameters": [
          {
            "description": "The serial number of the engine.",
            "in": "path",
            "name": "serialNumber",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The EDT Instance Id of the kit calling this method.",
            "in": "query",
            "name": "EDTInstanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AGCOPowerServices.Models.ProductionData"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AGCOPowerServices.Models.ProductionData"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AGCOPowerServices.Models.ProductionData"
                  },
                  "type": "array"
                }
              },
              "text/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AGCOPowerServices.Models.ProductionData"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AftermarketServices"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "AftermarketServices_GetProductionData",
        "summary": "Get production calibration data for given engine."
      }
    },
    "/api/v2/AftermarketServices/Hello": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AftermarketServices"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "AftermarketServices_GetConnectionStatus",
        "summary": "Check whether there is connectivity to AGCO Power Web Services"
      }
    },
    "/api/v2/AftermarketServices/UserStatuses": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "voucherCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "dealerCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AGCOPowerServices.Models.UserStatus"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AGCOPowerServices.Models.UserStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AGCOPowerServices.Models.UserStatus"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AGCOPowerServices.Models.UserStatus"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AftermarketServices"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "AftermarketServices_GetUserStatus",
        "summary": "Retrieve the status of an EDT Kit Registration with AGCO Power Web Services"
      },
      "put": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AftermarketServices"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "AftermarketServices_UpdateUserStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AGCOPowerServices.Models.UserStatus"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AGCOPowerServices.Models.UserStatus"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AGCOPowerServices.Models.UserStatus"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AGCOPowerServices.Models.UserStatus"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/AGCOPowerServices.Models.UserStatus"
              }
            }
          },
          "required": true
        },
        "summary": "Update the status of an EDT Kit Registration with AGCO Power Web Services"
      }
    },
    "/api/v2/AuthenticatedUsers/{UserID}/Tokens": {
      "put": {
        "parameters": [
          {
            "in": "path",
            "name": "UserID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Authentication"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Authentication_PutManageTokens",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.TokenOptions"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.TokenOptions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.TokenOptions"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.TokenOptions"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.TokenOptions"
              }
            }
          },
          "description": "The options for token management.",
          "required": true
        },
        "summary": "Manage API tokens."
      }
    },
    "/api/v2/Authentication": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.AuthenticatedUser"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.AuthenticatedUser"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.AuthenticatedUser"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.AuthenticatedUser"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Authentication"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Authentication_Default",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.Credentials"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.Credentials"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.Credentials"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.Credentials"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.Credentials"
              }
            }
          },
          "description": "Create a user account.",
          "required": true
        },
        "summary": "Authenticate a user."
      }
    },
    "/api/v2/Authentication/IsAlive": {
      "get": {
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Authentication"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Authentication_IsAlive",
        "summary": "Acknowledges the connection to the API"
      }
    },
    "/api/v2/Authentication/RequestPasswordReset": {
      "post": {
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Authentication"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Authentication_RequestPasswordReset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.PasswordResetRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.PasswordResetRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.PasswordResetRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.PasswordResetRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.PasswordResetRequest"
              }
            }
          },
          "description": "The password reset request.",
          "required": true
        },
        "summary": "Request a password reset."
      }
    },
    "/api/v2/Authentication/ResetPasword": {
      "post": {
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Authentication"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Authentication_ResetPasword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.PasswordReset"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.PasswordReset"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.PasswordReset"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.PasswordReset"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.PasswordReset"
              }
            }
          },
          "description": "The password reset detail.",
          "required": true
        },
        "summary": "Reset a password"
      }
    },
    "/api/v2/AuthorizationCategories": {
      "get": {
        "parameters": [
          {
            "description": "Optional. The page limit.  If not specified, the default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset.  If not specified, the default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Filter by categories visible to the provided user with the provided userID.",
            "in": "query",
            "name": "userID",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Filter by categories containing a definition with the provided ID.",
            "in": "query",
            "name": "definitionID",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_AuthorizationCodes.Shared.Models.Category_"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_AuthorizationCodes.Shared.Models.Category_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_AuthorizationCodes.Shared.Models.Category_"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_AuthorizationCodes.Shared.Models.Category_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AuthorizationCategories"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "AuthorizationCategories_Get",
        "summary": "Get authorization categories."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AuthorizationCategories"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "AuthorizationCategories_Post",
        "requestBody": {
          "$ref": "#/components/requestBodies/AuthorizationCodes.Shared.Models.Category"
        },
        "summary": "Add an authorization category."
      }
    },
    "/api/v2/AuthorizationCategories/Users": {
      "get": {
        "parameters": [
          {
            "description": "Optional. Defaults to 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Defaults to 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Includes only users with IDs on the provided comma-separated list.",
            "in": "query",
            "name": "userIDs",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Includes only users with categories with IDs on the provided comma-separated list.",
            "in": "query",
            "name": "categoryIDs",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If true, include full Authorization Category detail. Defaults to false.",
            "in": "query",
            "name": "includeCategories",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "If true, include full User detail. Defaults to false.",
            "in": "query",
            "name": "includeUsers",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Optional. Includes only users with a Name, Username, or Email containing the provided value.",
            "in": "query",
            "name": "userSearch",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_AuthorizationCodes.Shared.Models.CategoryUserReport_"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_AuthorizationCodes.Shared.Models.CategoryUserReport_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_AuthorizationCodes.Shared.Models.CategoryUserReport_"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_AuthorizationCodes.Shared.Models.CategoryUserReport_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AuthorizationCategories"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "AuthorizationCategories_GetUsers",
        "summary": "Returns a report of access that users have to Authorization Categories."
      }
    },
    "/api/v2/AuthorizationCategories/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The ID of the authorization category.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AuthorizationCategories"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "AuthorizationCategories_Delete",
        "summary": "Remove an authorization category."
      },
      "put": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AuthorizationCategories"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "AuthorizationCategories_Put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.Category"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.Category"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.Category"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.Category"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.Category"
              }
            }
          },
          "description": "An authorization category.",
          "required": true
        },
        "summary": "Update an authorization category."
      }
    },
    "/api/v2/AuthorizationCategories/{id}/Users/{userID}": {
      "delete": {
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AuthorizationCategories"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "AuthorizationCategories_RemoveUser",
        "summary": "Deletes a category a user could see."
      },
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "userID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AuthorizationCategories"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "AuthorizationCategories_AddUser",
        "summary": "Add a category that a user can see."
      }
    },
    "/api/v2/AuthorizationCodeDefinitions": {
      "get": {
        "parameters": [
          {
            "description": "Optional. The page limit.  If not specified, the default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset.  If not specified, the default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. If specified, filters definitions by name. Starting and ending wildcards (*) supported.",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. If specified, filters definitions to those created by the given User ID.",
            "in": "query",
            "name": "createdByUserID",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. If specified, filters definitions to those deleted by the given User ID.",
            "in": "query",
            "name": "deletedByUserID",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Whether to include deleted definitions. 'False' by default.",
            "in": "query",
            "name": "includeDeleted",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Optional. If specified, filters definitions with the designated categoryID.",
            "in": "query",
            "name": "categoryID",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_AuthorizationCodes.Shared.Models.AuthorizationCodeDefinition_"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_AuthorizationCodes.Shared.Models.AuthorizationCodeDefinition_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_AuthorizationCodes.Shared.Models.AuthorizationCodeDefinition_"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_AuthorizationCodes.Shared.Models.AuthorizationCodeDefinition_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AuthorizationCodeDefinitions"
        ],
        "deprecated": false,
        "description": "Additional searches: validationFields[Name]=true and dataFields[Name]=true. These can be used to search for authorization code definitions that have the specified data or validation fields.",
        "operationId": "AuthorizationCodeDefinitions_GetAuthorizationCodeDefinition",
        "summary": "Get authorization code definitions."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AuthorizationCodeDefinitions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "AuthorizationCodeDefinitions_PostAuthorizationCodeDefinition",
        "requestBody": {
          "$ref": "#/components/requestBodies/AuthorizationCodes.Shared.Models.AuthorizationCodeDefinition"
        },
        "summary": "Add an authorization code definition."
      }
    },
    "/api/v2/AuthorizationCodeDefinitions/{ID}/Categories/{categoryID}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A category ID, as a GUID.",
            "in": "path",
            "name": "categoryID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AuthorizationCodeDefinitions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "AuthorizationCodeDefinitions_RemoveCategoryFromDefinition",
        "summary": "Deletes the category from the authorization code definition."
      },
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A category ID, as a GUID.",
            "in": "path",
            "name": "categoryID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AuthorizationCodeDefinitions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "AuthorizationCodeDefinitions_AddCategoryToDefinition",
        "summary": "Add a category to an authorizationCodeDefintion."
      }
    },
    "/api/v2/AuthorizationCodeDefinitions/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The ID of the authorization code definition.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AuthorizationCodeDefinitions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "AuthorizationCodeDefinitions_DeleteAuthorizationCodeDefinition",
        "summary": "Disable an authorization code definition"
      },
      "get": {
        "parameters": [
          {
            "description": "The ID of the authorization code definition.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCodeDefinition"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCodeDefinition"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCodeDefinition"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCodeDefinition"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AuthorizationCodeDefinitions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "AuthorizationCodeDefinitions_GetAuthorizationCodeDefinition",
        "summary": "Get an authorization code definition by its ID"
      },
      "put": {
        "parameters": [
          {
            "description": "The ID of the authorization code definition.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AuthorizationCodeDefinitions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "AuthorizationCodeDefinitions_PutAuthorizationCodeDefinition",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCodeDefinition"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCodeDefinition"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCodeDefinition"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCodeDefinition"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCodeDefinition"
              }
            }
          },
          "description": "An authorization code definition.",
          "required": true
        },
        "summary": "Update an authorization code definition"
      }
    },
    "/api/v2/AuthorizationCodes": {
      "get": {
        "parameters": [
          {
            "description": "Optional. If provided, searches for entities with the provided authorization code.",
            "in": "query",
            "name": "code",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. The page limit.  If not specified, the default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset.  If not specified, the default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. If specified, filters codes by definition id.",
            "in": "query",
            "name": "definitionID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. If specified, filters codes to those created by the given User ID.",
            "in": "query",
            "name": "createdByUserID",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. If specified, filters codes to those deleted by the given User ID.",
            "in": "query",
            "name": "deletedByUserID",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Whether to include deleted codes. 'False' by default.",
            "in": "query",
            "name": "includeDeleted",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_AuthorizationCodes.Shared.Models.AuthorizationCode_"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_AuthorizationCodes.Shared.Models.AuthorizationCode_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_AuthorizationCodes.Shared.Models.AuthorizationCode_"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_AuthorizationCodes.Shared.Models.AuthorizationCode_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AuthorizationCodes"
        ],
        "deprecated": false,
        "description": "Additional searches: validationParameters[Name]=Value and dataParameters[Name]=Value. These can be used to search for authorization codes that have been generated using specified values for data or validation parameters.",
        "operationId": "AuthorizationCodes_GetAuthorizationCodes",
        "summary": "Get authorization codes."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AuthorizationCodes"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "AuthorizationCodes_PostAuthorizationCode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCode"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCode"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCode"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCode"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCode"
              }
            }
          },
          "description": "The model from which to generate an authorization code.",
          "required": true
        },
        "summary": "Generates an authorization code using the provided definition and parameters."
      }
    },
    "/api/v2/AuthorizationCodes/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The id of the authorization code.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AuthorizationCodes"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "AuthorizationCodes_DeleteAuthorizationCode",
        "summary": "Hide an authorization code."
      },
      "get": {
        "parameters": [
          {
            "description": "The id of the authorization code.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCode"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCode"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCode"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCode"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AuthorizationCodes"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "AuthorizationCodes_GetAuthorizationCode",
        "summary": "Get an authorization code by its ID."
      },
      "put": {
        "parameters": [
          {
            "description": "The id of the authorization code.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AuthorizationCodes"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "AuthorizationCodes_PutAuthorizationCode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCode"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCode"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCode"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCode"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCode"
              }
            }
          },
          "description": "The model from which to update an authorization code.",
          "required": true
        },
        "summary": "Update an authorization code."
      }
    },
    "/api/v2/AuthorizationCodes/{id}/ContactInformation": {
      "get": {
        "parameters": [
          {
            "description": "The id of the authorization code.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationContactInformation"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationContactInformation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationContactInformation"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationContactInformation"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AuthorizationCodes"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "AuthorizationCodes_GetContactInformation",
        "summary": "Get contact information for an authorization code."
      }
    },
    "/api/v2/AuthorizationCodes/{id}/Validate": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.CodeValidationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.CodeValidationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.CodeValidationModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.CodeValidationModel"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AuthorizationCodes"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "AuthorizationCodes_ValidateAuthorizationCode",
        "summary": "No Documentation Found."
      }
    },
    "/api/v2/AuthorizationContactInformation": {
      "get": {
        "parameters": [
          {
            "description": "Optional. The page limit.  If not specified, the default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset.  If not specified, the default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Search by authorization code.",
            "in": "query",
            "name": "authorizationCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Include only data for authorization codes created after a provided date.",
            "in": "query",
            "name": "afterDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Optional. Include only data for authorization codes created before a provided date.",
            "in": "query",
            "name": "beforeDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Optional. Search by dealer code.",
            "in": "query",
            "name": "dealerCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_AuthorizationCodes.Shared.Models.AuthorizationContactInformation_"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_AuthorizationCodes.Shared.Models.AuthorizationContactInformation_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_AuthorizationCodes.Shared.Models.AuthorizationContactInformation_"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_AuthorizationCodes.Shared.Models.AuthorizationContactInformation_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AuthorizationContactInformation"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "AuthorizationContactInformation_Get",
        "summary": "Get contact information for authorization codes."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "AuthorizationContactInformation"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "AuthorizationContactInformation_Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationContactInformation"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationContactInformation"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationContactInformation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationContactInformation"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationContactInformation"
              }
            }
          },
          "description": "A contact information.",
          "required": true
        },
        "summary": "Add contact information for authorization code."
      }
    },
    "/api/v2/Brands": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "text/xml": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Brands"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Brands_Brands",
        "summary": "Gets a list of Brands."
      }
    },
    "/api/v2/Bundles": {
      "get": {
        "parameters": [
          {
            "description": "Optional. Filter by UpdateGroup ID.",
            "in": "query",
            "name": "UpdateGroupID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter by active status.",
            "in": "query",
            "name": "Active",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. If provided, filters by BundleNumber.",
            "in": "query",
            "name": "BundleNumber",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.Bundle_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.Bundle_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Bundles"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Bundles_GetBundles",
        "summary": "Get the list of bundles."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Bundles"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Bundles_PostBundle",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.Bundle"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.Bundle"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.Bundle"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.Bundle"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.Bundle"
              }
            }
          },
          "description": "The bundle to add",
          "required": true
        },
        "summary": "Add a Bundle to the Update System."
      }
    },
    "/api/v2/Bundles/{ID}": {
      "delete": {
        "parameters": [
          {
            "description": "The Bundle ID to Delete",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Bundles"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Bundles_DeleteBundle",
        "summary": "Delete a Bundle."
      },
      "get": {
        "parameters": [
          {
            "description": "The Bundle ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.Bundle"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.Bundle"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.Bundle"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.Bundle"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Bundles"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Bundles_GetBundle",
        "summary": "Get a specific Bundle by ID."
      },
      "put": {
        "parameters": [
          {
            "description": "The unique ID of the Bundle",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Bundles"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Bundles_PutBundle",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.Bundle"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.Bundle"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.Bundle"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.Bundle"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.Bundle"
              }
            }
          },
          "description": "The bundle to modify",
          "required": true
        },
        "summary": "Modify a Bundle in the Update System."
      }
    },
    "/api/v2/Clients": {
      "get": {
        "parameters": [
          {
            "description": "Optional. Filter clients by Tag. Wildcards are supported (*).",
            "in": "query",
            "name": "Tag",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.Client_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.Client_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Clients"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Clients_Get",
        "summary": "Get a List of Clients in the Update System."
      }
    },
    "/api/v2/Clients/{ClientID}/CachedFiles": {
      "get": {
        "parameters": [
          {
            "description": "The ClientID of the Client",
            "in": "path",
            "name": "ClientID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Only Expired Files (true|false)",
            "in": "query",
            "name": "Expired",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "text/xml": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UpdateSystem"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "UpdateSystem_GetCachedFiles",
        "summary": "Get a list of Cached Files installed on the client Machine."
      }
    },
    "/api/v2/Clients/{ClientID}/PackageReports": {
      "get": {
        "parameters": [
          {
            "description": "The Client ID",
            "in": "path",
            "name": "ClientID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UpdateSystem.Models.PackageReport"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UpdateSystem.Models.PackageReport"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UpdateSystem.Models.PackageReport"
                  },
                  "type": "array"
                }
              },
              "text/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UpdateSystem.Models.PackageReport"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "PackageReports"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "PackageReports_Default",
        "summary": "Get the package reports for a client."
      },
      "put": {
        "parameters": [
          {
            "description": "The Client ID",
            "in": "path",
            "name": "ClientID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "PackageReports"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "PackageReports_Default",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.PackageReport"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.PackageReport"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.PackageReport"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.PackageReport"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.PackageReport"
              }
            }
          },
          "description": "The Package Report",
          "required": true
        },
        "summary": "Submit a package report"
      }
    },
    "/api/v2/Clients/{ClientID}/PackageReports/Batch": {
      "put": {
        "parameters": [
          {
            "description": "The Client ID",
            "in": "path",
            "name": "ClientID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "PackageReports"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "PackageReports_Batch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.PackageReport"
                },
                "type": "array"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.PackageReport"
                },
                "type": "array"
              }
            },
            "application/xml": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.PackageReport"
                },
                "type": "array"
              }
            },
            "text/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.PackageReport"
                },
                "type": "array"
              }
            },
            "text/xml": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.PackageReport"
                },
                "type": "array"
              }
            }
          },
          "description": "The Package Reports",
          "required": true
        },
        "summary": "Submit a batch of package reports"
      }
    },
    "/api/v2/Clients/{ID}": {
      "get": {
        "parameters": [
          {
            "description": "The Client ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.Client"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.Client"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.Client"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.Client"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Clients"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Clients_Get",
        "summary": "Get a Client in the Update System."
      },
      "put": {
        "parameters": [
          {
            "description": "The Client ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Clients"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Clients_Put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.Client"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.Client"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.Client"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.Client"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.Client"
              }
            }
          },
          "description": "Updated Client Object.",
          "required": true
        },
        "summary": "Update a Client."
      }
    },
    "/api/v2/Clients/{ID}/AvailableUpdateGroupSubscriptions": {
      "get": {
        "parameters": [
          {
            "description": "The Client ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter by Update Group.",
            "in": "query",
            "name": "UpdateGroupID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.AvailableUpdateGroupSubscription_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.AvailableUpdateGroupSubscription_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Clients"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Clients_GetAvailableSubscriptions",
        "summary": "Get a Client's Available Update Group Subscriptions"
      }
    },
    "/api/v2/Clients/{ID}/UpdateGroupSubscriptions": {
      "get": {
        "parameters": [
          {
            "description": "The Client ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter by Update Group.",
            "in": "query",
            "name": "UpdateGroupID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.UpdateGroupSubscription_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.UpdateGroupSubscription_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Clients"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Clients_GetSubscriptions",
        "summary": "Get a Client's Current Update Group Subscriptions"
      }
    },
    "/api/v2/ContentDefinitionAttributes/Batch": {
      "put": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentDefinitions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "ContentDefinitions_PutContentDefinitionAttributes",
        "requestBody": {
          "$ref": "#/components/requestBodies/ContentSubmission.Shared.BusinessEntities.ContentDefinitionAttributeArray"
        },
        "summary": "No Documentation Found."
      }
    },
    "/api/v2/ContentDefinitionAttributes/{contentDefinitionAttributeID}": {
      "delete": {
        "parameters": [
          {
            "description": "The ID of the Attribute to remove.",
            "in": "path",
            "name": "contentDefinitionAttributeID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentDefinitions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "ContentDefinitions_DeleteContentDefinitionAttribute",
        "summary": "Remove an Attribute from a ContentDefinition"
      },
      "put": {
        "parameters": [
          {
            "description": "The ID of the Attribute to update.",
            "in": "path",
            "name": "contentDefinitionAttributeID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentDefinitions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "ContentDefinitions_PutContentDefinitionAttributeAsync",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinitionAttribute"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinitionAttribute"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinitionAttribute"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinitionAttribute"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinitionAttribute"
              }
            }
          },
          "description": "The Attribute to update.",
          "required": true
        },
        "summary": "Update an Attribute for a ContentDefinition"
      }
    },
    "/api/v2/ContentDefinitions": {
      "get": {
        "parameters": [
          {
            "description": "Optional. The page limit.  If not specified, the default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset.  If not specified, the default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Filter by UserID.",
            "in": "query",
            "name": "userID",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Names of Attributes to include when retrieving this definition. This should be a comma-separated list. If not provided, Attributes are not included. If '*', all Attributes are included.",
            "in": "query",
            "name": "includeAttributes",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter by Name. Supports beginning and ending wildcard (*).",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter by TypeID.",
            "in": "query",
            "name": "typeID",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Filter by PackageTypeID.",
            "in": "query",
            "name": "packageTypeID",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_ContentSubmission.Shared.BusinessEntities.ContentDefinition_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_ContentSubmission.Shared.BusinessEntities.ContentDefinition_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentDefinitions"
        ],
        "deprecated": false,
        "description": "Gets a collection of ContentDefinitions. When successful, the response is a PagedResponse of ContentDefinitions.\r\n            If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "ContentDefinitions_GetContentDefinitions",
        "summary": "Get ContentDefinitions"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentDefinitions"
        ],
        "deprecated": false,
        "description": "Creates a ContentDefinition.  The body of the POST is the ContentDefinition to create.\r\n            The ContentDefinitionID will be assigned on creation of the Job.  When successful, the response\r\n            is the JobID.  If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "ContentDefinitions_PostContentDefinition",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinition"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinition"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinition"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinition"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinition"
              }
            }
          },
          "description": "The ContentDefinition to create.",
          "required": true
        },
        "summary": "Create a ContentDefinition"
      }
    },
    "/api/v2/ContentDefinitions/{contentDefinitionID}": {
      "delete": {
        "parameters": [
          {
            "description": "The ID of the ContentDefinition to delete",
            "in": "path",
            "name": "contentDefinitionID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentDefinitions"
        ],
        "deprecated": false,
        "description": "Deletes an ContentDefinition. When successful, the response is empty.  If unsuccessful, an appropriate\r\n            ApiError is returned.",
        "operationId": "ContentDefinitions_DeleteContentDefinition",
        "summary": "Delete a ContentDefinition"
      },
      "get": {
        "parameters": [
          {
            "description": "The ID of the ContentDefinition to get.",
            "in": "path",
            "name": "contentDefinitionID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Names of Attributes to include when retrieving this definition. This should be a comma-separated list. If not provided, Attributes are not included. If '*', all Attributes are included.",
            "in": "query",
            "name": "includeAttributes",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinition"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinition"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinition"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinition"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentDefinitions"
        ],
        "deprecated": false,
        "description": "Gets a ContentDefinition by ID. When successful, the response is the requested ContentDefinition.\r\n            If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "ContentDefinitions_GetContentDefinition",
        "summary": "Get a ContentDefinition by ID"
      },
      "put": {
        "parameters": [
          {
            "description": "The ID of the ContentDefinition to update",
            "in": "path",
            "name": "contentDefinitionID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentDefinitions"
        ],
        "deprecated": false,
        "description": "Updates a ContentDefinition.  The body of the PUT is the updated ContentDefinition.  \r\n            When successful, the response is empty.  If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "ContentDefinitions_PutContentDefinition",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinition"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinition"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinition"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinition"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinition"
              }
            }
          },
          "description": "The updated ContentDefinition",
          "required": true
        },
        "summary": "Update a ContentDefinition"
      }
    },
    "/api/v2/ContentDefinitions/{contentDefinitionID}/Attributes": {
      "get": {
        "parameters": [
          {
            "description": "The ID of the ContentDefinition.",
            "in": "path",
            "name": "contentDefinitionID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page limit.  If not specified, the default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset.  If not specified, the default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Filter the attributes by Name.",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_ContentSubmission.Shared.BusinessEntities.ContentDefinitionAttribute_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_ContentSubmission.Shared.BusinessEntities.ContentDefinitionAttribute_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentDefinitions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "ContentDefinitions_GetContentDefinitionAttributes",
        "summary": "Get Attributes for a ContentDefinition"
      },
      "post": {
        "parameters": [
          {
            "description": "The ID of the ContentDefinition",
            "in": "path",
            "name": "contentDefinitionID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentDefinitions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "ContentDefinitions_PostContentDefinitionAttribute",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinitionAttribute"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinitionAttribute"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinitionAttribute"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinitionAttribute"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinitionAttribute"
              }
            }
          },
          "description": "The Attribute to add.",
          "required": true
        },
        "summary": "Add an Attribute to a ContentDefinition"
      }
    },
    "/api/v2/ContentDefinitions/{contentDefinitionID}/Attributes/Batch": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "contentDefinitionID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentDefinitions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "ContentDefinitions_PostContentDefinitionAttributes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinitionAttribute"
                },
                "type": "array"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinitionAttribute"
                },
                "type": "array"
              }
            },
            "application/xml": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinitionAttribute"
                },
                "type": "array"
              }
            },
            "text/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinitionAttribute"
                },
                "type": "array"
              }
            },
            "text/xml": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinitionAttribute"
                },
                "type": "array"
              }
            }
          },
          "required": true
        },
        "summary": "No Documentation Found."
      }
    },
    "/api/v2/ContentReleases": {
      "get": {
        "parameters": [
          {
            "description": "Optional. The page limit.  If not specified, the default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset.  If not specified, the default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Filter by deleted.",
            "in": "query",
            "name": "deleted",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Optional. Filter by releaseID.",
            "in": "query",
            "name": "releaseID",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Filter by UserID.",
            "in": "query",
            "name": "userId",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Filter by ContentDefinitionID.",
            "in": "query",
            "name": "contentDefinitionID",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Filter by Version.",
            "in": "query",
            "name": "version",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_ContentSubmission.Shared.BusinessEntities.ContentReleaseVersion_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_ContentSubmission.Shared.BusinessEntities.ContentReleaseVersion_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentRelease"
        ],
        "deprecated": false,
        "description": "Gets a collection of ContentReleaseVersion. When successful, the response is a PagedResponse of ContentReleaseVersion.\r\n            If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "ContentRelease_GetContentReleaseVersion",
        "summary": "Get ContentReleaseVersion"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentRelease"
        ],
        "deprecated": false,
        "description": "Creates a ContentReleaseVersion.  The body of the POST is the ContentReleaseVersion to create.\r\n            The ContentReleaseId will be assigned on creation of the Job.  When successful, the response\r\n            is the contentReleaseId.  If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "ContentRelease_PostContentRelease",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentReleaseVersion"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentReleaseVersion"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentReleaseVersion"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentReleaseVersion"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentReleaseVersion"
              }
            }
          },
          "description": "The ContentReleaseVersion to create.",
          "required": true
        },
        "summary": "Create a ContentReleaseVersion"
      }
    },
    "/api/v2/ContentReleases/{ContentReleaseId}": {
      "delete": {
        "parameters": [
          {
            "description": "The ID of the ContentReleaseVersion to delete",
            "in": "path",
            "name": "ContentReleaseId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentRelease"
        ],
        "deprecated": false,
        "description": "Deletes an ContentReleaseVersion. When successful, the response is empty.  If unsuccessful, an appropriate\r\n            ApiError is returned.",
        "operationId": "ContentRelease_DeleteContentReleaseVersionn",
        "summary": "Delete a ContentReleaseVersion"
      },
      "get": {
        "parameters": [
          {
            "description": "The ID of the ContentReleaseVersion to get.",
            "in": "path",
            "name": "ContentReleaseId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentReleaseVersion"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentReleaseVersion"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentReleaseVersion"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentReleaseVersion"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentRelease"
        ],
        "deprecated": false,
        "description": "Gets a ContentReleaseVersion by ID. When successful, the response is the requested ContentReleaseVersion.\r\n            If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "ContentRelease_GetContentReleaseVersion",
        "summary": "Get a Content Release Version by ID"
      },
      "put": {
        "parameters": [
          {
            "description": "The ID of the ContentReleaseVersion to update",
            "in": "path",
            "name": "ContentReleaseId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentRelease"
        ],
        "deprecated": false,
        "description": "Updates a ContentReleaseVersion.  The body of the PUT is the updated ContentReleaseVersion.  \r\n            When successful, the response is empty.  If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "ContentRelease_PutContentDefinition",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentReleaseVersion"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentReleaseVersion"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentReleaseVersion"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentReleaseVersion"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentReleaseVersion"
              }
            }
          },
          "description": "The updated ContentReleaseVersion",
          "required": true
        },
        "summary": "Update a ContentReleaseVersion"
      }
    },
    "/api/v2/ContentSubmissionAttributes/Batch": {
      "put": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentSubmissions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "ContentSubmissions_PutContentSubmissionAttributes",
        "requestBody": {
          "$ref": "#/components/requestBodies/ContentSubmission.Shared.BusinessEntities.ContentSubmissionAttributeArray"
        },
        "summary": "No Documentation Found."
      }
    },
    "/api/v2/ContentSubmissionAttributes/{contentSubmissionAttributeID}": {
      "delete": {
        "parameters": [
          {
            "description": "The ID of the Attribute to remove.",
            "in": "path",
            "name": "contentSubmissionAttributeID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentSubmissions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "ContentSubmissions_DeleteContentSubmissionAttribute",
        "summary": "Remove an Attribute from a ContentSubmission"
      },
      "put": {
        "parameters": [
          {
            "description": "The ID of the Attribute to update.",
            "in": "path",
            "name": "contentSubmissionAttributeID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentSubmissions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "ContentSubmissions_PutContentSubmissionAttributeAsync",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionAttribute"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionAttribute"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionAttribute"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionAttribute"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionAttribute"
              }
            }
          },
          "description": "The Attribute to update.",
          "required": true
        },
        "summary": "Update an Attribute for a ContentSubmission"
      }
    },
    "/api/v2/ContentSubmissionTypes": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "enabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionType"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionType"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionType"
                  },
                  "type": "array"
                }
              },
              "text/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionType"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentSubmissionTypes"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "ContentSubmissionTypes_GetContentSubmissionTypes",
        "summary": "Returns available Content Submission Types."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentSubmissionTypes"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "ContentSubmissionTypes_PostContentSubmissionType",
        "requestBody": {
          "$ref": "#/components/requestBodies/ContentSubmission.Shared.BusinessEntities.ContentSubmissionType"
        },
        "summary": "Add a Content Submission Type"
      }
    },
    "/api/v2/ContentSubmissionTypes/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The ID of the Content Submission Type",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentSubmissionTypes"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "ContentSubmissionTypes_DeleteContentSubmissionType",
        "summary": "Remove a Content Submission Type"
      },
      "get": {
        "parameters": [
          {
            "description": "The ID of the Content Submission Type",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionType"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionType"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionType"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionType"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentSubmissionTypes"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "ContentSubmissionTypes_GetContentSubmissionType",
        "summary": "Retrieves a Content Submission Type by its ID."
      },
      "put": {
        "parameters": [
          {
            "description": "The ID of the Content Submission Type",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentSubmissionTypes"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "ContentSubmissionTypes_PutContentSubmissionType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionType"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionType"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionType"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionType"
              }
            }
          },
          "description": "The Content Submission Type",
          "required": true
        },
        "summary": "Update a Content Submission Type"
      }
    },
    "/api/v2/ContentSubmissions": {
      "get": {
        "parameters": [
          {
            "description": "Optional. The page limit.  If not specified, the default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset.  If not specified, the default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Filter by UserID.",
            "in": "query",
            "name": "userID",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Filter by ContentDefinitionID",
            "in": "query",
            "name": "contentDefinitionID",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Names of Attributes to include when retrieving this submission. This should be a comma-separated list. If not provided, Attributes are not included. If '*', all Attributes are included.",
            "in": "query",
            "name": "includeAttributes",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter the submissions by whether they are part of the Release with the specified Release ID.",
            "in": "query",
            "name": "releaseID",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Filter submissions by their ContentDefinition's Type ID.",
            "in": "query",
            "name": "typeID",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Filter submissions by their Version.",
            "in": "query",
            "name": "version",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. If true, includes the ContentDefinition for each submission.",
            "in": "query",
            "name": "includeDefinition",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_ContentSubmission.Shared.BusinessEntities.ContentSubmission_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_ContentSubmission.Shared.BusinessEntities.ContentSubmission_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentSubmissions"
        ],
        "deprecated": false,
        "description": "Gets a collection of ContentSubmissions. When successful, the response is a PagedResponse of ContentSubmissions. Additional searches: attributes[Name]=Value. This can be used to search for submissions that have the specified values for attributes. Beginning and ending wildcard (*) supported for value.\r\n            If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "ContentSubmissions_GetContentSubmissions",
        "summary": "Get ContentSubmissions"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentSubmissions"
        ],
        "deprecated": false,
        "description": "Creates a ContentSubmission.  The body of the POST is the ContentSubmission to create.\r\n            The ContentSubmissionID will be assigned on creation of the Job.  When successful, the response\r\n            is the ContentSubmissionID.  If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "ContentSubmissions_PostContentSubmission",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmission"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmission"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmission"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmission"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmission"
              }
            }
          },
          "description": "The ContentSubmission to create.",
          "required": true
        },
        "summary": "Create a ContentSubmission"
      }
    },
    "/api/v2/ContentSubmissions/{contentSubmissionID}": {
      "delete": {
        "parameters": [
          {
            "description": "The ID of the ContentSubmission to delete",
            "in": "path",
            "name": "contentSubmissionID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentSubmissions"
        ],
        "deprecated": false,
        "description": "Deletes an ContentSubmission. When successful, the response is empty.  If unsuccessful, an appropriate\r\n            ApiError is returned.",
        "operationId": "ContentSubmissions_DeleteContentSubmission",
        "summary": "Delete a ContentSubmission"
      },
      "get": {
        "parameters": [
          {
            "description": "The ID of the ContentSubmission to get.",
            "in": "path",
            "name": "contentSubmissionID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Names of Attributes to include when retrieving this submission. This should be a comma-separated list.",
            "in": "query",
            "name": "includeAttributes",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmission"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmission"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmission"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmission"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentSubmissions"
        ],
        "deprecated": false,
        "description": "Gets a ContentSubmission by ID. When successful, the response is the requested ContentSubmission.\r\n            If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "ContentSubmissions_GetContentSubmission",
        "summary": "Get a ContentSubmission by ID"
      },
      "put": {
        "parameters": [
          {
            "description": "The ID of the ContentSubmission to update",
            "in": "path",
            "name": "contentSubmissionID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentSubmissions"
        ],
        "deprecated": false,
        "description": "Updates a ContentSubmission.  The body of the PUT is the updated ContentSubmission.  \r\n            When successful, the response is empty.  If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "ContentSubmissions_PutContentSubmission",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmission"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmission"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmission"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmission"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmission"
              }
            }
          },
          "description": "The updated ContentSubmission",
          "required": true
        },
        "summary": "Update a ContentSubmission"
      }
    },
    "/api/v2/ContentSubmissions/{contentSubmissionID}/Attributes": {
      "get": {
        "parameters": [
          {
            "description": "The ID of the ContentSubmission.",
            "in": "path",
            "name": "contentSubmissionID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page limit.  If not specified, the default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset.  If not specified, the default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Filter the attributes by Name.",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_ContentSubmission.Shared.BusinessEntities.ContentSubmissionAttribute_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_ContentSubmission.Shared.BusinessEntities.ContentSubmissionAttribute_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentSubmissions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "ContentSubmissions_GetContentSubmissionAttributes",
        "summary": "Get Attributes for a ContentSubmission"
      },
      "post": {
        "parameters": [
          {
            "description": "The ID of the ContentSubmission",
            "in": "path",
            "name": "contentSubmissionID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentSubmissions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "ContentSubmissions_PostContentSubmissionAttribute",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionAttribute"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionAttribute"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionAttribute"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionAttribute"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionAttribute"
              }
            }
          },
          "description": "The Attribute to add.",
          "required": true
        },
        "summary": "Add an Attribute to a ContentSubmission"
      }
    },
    "/api/v2/ContentSubmissions/{contentSubmissionID}/Attributes/Batch": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "contentSubmissionID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentSubmissions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "ContentSubmissions_PostContentSubmissionAttributes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionAttribute"
                },
                "type": "array"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionAttribute"
                },
                "type": "array"
              }
            },
            "application/xml": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionAttribute"
                },
                "type": "array"
              }
            },
            "text/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionAttribute"
                },
                "type": "array"
              }
            },
            "text/xml": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionAttribute"
                },
                "type": "array"
              }
            }
          },
          "required": true
        },
        "summary": "No Documentation Found."
      }
    },
    "/api/v2/ContentSubmissions/{contentSubmissionID}/Status": {
      "get": {
        "parameters": [
          {
            "description": "The ID of the ContentSubmission to get.",
            "in": "path",
            "name": "contentSubmissionID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "True to include all status details if JobRun. Defaults to false",
            "in": "query",
            "name": "includeActivityRunDetails",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.Interfaces.IJobRun"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.Interfaces.IJobRun"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.Interfaces.IJobRun"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.Interfaces.IJobRun"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ContentSubmissions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "ContentSubmissions_GetContentSubmissionStatus",
        "summary": "Get the status of a ContentSubmission"
      }
    },
    "/api/v2/DealerByCountry": {
      "get": {
        "parameters": [
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_DealerDB.Models.DealersPerCountry_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_DealerDB.Models.DealersPerCountry_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "DealerByCountry"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "DealerByCountry_GetCountries",
        "summary": "Get a total count of dealers per country"
      }
    },
    "/api/v2/Dealers": {
      "get": {
        "parameters": [
          {
            "description": "The brand to filter by.",
            "in": "query",
            "name": "Brand",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The country to filter by.",
            "in": "query",
            "name": "ShippingCountry",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The partial Dealer Name to filter by. Wildcard supported (*).",
            "in": "query",
            "name": "DealerName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_DealerDB.Models.Dealer_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_DealerDB.Models.Dealer_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Dealers"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Dealers_GetDealers",
        "summary": "Get a list of dealers."
      }
    },
    "/api/v2/Dealers/{DealerCode}": {
      "get": {
        "parameters": [
          {
            "description": "The Dealer Code to Search for",
            "in": "path",
            "name": "DealerCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DealerDB.Models.Dealer"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DealerDB.Models.Dealer"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DealerDB.Models.Dealer"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DealerDB.Models.Dealer"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Dealers"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Dealers_GetDealerbyDealerCode",
        "summary": "Lookup a dealer using a dealer code."
      }
    },
    "/api/v2/FileUploadIndexFields": {
      "get": {
        "parameters": [
          {
            "description": "Optional. Limit number of results returned. The default value is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Offset for the results returned. The default value is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_Communication.Models.FileUploadIndexField_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_Communication.Models.FileUploadIndexField_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "FileUploadIndexFields"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "FileUploadIndexFields_Get",
        "summary": "Get File Upload Index Fields"
      }
    },
    "/api/v2/FileUploadTypes": {
      "get": {
        "parameters": [
          {
            "description": "Optional. Limit number of results returned. The default value is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Offset for the results returned. The default value is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_Communication.Models.FileUploadType_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_Communication.Models.FileUploadType_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "FileUploadTypes"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "FileUploadTypes_Get",
        "summary": "Get File Upload Types"
      }
    },
    "/api/v2/FileUploads/Report": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_Communication.Models.FileUpload_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_Communication.Models.FileUpload_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "FileUploads"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "FileUploads_PostReport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Communication.Models.FileUploadReportQuery"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Communication.Models.FileUploadReportQuery"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Communication.Models.FileUploadReportQuery"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Communication.Models.FileUploadReportQuery"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/Communication.Models.FileUploadReportQuery"
              }
            }
          },
          "required": true
        },
        "summary": "Build a report from file uploads"
      }
    },
    "/api/v2/Files": {
      "get": {
        "parameters": [
          {
            "description": "Indicates whether to include files marked as removed.",
            "in": "query",
            "name": "includeDeleted",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.FileDownload_"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.FileDownload_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.FileDownload_"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.FileDownload_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Files"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Files_GetFiles",
        "summary": "Get a paged response of file metadata."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Files"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Files_PostFile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.FileDownload"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.FileDownload"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.FileDownload"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.FileDownload"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.FileDownload"
              }
            }
          },
          "description": "The file's metadata.",
          "required": true
        },
        "summary": "Create the metadata for a file before uploading. The State of the File should be 'Created'."
      }
    },
    "/api/v2/Files/{ID}": {
      "delete": {
        "parameters": [
          {
            "description": "The file's id.",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Files"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Files_DeleteFile",
        "summary": "Mark a file as 'Removed'. Disables download of the file and hides metadata from GET all method"
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.FileDownload"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.FileDownload"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.FileDownload"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.FileDownload"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Files"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Files_GetFile",
        "summary": "Gets a file's metadata."
      },
      "put": {
        "parameters": [
          {
            "description": "The file's id",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Files"
        ],
        "deprecated": false,
        "description": "Update the metadata for a file. Size may not be modified by the client. \r\n                Set status to 'Available' to publish a file. The file must be uploaded.\r\n                Set status to 'Created' to reset a file's contents and re-upload. \r\n                A file may only be 'Removed' by the DELETE method.",
        "operationId": "Files_PutFile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.FileDownload"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.FileDownload"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.FileDownload"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.FileDownload"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.FileDownload"
              }
            }
          },
          "description": "The file's metadata",
          "required": true
        },
        "summary": "Update the metadata for a file. Size may not be modified by the client."
      }
    },
    "/api/v2/Files/{ID}/FileContents": {
      "get": {
        "parameters": [
          {
            "description": "The file's metadata.",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Object"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/System.Object"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Object"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/System.Object"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Files"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Files_GetFileContents",
        "summary": "Download the contents of a file. The current State of the File should be 'Available'."
      },
      "put": {
        "parameters": [
          {
            "description": "The file's metadata.",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Object"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/System.Object"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Object"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/System.Object"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Files"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Files_PutFileContents",
        "summary": "Upload the contents of a file. The current State of the File should be 'Created'."
      }
    },
    "/api/v2/GlobalImageCategories": {
      "get": {
        "parameters": [
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.GlobalImageCategory_"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.GlobalImageCategory_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.GlobalImageCategory_"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.GlobalImageCategory_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "GlobalImageCategories"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "GlobalImageCategories_GetFiles",
        "summary": "Get a paged response of file metadata."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "GlobalImageCategories"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "GlobalImageCategories_PostFile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.GlobalImageCategory"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.GlobalImageCategory"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.GlobalImageCategory"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.GlobalImageCategory"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.GlobalImageCategory"
              }
            }
          },
          "description": "The file's metadata.",
          "required": true
        },
        "summary": "Create the metadata for a file before uploading. The State should be 'Created'."
      }
    },
    "/api/v2/GlobalImageCategories/{ID}": {
      "get": {
        "parameters": [
          {
            "description": "The file's id.",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.GlobalImageCategory"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.GlobalImageCategory"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.GlobalImageCategory"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.GlobalImageCategory"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "GlobalImageCategories"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "GlobalImageCategories_GetFile",
        "summary": "Gets a file's metadata."
      }
    },
    "/api/v2/GlobalImages": {
      "get": {
        "parameters": [
          {
            "description": "Optional. Searches for matching global images with the matching Category Name, Publisher or Description",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "categoryId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "publisher",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Indicates whether to include GlobalImages marked as removed.",
            "in": "query",
            "name": "includeDeleted",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.GlobalImage_"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.GlobalImage_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.GlobalImage_"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.GlobalImage_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "GlobalImages"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "GlobalImages_GetGlobalImages",
        "summary": "Get a paged response of GlobalImage."
      },
      "post": {
        "parameters": [
          {
            "description": "Whether to set the publisher and date to the provided values.",
            "in": "query",
            "name": "overridePublisherOrDate",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "GlobalImages"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "GlobalImages_PostGlobalImage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.GlobalImage"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.GlobalImage"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.GlobalImage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.GlobalImage"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.GlobalImage"
              }
            }
          },
          "description": "The file's metadata.",
          "required": true
        },
        "summary": "Create the metadata for a GlobalImage before uploading. The State should be 'Created'."
      }
    },
    "/api/v2/GlobalImages/{ID}": {
      "delete": {
        "parameters": [
          {
            "description": "The GlobalImage's id.",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "GlobalImages"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "GlobalImages_DeleteFile",
        "summary": "Mark a file as 'Removed'. Disables download of the image and hides metadata from GET all method"
      },
      "get": {
        "parameters": [
          {
            "description": "The GlobalImage's id.",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.GlobalImage"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.GlobalImage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.GlobalImage"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.GlobalImage"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "GlobalImages"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "GlobalImages_GetGlobalImage",
        "summary": "Gets a GlobalImage's metadata."
      },
      "put": {
        "parameters": [
          {
            "description": "The GlobalImage's id.",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether to set the publisher and date to the provided values.",
            "in": "query",
            "name": "overridePublisherOrDate",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "GlobalImages"
        ],
        "deprecated": false,
        "description": "Update the metadata for an image. Size may not be modified by the client. \r\n                Set status to 'Available' to publish an image. Both the image and thumbnail must be uploaded.\r\n                Set status to 'Created' to reset an image's contents and re-upload. \r\n                A file may only be 'Removed' by the DELETE method.",
        "operationId": "GlobalImages_PutGlobalImage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.GlobalImage"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.GlobalImage"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.GlobalImage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.GlobalImage"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.GlobalImage"
              }
            }
          },
          "description": "The GlobalImage's metadata",
          "required": true
        },
        "summary": "Update the metadata for an image."
      }
    },
    "/api/v2/GlobalImages/{ID}/ImageContents": {
      "get": {
        "parameters": [
          {
            "description": "The global image metadata id.",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Indicated whether to download the full image or the thumbnail. Defaults to 'true'.",
            "in": "query",
            "name": "isFullImage",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Object"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/System.Object"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Object"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/System.Object"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "GlobalImages"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "GlobalImages_GetGlobalImageContents",
        "summary": "Download the contents of a GlobalImage. The current State of the GlobalImage should be 'Available'."
      },
      "put": {
        "parameters": [
          {
            "description": "The global image metadata id.",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Indicated whether this is the full image or the thumbnail. Defaults to 'true'.",
            "in": "query",
            "name": "isFullImage",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Object"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/System.Object"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/System.Object"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/System.Object"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "GlobalImages"
        ],
        "deprecated": false,
        "description": "Both the image and thumbnail must be uploaded.\r\n                Set isFullImage = 'True' for Full Image, isFullImage = 'False' for Thumbnail",
        "operationId": "GlobalImages_PutGlobalImageContents",
        "summary": "Upload the contents of a GlobalImage. The current State of the File for the GlobalImage should be 'Created'."
      }
    },
    "/api/v2/Languages": {
      "get": {
        "parameters": [
          {
            "description": "limit the number of Language objects returned. Optional (defaults to 10).",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "the number of Language objects to skip. Optional (defaults to 0).",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "whether to include languages marked as deleted. Defaults to false",
            "in": "query",
            "name": "includeDeleted",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.Language_"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.Language_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.Language_"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.Language_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Languages"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Languages_GetLanguages",
        "summary": "Get a list of the languages for which translations are supported. Returns a PagedResponse of Language objects."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Languages"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Languages_CreateLanguage",
        "requestBody": {
          "$ref": "#/components/requestBodies/GlobalResources.Shared.Models.Language"
        },
        "summary": "Add a Language to support for translations. Accepts a Language object. Returns the Id of the created object."
      }
    },
    "/api/v2/Languages/{LocaleID}": {
      "delete": {
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "LocaleID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Languages"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Languages_DeleteLanguage",
        "summary": "Remove a Language from those supported for translations. Marks language as deleted."
      },
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "LocaleID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.Language"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.Language"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.Language"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.Language"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Languages"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Languages_GetLanguage",
        "summary": "Get a language by its id. Returns a Language object"
      },
      "put": {
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "LocaleID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Languages"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Languages_UpdateLanguage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.Language"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.Language"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.Language"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.Language"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.Language"
              }
            }
          },
          "required": true
        },
        "summary": "Update a language\u2019s description. Accepts a Language object."
      }
    },
    "/api/v2/LicenseActivations": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DealerDB.Models.LicenseActivation"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DealerDB.Models.LicenseActivation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DealerDB.Models.LicenseActivation"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DealerDB.Models.LicenseActivation"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "LicenseActivations"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "LicenseActivations_Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DealerDB.Models.LicenseActivationCreate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DealerDB.Models.LicenseActivationCreate"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DealerDB.Models.LicenseActivationCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DealerDB.Models.LicenseActivationCreate"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DealerDB.Models.LicenseActivationCreate"
              }
            }
          },
          "description": "The data required for creating the license.",
          "required": true
        },
        "summary": "Create a license activation."
      }
    },
    "/api/v2/LicenseActivations/RegisterEDTLite": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "LicenseActivations"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "LicenseActivations_PostRegisterEDTLite",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DealerDB.Models.EDTLiteRegistration"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DealerDB.Models.EDTLiteRegistration"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DealerDB.Models.EDTLiteRegistration"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DealerDB.Models.EDTLiteRegistration"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DealerDB.Models.EDTLiteRegistration"
              }
            }
          },
          "description": "The information required for registration.",
          "required": true
        },
        "summary": "Register an EDT Lite with the Server"
      }
    },
    "/api/v2/LicenseActivations/{ID}": {
      "put": {
        "parameters": [
          {
            "description": "The ID of the license.",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DealerDB.Models.LicenseActivation"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DealerDB.Models.LicenseActivation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DealerDB.Models.LicenseActivation"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DealerDB.Models.LicenseActivation"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "LicenseActivations"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "LicenseActivations_Put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DealerDB.Models.LicenseActivationUpdate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DealerDB.Models.LicenseActivationUpdate"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DealerDB.Models.LicenseActivationUpdate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DealerDB.Models.LicenseActivationUpdate"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DealerDB.Models.LicenseActivationUpdate"
              }
            }
          },
          "description": "The data required for updating the license.",
          "required": true
        },
        "summary": "Update a license activiation."
      }
    },
    "/api/v2/LicenseActivations/{ID}/Confirm": {
      "put": {
        "parameters": [
          {
            "description": "The ID of the license",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "LicenseActivations"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "LicenseActivations_PutConfirm",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DealerDB.Models.LicenseActivationConfirm"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DealerDB.Models.LicenseActivationConfirm"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DealerDB.Models.LicenseActivationConfirm"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DealerDB.Models.LicenseActivationConfirm"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DealerDB.Models.LicenseActivationConfirm"
              }
            }
          },
          "description": "The license data.",
          "required": true
        },
        "summary": "Confirm that the client has applied the updated license."
      }
    },
    "/api/v2/Licenses": {
      "get": {
        "parameters": [
          {
            "description": "Optional. Filter by VoucherCode",
            "in": "query",
            "name": "VoucherCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter by DealerCode",
            "in": "query",
            "name": "DealerCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter by Status.  By default only active licenses will be returned.",
            "in": "query",
            "name": "Status",
            "required": false,
            "schema": {
              "enum": [
                "Active",
                "Inactive",
                "All"
              ],
              "type": "string"
            }
          },
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_DealerDB.Models.License_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_DealerDB.Models.License_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Licenses"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Licenses_Get",
        "summary": "Gets a list of licenses with the specified criteria."
      }
    },
    "/api/v2/Licenses/{ID}": {
      "get": {
        "parameters": [
          {
            "description": "The ID of the license to get.",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DealerDB.Models.License"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DealerDB.Models.License"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DealerDB.Models.License"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DealerDB.Models.License"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Licenses"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Licenses_Get",
        "summary": "Get a license."
      }
    },
    "/api/v2/Logs": {
      "get": {
        "parameters": [
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_API.Models.Log_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_API.Models.Log_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Logs"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Logs_GetLogs",
        "summary": "Get the API System logs, most recent first."
      },
      "post": {
        "parameters": [
          {
            "description": "Message to enter into the log",
            "in": "query",
            "name": "Message",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Logs"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Logs_PostLog",
        "summary": "Add a Log entry"
      }
    },
    "/api/v2/Logs/{ID}": {
      "get": {
        "parameters": [
          {
            "description": "The Log ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.Log"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.Log"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.Log"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.Log"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Logs"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Logs_GetLog",
        "summary": "Get a log by ID"
      }
    },
    "/api/v2/Notifications": {
      "post": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Notifications"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Notifications_PostMail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.Notification"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.Notification"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.Notification"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.Notification"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.Notification"
              }
            }
          },
          "description": "The Notification Object.",
          "required": true
        },
        "summary": "Sends an email message."
      }
    },
    "/api/v2/PackageTypes": {
      "get": {
        "parameters": [
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The user ID to sort packageTypes by the user's access",
            "in": "query",
            "name": "userID",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.PackageType_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.PackageType_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "PackageTypes"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "PackageTypes_Get",
        "summary": "Get all of the Package Types."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "PackageTypes"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "PackageTypes_Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.PackageType"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.PackageType"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.PackageType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.PackageType"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.PackageType"
              }
            }
          },
          "description": "The Package Type to add",
          "required": true
        },
        "summary": "Add a Package Type."
      }
    },
    "/api/v2/PackageTypes/{ID}": {
      "delete": {
        "parameters": [
          {
            "description": "The Package Type ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "PackageTypes"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "PackageTypes_Delete",
        "summary": "Delete a Package Type."
      },
      "get": {
        "parameters": [
          {
            "description": "The Package Type ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.PackageType"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.PackageType"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.PackageType"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.PackageType"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "PackageTypes"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "PackageTypes_Get",
        "summary": "Get a specific Package Type."
      },
      "put": {
        "parameters": [
          {
            "description": "The ID of the Package Type",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "PackageTypes"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "PackageTypes_Put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.PackageType"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.PackageType"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.PackageType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.PackageType"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.PackageType"
              }
            }
          },
          "description": "The Package Type to update",
          "required": true
        },
        "summary": "Modify a Package Type."
      }
    },
    "/api/v2/PackageTypes/{id}/Users/{userID}": {
      "delete": {
        "parameters": [
          {
            "description": "The ID of the Package Type",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The userID to link to the package type",
            "in": "path",
            "name": "userID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "PackageTypes"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "PackageTypes_RemovePackageTypeUser",
        "summary": "Deletes a package type a user could see."
      },
      "post": {
        "parameters": [
          {
            "description": "The ID of the Package Type",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The userID to link to the package type",
            "in": "path",
            "name": "userID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "PackageTypes"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "PackageTypes_AddPackageTypeUser",
        "summary": "Add a package type that a user can see."
      }
    },
    "/api/v2/PackageTypetoBundles": {
      "delete": {
        "parameters": [
          {
            "description": "The BundleID",
            "in": "query",
            "name": "BundleID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The PackageTypeID",
            "in": "query",
            "name": "PackageTypeID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "PackageTypetoBundles"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "PackageTypetoBundles_Delete",
        "summary": "Delete a Package Type to Bundle Relationship."
      },
      "get": {
        "parameters": [
          {
            "description": "Optional. Filter by BundleID.",
            "in": "query",
            "name": "BundleID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter by PackageTypeID.",
            "in": "query",
            "name": "PackageTypeID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter by PackageVersion.",
            "in": "query",
            "name": "PackageVersion",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.PackageTypeIDtoBundle_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.PackageTypeIDtoBundle_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "PackageTypetoBundles"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "PackageTypetoBundles_Get",
        "summary": "Get all of the Package Type to Bundle Relationships."
      },
      "post": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "PackageTypetoBundles"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "PackageTypetoBundles_Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.PackageTypeIDtoBundle"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.PackageTypeIDtoBundle"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.PackageTypeIDtoBundle"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.PackageTypeIDtoBundle"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.PackageTypeIDtoBundle"
              }
            }
          },
          "description": "The PackageTypeToBundle to add.",
          "required": true
        },
        "summary": "Add a new Package Type ID to Bundle Relationship."
      },
      "put": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "PackageTypetoBundles"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "PackageTypetoBundles_Put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.PackageTypeIDtoBundle"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.PackageTypeIDtoBundle"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.PackageTypeIDtoBundle"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.PackageTypeIDtoBundle"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.PackageTypeIDtoBundle"
              }
            }
          },
          "description": "The PackageTypeToBundle to update.",
          "required": true
        },
        "summary": "Update a Package Type ID to Bundle Relationship."
      }
    },
    "/api/v2/Packages": {
      "get": {
        "parameters": [
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. If provided, filters by PackageTypeID.",
            "in": "query",
            "name": "PackageTypeID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. If provided, filters by Version.",
            "in": "query",
            "name": "Version",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. If provided, filters by Released.",
            "in": "query",
            "name": "Released",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.Package_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.Package_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Packages"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Packages_GetPackages",
        "summary": "List Packages."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Packages"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Packages_PostPackage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.Package"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.Package"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.Package"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.Package"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.Package"
              }
            }
          },
          "description": "The package to add.",
          "required": true
        },
        "summary": "Add a Package to the Update System."
      }
    },
    "/api/v2/Packages/{ID}": {
      "delete": {
        "parameters": [
          {
            "description": "The Package ID to Delete",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Packages"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Packages_DeletePackage",
        "summary": "Delete a Package."
      },
      "get": {
        "parameters": [
          {
            "description": "The Package ID to Search for",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.Package"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.Package"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.Package"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.Package"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Packages"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Packages_GetPackage",
        "summary": "Find a Package."
      },
      "put": {
        "parameters": [
          {
            "description": "The unique ID of the Package",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Packages"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Packages_PutPackage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.Package"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.Package"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.Package"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.Package"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.Package"
              }
            }
          },
          "description": "The package to update.",
          "required": true
        },
        "summary": "Modify a Packge to the Update System."
      }
    },
    "/api/v2/Permissions": {
      "get": {
        "parameters": [
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Filter by permission name. Supports ending wildcard (*). Optional.",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_API.Models.Permission_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_API.Models.Permission_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Permissions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Permissions_GetPermissions",
        "summary": "List Permissions"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Permissions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Permissions_PostPermission",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.Permission"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.Permission"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.Permission"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.Permission"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.Permission"
              }
            }
          },
          "description": "Permission to add",
          "required": true
        },
        "summary": "Adds a Permission"
      }
    },
    "/api/v2/Permissions/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "Id of Permission",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Permissions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Permissions_DeletePermission",
        "summary": "Deletes a Permission"
      },
      "get": {
        "parameters": [
          {
            "description": "Id of Permission",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.Permission"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.Permission"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.Permission"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.Permission"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Permissions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Permissions_GetPermission",
        "summary": "Gets a Permission"
      },
      "put": {
        "parameters": [
          {
            "description": "Id of Permission",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Permissions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Permissions_PutPermission",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.Permission"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.Permission"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.Permission"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.Permission"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.Permission"
              }
            }
          },
          "description": "The Updated Permission",
          "required": true
        },
        "summary": "Updates a Permission"
      }
    },
    "/api/v2/PriorityPackages": {
      "get": {
        "parameters": [
          {
            "description": "Optional. Filter priority packages by ClientID.",
            "in": "query",
            "name": "ClientID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter returned packages by status. By default only active packages will be returned.",
            "in": "query",
            "name": "Status",
            "required": false,
            "schema": {
              "enum": [
                "Active",
                "Completed",
                "All"
              ],
              "type": "string"
            }
          },
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.PriorityPackage_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.PriorityPackage_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "PriorityPackages"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "PriorityPackages_GetPriorityPackages",
        "summary": "Get a list of Priority Packages by Client."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "PriorityPackages"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "PriorityPackages_PostPriorityPackages",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.PriorityPackage"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.PriorityPackage"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.PriorityPackage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.PriorityPackage"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.PriorityPackage"
              }
            }
          },
          "description": "The PriorityPackage to add",
          "required": true
        },
        "summary": "Add a Priority Package for a Client."
      }
    },
    "/api/v2/PriorityPackages/{ID}": {
      "delete": {
        "parameters": [
          {
            "description": "The Priority Package ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "PriorityPackages"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "PriorityPackages_DeletePriorityPackages",
        "summary": "Delete a Priority Package for a Client."
      },
      "get": {
        "parameters": [
          {
            "description": "The Priority Package ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.PriorityPackage"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.PriorityPackage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.PriorityPackage"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.PriorityPackage"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "PriorityPackages"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "PriorityPackages_GetPriorityPackage",
        "summary": "Get a Priority Packages for a Client."
      }
    },
    "/api/v2/Releases": {
      "get": {
        "parameters": [
          {
            "description": "Optional. The page limit.  If not specified, the default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset.  If not specified, the default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Filter by visible.",
            "in": "query",
            "name": "visible",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Optional. Filter by BundleID.",
            "in": "query",
            "name": "bundleID",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_ContentSubmission.Shared.BusinessEntities.Release_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_ContentSubmission.Shared.BusinessEntities.Release_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Release"
        ],
        "deprecated": false,
        "description": "Gets a collection of Release. When successful, the response is a PagedResponse of Release.\r\n            If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "Release_GetReleases",
        "summary": "Get Release"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Release"
        ],
        "deprecated": false,
        "description": "Creates a Release.  The body of the POST is the Release to create.\r\n            The ReleaseId will be assigned on creation of the Job.  When successful, the response\r\n            is the Release Id.  If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "Release_PostRelease",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.Release"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.Release"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.Release"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.Release"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.Release"
              }
            }
          },
          "description": "The Release to create.",
          "required": true
        },
        "summary": "Create a Release"
      }
    },
    "/api/v2/Releases/{ReleaseId}": {
      "get": {
        "parameters": [
          {
            "description": "The ID of the Release to get.",
            "in": "path",
            "name": "ReleaseId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.Release"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.Release"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.Release"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.Release"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Release"
        ],
        "deprecated": false,
        "description": "Gets a Release by ID. When successful, the response is the requested Release.\r\n            If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "Release_GetRelease",
        "summary": "Get a  Release by ID"
      }
    },
    "/api/v2/Releases/{ReleaseId}/Bundle/{BundleId}": {
      "delete": {
        "parameters": [
          {
            "description": "The release identifier.",
            "in": "path",
            "name": "ReleaseId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The bundle identifier.",
            "in": "path",
            "name": "BundleId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Release"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Release_DeleteReleaseBundle",
        "summary": "Deletes the association between a release and a bundle."
      },
      "post": {
        "parameters": [
          {
            "description": "The release identifier.",
            "in": "path",
            "name": "ReleaseId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The bundle identifier.",
            "in": "path",
            "name": "BundleId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Release"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Release_PostReleaseBundle",
        "summary": "Associates the release with a bundle."
      }
    },
    "/api/v2/Releases/{releaseId}": {
      "put": {
        "parameters": [
          {
            "description": "The ID of the Release to update",
            "in": "path",
            "name": "releaseId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Release"
        ],
        "deprecated": false,
        "description": "Updates a Release.  The body of the PUT is the updated Release.  \r\n            When successful, the response is empty.  If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "Release_PutContentDefinition",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.Release"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.Release"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.Release"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.Release"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.Release"
              }
            }
          },
          "description": "The updated Release",
          "required": true
        },
        "summary": "Update a Release"
      }
    },
    "/api/v2/Reporting/BundleStatusSummary": {
      "get": {
        "parameters": [
          {
            "description": "The BundleID",
            "in": "query",
            "name": "BundleID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.PackageStatusSummary_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.PackageStatusSummary_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Reporting"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Reporting_BundleStatusSummary",
        "summary": "Get a summary of all Packages in a Bundle"
      }
    },
    "/api/v2/Reporting/BundlesInUpdateGroup": {
      "get": {
        "parameters": [
          {
            "description": "The UpdateGroupID",
            "in": "query",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Include Inactive Bundles (true|false)",
            "in": "query",
            "name": "IncludeInactive",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.Bundle_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.Bundle_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Reporting"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Reporting_BundlesInUpdateGroup",
        "summary": "Get a list of bundles for UpdateGroup."
      }
    },
    "/api/v2/Reporting/ClientInfo": {
      "get": {
        "parameters": [
          {
            "description": "The Client ID",
            "in": "query",
            "name": "ClientID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.ClientInfo"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.ClientInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.ClientInfo"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.ClientInfo"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Reporting"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Reporting_ClientInfo",
        "summary": "Get Client Information"
      }
    },
    "/api/v2/Reporting/CurrentPackagesInUpdateGroup": {
      "get": {
        "parameters": [
          {
            "description": "The UpdateGroupID",
            "in": "query",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional.  The subscription type filter to use.  By default the Default packages (Required and IncludeByDefault) will be returned.",
            "in": "query",
            "name": "SubscriptionTypeFilter",
            "required": false,
            "schema": {
              "enum": [
                "RequiredOnly",
                "Default",
                "All"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UpdateSystem.Models.Package"
                  },
                  "type": "array"
                }
              },
              "application/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UpdateSystem.Models.Package"
                  },
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UpdateSystem.Models.Package"
                  },
                  "type": "array"
                }
              },
              "text/xml": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UpdateSystem.Models.Package"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Reporting"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Reporting_CurrentPackagesInUpdateGroup",
        "summary": "Get the current packages for an update group."
      }
    },
    "/api/v2/Reporting/GetClient": {
      "get": {
        "parameters": [
          {
            "description": "The Client ID",
            "in": "query",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.Client"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.Client"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.Client"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.Client"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Reporting"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Reporting_GetClient",
        "summary": "Get a Client in the Update System."
      }
    },
    "/api/v2/Reporting/GetSubscriptions": {
      "get": {
        "parameters": [
          {
            "description": "Optional. Filter by Client ID",
            "in": "query",
            "name": "ClientID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter by Update Group ID",
            "in": "query",
            "name": "UpdateGroupID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.UpdateGroupClientRelationship_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.UpdateGroupClientRelationship_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Reporting"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Reporting_GetSubscriptions",
        "summary": "Get a list of current Client Subscriptions."
      }
    },
    "/api/v2/Reporting/PackageStatusSummary": {
      "get": {
        "parameters": [
          {
            "description": "The Package ID",
            "in": "query",
            "name": "PackageID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.PackageStatusSummary"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.PackageStatusSummary"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.PackageStatusSummary"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.PackageStatusSummary"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Reporting"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Reporting_PackageStatusSummary",
        "summary": "Get a summary report for a Specific Package"
      }
    },
    "/api/v2/Reporting/RegisteredClients": {
      "get": {
        "parameters": [
          {
            "description": "Optional but required when including any or all of following parameters: ReportValue, ReportResult, ReportResultIsValid. The Update Group ID. If not provided, all clients will be returned.",
            "in": "query",
            "name": "UpdateGroupID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter where ClientID matches a value. Wildcards are supported (*).",
            "in": "query",
            "name": "ClientID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter where Tag matches a value. Wildcards are supported (*).",
            "in": "query",
            "name": "Tag",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional and UpdateGroupID must be included. Filter where ReportResult matches a value. Wildcards are supported (*).",
            "in": "query",
            "name": "ReportResult",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional and UpdateGroupID must be included. When 'true' filters results where ReportResult equals ReportResultExpected.  When 'false' filters results where ValueToValidate does not equal ReportResults.",
            "in": "query",
            "name": "ReportResultIsValid",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Optional and UpdateGroupID must be included. Filter where ReportValue matches a value. Wildcards are supported (*).",
            "in": "query",
            "name": "ReportValue",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter where LastCheckIn occured before the provided date.",
            "in": "query",
            "name": "LastCheckInBefore",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter where LastCheckIn occured after the provided date.",
            "in": "query",
            "name": "LastCheckInAfter",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Optional. Specify the order in which results should be returned. Use this format: [FieldName] [ASC|ASCENDING|DESC|DESCENDING],...   \r\n            If sort direction is not provided for a field, it will be sorted ascending.",
            "in": "query",
            "name": "OrderBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.ClientStatus_UpdateSystem.Models.PagedClientStatusMetadata_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.ClientStatus_UpdateSystem.Models.PagedClientStatusMetadata_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Reporting"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Reporting_RegisteredClients",
        "summary": "Get a list of subscribed clients"
      }
    },
    "/api/v2/Reporting/UpdateGroups": {
      "get": {
        "parameters": [
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.UpdateGroup_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.UpdateGroup_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Reporting"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Reporting_UpdateGroups",
        "summary": "Get a list of Update Groups.  Update Groups are used by the client to register for a specific type of update."
      }
    },
    "/api/v2/Reporting/UpdateMetrics": {
      "get": {
        "parameters": [
          {
            "description": "The UpdateType in which clients must be for the report to include them.",
            "in": "query",
            "name": "UpdateGroupID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Tells us which chart to show based upon filter.",
            "in": "query",
            "name": "bundleNumber",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.UpdateMetricsData"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.UpdateMetricsData"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.UpdateMetricsData"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.UpdateMetricsData"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Reporting"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Reporting_UpdateMetrics",
        "summary": "Get data for pie charts in UpdateMetrics."
      }
    },
    "/api/v2/Roles": {
      "get": {
        "parameters": [
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Finds a role with the given name.",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "permissionID",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Filters roles by whether they contain the provided permission.",
            "in": "query",
            "name": "permissionName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_API.Models.Role_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_API.Models.Role_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Roles"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Roles_GetRoles",
        "summary": "List Roles"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Roles"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Roles_PostRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.Role"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.Role"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.Role"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.Role"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.Role"
              }
            }
          },
          "description": "Role to add",
          "required": true
        },
        "summary": "Adds a User Role"
      }
    },
    "/api/v2/Roles/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The role's id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Roles"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Roles_DeleteRole",
        "summary": "Deletes a User Role"
      },
      "get": {
        "parameters": [
          {
            "description": "The role's id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.Role"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.Role"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.Role"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.Role"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Roles"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Roles_GetRole",
        "summary": "Gets a User Role"
      },
      "put": {
        "parameters": [
          {
            "description": "The role's id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Roles"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Roles_PutRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.Role"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.Role"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.Role"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.Role"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.Role"
              }
            }
          },
          "description": "The Updated Role",
          "required": true
        },
        "summary": "Updates a User Role"
      }
    },
    "/api/v2/Roles/{id}/Permissions": {
      "get": {
        "parameters": [
          {
            "description": "The id of the Role",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Filter by permission name. Optional.",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_API.Models.Permission_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_API.Models.Permission_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Roles"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Roles_GetRolePermissions",
        "summary": "Get the Permissions for a Role"
      },
      "put": {
        "parameters": [
          {
            "description": "The id of the Role",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Roles"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Roles_PutRolePermissions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/API.Models.RolePermissionChange"
                },
                "type": "array"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/API.Models.RolePermissionChange"
                },
                "type": "array"
              }
            },
            "application/xml": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/API.Models.RolePermissionChange"
                },
                "type": "array"
              }
            },
            "text/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/API.Models.RolePermissionChange"
                },
                "type": "array"
              }
            },
            "text/xml": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/API.Models.RolePermissionChange"
                },
                "type": "array"
              }
            }
          },
          "description": "Permissions Changes for the Role",
          "required": true
        },
        "summary": "Manage the Permissions for a Role"
      }
    },
    "/api/v2/Roles/{id}/Users": {
      "get": {
        "parameters": [
          {
            "description": "The Role's ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_API.Models.User_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_API.Models.User_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UserPermissions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "UserPermissions_GetUsers",
        "summary": "Get all user's in a role"
      },
      "put": {
        "parameters": [
          {
            "description": "The Role's ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UserPermissions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "UserPermissions_Put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/API.Models.RoleUserChange"
                },
                "type": "array"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/API.Models.RoleUserChange"
                },
                "type": "array"
              }
            },
            "application/xml": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/API.Models.RoleUserChange"
                },
                "type": "array"
              }
            },
            "text/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/API.Models.RoleUserChange"
                },
                "type": "array"
              }
            },
            "text/xml": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/API.Models.RoleUserChange"
                },
                "type": "array"
              }
            }
          },
          "description": "A list of changes to the Role's Users",
          "required": true
        },
        "summary": "Update a Role's users"
      }
    },
    "/api/v2/StringDefinitions": {
      "get": {
        "parameters": [
          {
            "description": "Optional. The page limit. The default page limit is 10. Ignored if 'stringIds' is provided.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Return only the StringDefinition objects that have a Timestamp value greater than that provided. This will be an encoded byte array.",
            "in": "query",
            "name": "modifiedAfterTimestamp",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Indicates whether to include the StringTranslations for the StringDefinition. Defaults to false.",
            "in": "query",
            "name": "includeTranslations",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Optional. The text for which to search in the StringDefinition object\u2019s translations. Only StringDefinition objects for matching StringTranslation objects are returned. Does not filter if no value is provided. Supports beginning and/or ending wildcards. includeTranslations must be true.",
            "in": "query",
            "name": "stringText",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. The text for which to search in the StringDefinition description field. Only matching objects are returned. Does not filter if no value is provided. Supports beginning and/or ending wildcards.",
            "in": "query",
            "name": "descriptionText",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. This flag is used to determin whether to use the FullText Search or not.",
            "in": "query",
            "name": "useFullText",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Optional. Indicates whether to include languages marked as deleted. includeTranslations must be true. Defaults to false.",
            "in": "query",
            "name": "includeDeletedLanguages",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Optional. A comma-delimited list of language ids. Only StringTranslation objects with a matching language id will be returned. Optional. By default all locales are returned. includeTranslations must be true. The StringDefinition is still returned even if the filtered translations list is empty.",
            "in": "query",
            "name": "languageIds",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. A comma-delimited list of string ids. Up to 40 string IDs may be provided. May not be used with 'modifiedAfterTimestamp', 'stringText', 'descriptionText', or 'useFullText'.",
            "in": "query",
            "name": "stringIds",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. If false, all translations for returned String Definitions are included. Must be used with 'stringText' provided and 'includeTranslations' = true.",
            "in": "query",
            "name": "matchingTranslationsOnly",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.StringDefinition_"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.StringDefinition_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.StringDefinition_"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.StringDefinition_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "StringDefinitions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "StringDefinitions_GetDefinitions",
        "summary": "Get a paged response of Global String Definitions."
      }
    },
    "/api/v2/StringDefinitions/Batch": {
      "post": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "StringDefinitions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "StringDefinitions_PostDefinition",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringDefinition"
                },
                "type": "array"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringDefinition"
                },
                "type": "array"
              }
            },
            "application/xml": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringDefinition"
                },
                "type": "array"
              }
            },
            "text/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringDefinition"
                },
                "type": "array"
              }
            },
            "text/xml": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringDefinition"
                },
                "type": "array"
              }
            }
          },
          "description": "The StringDefinition Object array, along with originating translation.",
          "required": true
        },
        "summary": "Create StringDefinition object. The originating translation must be provided. Accepts an array of StringDefinition objects. Returns nothing."
      },
      "put": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "StringDefinitions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "StringDefinitions_UpdateDefinitions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringDefinition"
                },
                "type": "array"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringDefinition"
                },
                "type": "array"
              }
            },
            "application/xml": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringDefinition"
                },
                "type": "array"
              }
            },
            "text/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringDefinition"
                },
                "type": "array"
              }
            },
            "text/xml": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringDefinition"
                },
                "type": "array"
              }
            }
          },
          "description": "The Array of Definitions to update",
          "required": true
        },
        "summary": "Update StringDefinition objects. Accepts an array of StringDefinition objects. This endpoint will add StringDefinitionChange objects to the database. The DescriptionForTranslator may not be modified after a String is submitted for translation."
      }
    },
    "/api/v2/StringDefinitions/{ID}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Indicates whether to include the StringTranslations for the StringDefinition. Defaults to false.",
            "in": "query",
            "name": "includeTranslations",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Optional. Indicates whether to include languages marked as deleted. includeTranslations must be true. Defaults to false.",
            "in": "query",
            "name": "includeDeletedLanguages",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Optional. A comma-delimited list of language ids. Only StringTranslation objects with a matching language id will be returned. Optional. By default all locales are returned. includeTranslations must be true. The StringDefinition is still returned even if the filtered translations list is empty.",
            "in": "query",
            "name": "languageIds",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringDefinition"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringDefinition"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringDefinition"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringDefinition"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "StringDefinitions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "StringDefinitions_GetDefinition",
        "summary": "Get a paged response of Global String Definitions."
      }
    },
    "/api/v2/StringTranslations": {
      "get": {
        "parameters": [
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Return only the StringDefinition objects that have a Timestamp value greater than that provided. This will be an encoded byte array.",
            "in": "query",
            "name": "modifiedAfterTimestamp",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.StringTranslation_"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.StringTranslation_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.StringTranslation_"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.StringTranslation_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "StringTranslations"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "StringTranslations_GetTranslations",
        "summary": "Get a paged response of Global String Translations."
      }
    },
    "/api/v2/StringTranslations/Batch": {
      "put": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "StringTranslations"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "StringTranslations_UpdateTranslations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringTranslation"
                },
                "type": "array"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringTranslation"
                },
                "type": "array"
              }
            },
            "application/xml": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringTranslation"
                },
                "type": "array"
              }
            },
            "text/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringTranslation"
                },
                "type": "array"
              }
            },
            "text/xml": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringTranslation"
                },
                "type": "array"
              }
            }
          },
          "required": true
        },
        "summary": "Update corrections to string translations"
      }
    },
    "/api/v2/StringTranslations/{stringId}/{languageId}": {
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "stringId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "languageId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringTranslation"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringTranslation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringTranslation"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringTranslation"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "StringTranslations"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "StringTranslations_GetTranslation",
        "summary": "Get a single translation based upon stringId and languageId"
      },
      "put": {
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "stringId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "path",
            "name": "languageId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "StringTranslations"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "StringTranslations_UpdateTranslation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringTranslation"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringTranslation"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringTranslation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringTranslation"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringTranslation"
              }
            }
          },
          "required": true
        },
        "summary": "Update a string value or a state for a string translation."
      }
    },
    "/api/v2/TranslationKeys": {
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Can filter by keyNames, a comma deliminated list.",
            "in": "query",
            "name": "keyNames",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_OASSupport.Shared.Models.TranslationKey_"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_OASSupport.Shared.Models.TranslationKey_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_OASSupport.Shared.Models.TranslationKey_"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_OASSupport.Shared.Models.TranslationKey_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "TranslationKeys"
        ],
        "deprecated": false,
        "description": "",
        "operationId": "TranslationKeys_Get",
        "summary": "Get a paged response of TranslationKeys."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "TranslationKeys"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "TranslationKeys_CreateTranslationKey",
        "requestBody": {
          "$ref": "#/components/requestBodies/OASSupport.Shared.Models.TranslationKey"
        },
        "summary": "Create a translationKey object."
      }
    },
    "/api/v2/TranslationKeys/{ID}": {
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OASSupport.Shared.Models.TranslationKey"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OASSupport.Shared.Models.TranslationKey"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OASSupport.Shared.Models.TranslationKey"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OASSupport.Shared.Models.TranslationKey"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "TranslationKeys"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "TranslationKeys_GetTranslationKey",
        "summary": "Get TranslationKey by ID"
      },
      "put": {
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "TranslationKeys"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "TranslationKeys_UpdateTranslationKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OASSupport.Shared.Models.TranslationKey"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/OASSupport.Shared.Models.TranslationKey"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/OASSupport.Shared.Models.TranslationKey"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OASSupport.Shared.Models.TranslationKey"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/OASSupport.Shared.Models.TranslationKey"
              }
            }
          },
          "required": true
        },
        "summary": "Update the StringID of the translationKey object."
      }
    },
    "/api/v2/TranslationRequests": {
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.TranslationRequest_"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.TranslationRequest_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.TranslationRequest_"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.TranslationRequest_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "TranslationRequests"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "TranslationRequests_GetTranslationRequests",
        "summary": "Get all TranslationRequest objects. Returns a PagedResponse of TranslationRequest objects with their language ids and string ids."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "TranslationRequests"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "TranslationRequests_CreateTranslationRequest",
        "requestBody": {
          "$ref": "#/components/requestBodies/GlobalResources.Shared.Models.TranslationRequest"
        },
        "summary": "Create a translation request. Accepts a TranslationRequest object. Returns the Id of the created object. The state of the TranslationRequest must be \u2018NotSubmitted\u2019."
      }
    },
    "/api/v2/TranslationRequests/{Id}": {
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationRequest"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationRequest"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationRequest"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationRequest"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "TranslationRequests"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "TranslationRequests_GetTranslationRequest",
        "summary": "Get a TranslationRequest object by id. Returns TranslationRequest object with its language ids and string ids."
      },
      "put": {
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "doResendRequest",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "TranslationRequests"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "TranslationRequests_UpdateTranslationRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationRequest"
              }
            }
          },
          "required": true
        },
        "summary": "Update a TranslationRequest object by id. Accepts a TranslationRequest object."
      }
    },
    "/api/v2/TranslationRequests/{Id}/Strings": {
      "put": {
        "parameters": [
          {
            "in": "path",
            "name": "Id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "TranslationRequests"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "TranslationRequests_UpdateTranslationRequestStrings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "application/xml": {
              "schema": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "text/json": {
              "schema": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "text/xml": {
              "schema": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            }
          },
          "required": true
        },
        "summary": "No Documentation Found."
      }
    },
    "/api/v2/TranslationSetAttributes/Batch": {
      "put": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "TranslationSets"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "TranslationSets_UpdateTranslationSetAttributes",
        "requestBody": {
          "$ref": "#/components/requestBodies/GlobalResources.Shared.Models.TranslationSetAttributeArray"
        },
        "summary": "No Documentation Found."
      }
    },
    "/api/v2/TranslationSetAttributes/{ID}": {
      "delete": {
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "TranslationSets"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "TranslationSets_DeleteTranslationSetAttribute",
        "summary": "Delete a set of TranslationSetAttribute object"
      },
      "put": {
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "TranslationSets"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "TranslationSets_UpdateTranslationSetAttribute",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetAttribute"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetAttribute"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetAttribute"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetAttribute"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetAttribute"
              }
            }
          },
          "required": true
        },
        "summary": "Update a TranslationSetAttribute object"
      }
    },
    "/api/v2/TranslationSets": {
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "translationRequestID",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "state",
            "required": false,
            "schema": {
              "enum": [
                "OutForProcessing",
                "Processing",
                "PendingApproval",
                "OutForTranslation",
                "Cancelled",
                "Completed"
              ],
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "stringId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "languageId",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Names of Attributes to include when retrieving this submission. This should be a comma-separated list. If not provided, Attributes are not included. If '*', all Attributes are included.",
            "in": "query",
            "name": "includeAttributes",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.TranslationSet_"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.TranslationSet_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.TranslationSet_"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.TranslationSet_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "TranslationSets"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "TranslationSets_GetTranslationSets",
        "summary": "Get a PagedResponse of TranslationSet objects. Related TranslationSetStrings are NOT returned"
      }
    },
    "/api/v2/TranslationSets/{ID}": {
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Names of Attributes to include when retrieving this Translation set. This should be a comma-separated list. If not provided, Attributes are not included. If '*', all Attributes are included.",
            "in": "query",
            "name": "includeAttributes",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSet"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSet"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSet"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSet"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "TranslationSets"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "TranslationSets_GetTranslationSet",
        "summary": "Get a TranslationSet object by its id. Related TranslationSetStrings are NOT returned."
      },
      "put": {
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "TranslationSets"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "TranslationSets_UpdateTranslationSet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSet"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSet"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSet"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSet"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSet"
              }
            }
          },
          "required": true
        },
        "summary": "Update a Translation Set. Accepts a TranslationSet object. Only the state property may be updated."
      }
    },
    "/api/v2/TranslationSets/{ID}/Attributes": {
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.TranslationSetAttribute_"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.TranslationSetAttribute_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.TranslationSetAttribute_"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.TranslationSetAttribute_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "TranslationSets"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "TranslationSets_GetTranslationSetAttributes",
        "summary": "Get a PagedResponse of TranslationSetAttribute objects"
      },
      "post": {
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "TranslationSets"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "TranslationSets_PostTranslationSetAttribute",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetAttribute"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetAttribute"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetAttribute"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetAttribute"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetAttribute"
              }
            }
          },
          "required": true
        },
        "summary": "Create a TranslationSetAttribute object"
      }
    },
    "/api/v2/TranslationSets/{ID}/Attributes/Batch": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "TranslationSets"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "TranslationSets_PostTranslationSetAttributes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetAttribute"
                },
                "type": "array"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetAttribute"
                },
                "type": "array"
              }
            },
            "application/xml": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetAttribute"
                },
                "type": "array"
              }
            },
            "text/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetAttribute"
                },
                "type": "array"
              }
            },
            "text/xml": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetAttribute"
                },
                "type": "array"
              }
            }
          },
          "required": true
        },
        "summary": "No Documentation Found."
      }
    },
    "/api/v2/TranslationSets/{ID}/SourceStrings": {
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.TranslationSetSourceString_"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.TranslationSetSourceString_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.TranslationSetSourceString_"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.TranslationSetSourceString_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "TranslationSets"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "TranslationSets_GetSourceStrings",
        "summary": "Gets the information needed to translate a string in a translation set"
      }
    },
    "/api/v2/TranslationSets/{ID}/Statistics": {
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetStatistics"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetStatistics"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetStatistics"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetStatistics"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "TranslationSets"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "TranslationSets_GetStatistics",
        "summary": "Gets the statistics for translation sets such as the language ids and count of string definitions."
      }
    },
    "/api/v2/TranslationSets/{ID}/Strings": {
      "get": {
        "parameters": [
          {
            "description": "",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.TranslationSetString_"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.TranslationSetString_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.TranslationSetString_"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.IPagedResponse_GlobalResources.Shared.Models.TranslationSetString_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "TranslationSets"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "TranslationSets_GetTranslationSetStrings",
        "summary": "Get a PagedResponse of TranslationSetString objects"
      },
      "put": {
        "parameters": [
          {
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "TranslationSets"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "TranslationSets_UpdateTranslationSetStrings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetString"
                },
                "type": "array"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetString"
                },
                "type": "array"
              }
            },
            "application/xml": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetString"
                },
                "type": "array"
              }
            },
            "text/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetString"
                },
                "type": "array"
              }
            },
            "text/xml": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetString"
                },
                "type": "array"
              }
            }
          },
          "required": true
        },
        "summary": "No Documentation Found."
      }
    },
    "/api/v2/UpdateGroupClientRelationships": {
      "get": {
        "parameters": [
          {
            "description": "Optional. Filter by Client ID",
            "in": "query",
            "name": "ClientID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter by Update Group ID",
            "in": "query",
            "name": "UpdateGroupID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Filter by Active",
            "in": "query",
            "name": "Active",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.UpdateGroupClientRelationship_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.UpdateGroupClientRelationship_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UpdateGroupClientRelationships"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "UpdateGroupClientRelationships_GetSubscriptions",
        "summary": "Get a list of current Client Subscriptions."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UpdateGroupClientRelationships"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "UpdateGroupClientRelationships_PostSubscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupClientRelationship"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupClientRelationship"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupClientRelationship"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupClientRelationship"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupClientRelationship"
              }
            }
          },
          "description": "The UpdateGroupClientRelationship to add.",
          "required": true
        },
        "summary": "Add a subscription"
      },
      "put": {
        "parameters": [
          {
            "description": "The Client ID.  This can be a client ID that has not been registered yet.",
            "in": "query",
            "name": "ClientID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Update Group ID",
            "in": "query",
            "name": "UpdateGroupID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Subscribe the client to the Update Group.",
            "in": "query",
            "name": "Active",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UpdateGroupClientRelationships"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "UpdateGroupClientRelationships_PutSubscriptionByClientIDUpdateGroupID",
        "summary": "DEPRECATED. Set client subscription status for an update group."
      }
    },
    "/api/v2/UpdateGroupClientRelationships/{RelationshipID}": {
      "get": {
        "parameters": [
          {
            "description": "The RelationshipID.",
            "in": "path",
            "name": "RelationshipID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupClientRelationship"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupClientRelationship"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupClientRelationship"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupClientRelationship"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UpdateGroupClientRelationships"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "UpdateGroupClientRelationships_GetSubscription",
        "summary": "Get a subscription by RelationshipID"
      },
      "put": {
        "parameters": [
          {
            "description": "The relationship id of the UpdateGroupClientRelationship",
            "in": "path",
            "name": "RelationshipID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UpdateGroupClientRelationships"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "UpdateGroupClientRelationships_PutSubscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupClientRelationship"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupClientRelationship"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupClientRelationship"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupClientRelationship"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupClientRelationship"
              }
            }
          },
          "description": "The updated UpdateGroupClientRelationship",
          "required": true
        },
        "summary": "Updates a Subscription"
      }
    },
    "/api/v2/UpdateGroupSubscriptions": {
      "get": {
        "parameters": [
          {
            "description": "Optional. Filter by Update Group ID.",
            "in": "query",
            "name": "UpdateGroupID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter by Package Type ID.",
            "in": "query",
            "name": "PackageTypeID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter by Client ID.",
            "in": "query",
            "name": "ClientID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.UpdateGroupSubscription_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.UpdateGroupSubscription_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UpdateGroupSubscriptions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "UpdateGroupSubscriptions_GetUpdateGroupSubscriptions",
        "summary": "Get Update Group Subscriptions"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UpdateGroupSubscriptions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "UpdateGroupSubscriptions_PostUpdateGroupSubscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupSubscription"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupSubscription"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupSubscription"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupSubscription"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupSubscription"
              }
            }
          },
          "description": "The Update Group Subscription to add",
          "required": true
        },
        "summary": "Add an Update Group Subscription"
      }
    },
    "/api/v2/UpdateGroupSubscriptions/Batch": {
      "post": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UpdateGroupSubscriptions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "UpdateGroupSubscriptions_PostUpdateGroupSubscriptions",
        "requestBody": {
          "$ref": "#/components/requestBodies/UpdateSystem.Models.UpdateGroupSubscriptionArray"
        },
        "summary": "No Documentation Found."
      },
      "put": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UpdateGroupSubscriptions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "UpdateGroupSubscriptions_PutUpdateGroupSubscriptions",
        "requestBody": {
          "$ref": "#/components/requestBodies/UpdateSystem.Models.UpdateGroupSubscriptionArray"
        },
        "summary": "No Documentation Found."
      }
    },
    "/api/v2/UpdateGroupSubscriptions/{UpdateGroupSubscriptionID}": {
      "delete": {
        "parameters": [
          {
            "description": "The Update Group Subscription ID to delete",
            "in": "path",
            "name": "UpdateGroupSubscriptionID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UpdateGroupSubscriptions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "UpdateGroupSubscriptions_DeleteUpdateGroupSubscription",
        "summary": "Delete an Update Group Subscription"
      },
      "get": {
        "parameters": [
          {
            "description": "The Update Group Subscription ID",
            "in": "path",
            "name": "UpdateGroupSubscriptionID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupSubscription"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupSubscription"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupSubscription"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupSubscription"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UpdateGroupSubscriptions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "UpdateGroupSubscriptions_GetUpdateGroupSubscription",
        "summary": "Get an Update Group Subscription"
      },
      "put": {
        "parameters": [
          {
            "description": "The Update Group Subscription ID",
            "in": "path",
            "name": "UpdateGroupSubscriptionID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UpdateGroupSubscriptions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "UpdateGroupSubscriptions_PutUpdateGroupSubscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupSubscription"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupSubscription"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupSubscription"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupSubscription"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupSubscription"
              }
            }
          },
          "description": "The updated Update Group Subscription",
          "required": true
        },
        "summary": "Update an Update Group Subscription"
      }
    },
    "/api/v2/UpdateGroups": {
      "get": {
        "parameters": [
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The user ID to sort update groups by the user's access",
            "in": "query",
            "name": "userID",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.UpdateGroup_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.UpdateGroup_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UpdateGroups"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "UpdateGroups_Get",
        "summary": "Get a list of Update Groups.  Update Groups are used by the client to register for a specific type of update."
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UpdateGroups"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "UpdateGroups_Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroup"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroup"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroup"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroup"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroup"
              }
            }
          },
          "required": true
        },
        "summary": "Add a new Update Group.  The report field is a string that has a dot based request for a specific piece of submitted data."
      }
    },
    "/api/v2/UpdateGroups/{ID}": {
      "delete": {
        "parameters": [
          {
            "description": "The ID of the Update Group to Delete",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UpdateGroups"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "UpdateGroups_Delete",
        "summary": "Delete an Update Group."
      },
      "get": {
        "parameters": [
          {
            "description": "The ID of the Update Group",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroup"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroup"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroup"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroup"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UpdateGroups"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "UpdateGroups_Get",
        "summary": "Get a specific Update Group by ID."
      },
      "put": {
        "parameters": [
          {
            "description": "ID of the Update Group",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UpdateGroups"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "UpdateGroups_Put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroup"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroup"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroup"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroup"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroup"
              }
            }
          },
          "description": "The Update Group to update.",
          "required": true
        },
        "summary": "Modify an Update Group."
      }
    },
    "/api/v2/UpdateGroups/{ID}/Bundles": {
      "get": {
        "parameters": [
          {
            "description": "The UpdateGroupID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Include Inactive Bundles (true|false)",
            "in": "query",
            "name": "IncludeInactive",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.Bundle_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_UpdateSystem.Models.Bundle_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UpdateGroups"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "UpdateGroups_GetUpdateGroupBundles",
        "summary": "Get a list of bundles for UpdateGroup."
      }
    },
    "/api/v2/UpdateGroups/{id}/Users/{userID}": {
      "delete": {
        "parameters": [
          {
            "description": "The ID of the update group",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The userID to link to the update group",
            "in": "path",
            "name": "userID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UpdateGroups"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "UpdateGroups_RemoveUpdateGroupUser",
        "summary": "Deletes an update group a user could see."
      },
      "post": {
        "parameters": [
          {
            "description": "The ID of the update group",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The userID to link to the update group",
            "in": "path",
            "name": "userID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UpdateGroups"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "UpdateGroups_AddUpdateGroupUser",
        "summary": "Add an updateGroup that a user can see."
      }
    },
    "/api/v2/UpdateSystem": {
      "get": {
        "parameters": [
          {
            "description": "The Client ID to check-in.  If this is a new client ID it will be added to Clients.",
            "in": "query",
            "name": "ClientID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Get Pkgs w\\o updating Datetimes(true|false)",
            "in": "query",
            "name": "Preview",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Force return inventories. Defaults to false.",
            "in": "query",
            "name": "RunAllInventories",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Optional. The 'NextTransactionID' from the previous check-in. Used to detect duplicate client IDs.",
            "in": "query",
            "name": "transactionID",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.CheckinResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.CheckinResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.CheckinResult"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSystem.Models.CheckinResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UpdateSystem"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "UpdateSystem_GetCheckin",
        "summary": "Checks the Client ID into the Update System."
      }
    },
    "/api/v2/UserContentDefinitions": {
      "get": {
        "parameters": [
          {
            "description": "Optional. The page limit.  If not specified, the default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset.  If not specified, the default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Filter by UserID.",
            "in": "query",
            "name": "userID",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Filter by ContentDefinitionID",
            "in": "query",
            "name": "contentDefinitionID",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_ContentSubmission.Shared.BusinessEntities.UserContentDefinition_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_ContentSubmission.Shared.BusinessEntities.UserContentDefinition_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UserContentDefinitions"
        ],
        "deprecated": false,
        "description": "Gets a collection of UserContentDefinitions. When successful, the response is a PagedResponse of UserContentDefinitions.\r\n            If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "UserContentDefinitions_GetUserContentDefinitions",
        "summary": "Get UserContentDefinitions"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UserContentDefinitions"
        ],
        "deprecated": false,
        "description": "Creates a UserContentDefinition.  The body of the POST is the UserContentDefinition to create.\r\n            The UserContentDefinitionID will be assigned on creation of the Job.  When successful, the response\r\n            is the UserContentDefinitionID.  If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "UserContentDefinitions_PostUserContentDefinition",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.UserContentDefinition"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.UserContentDefinition"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.UserContentDefinition"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.UserContentDefinition"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.UserContentDefinition"
              }
            }
          },
          "description": "The UserContentDefinition to create.",
          "required": true
        },
        "summary": "Create a UserContentDefinition"
      }
    },
    "/api/v2/UserContentDefinitions/{userContentDefinitionID}": {
      "delete": {
        "parameters": [
          {
            "description": "The ID of the UserContentDefinition to delete",
            "in": "path",
            "name": "userContentDefinitionID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UserContentDefinitions"
        ],
        "deprecated": false,
        "description": "Deletes an UserContentDefinition. When successful, the response is empty.  If unsuccessful, an appropriate\r\n            ApiError is returned.",
        "operationId": "UserContentDefinitions_DeleteUserContentDefinition",
        "summary": "Delete a UserContentDefinition"
      },
      "get": {
        "parameters": [
          {
            "description": "The ID of the UserContentDefinition to get.",
            "in": "path",
            "name": "userContentDefinitionID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.UserContentDefinition"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.UserContentDefinition"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.UserContentDefinition"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.UserContentDefinition"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UserContentDefinitions"
        ],
        "deprecated": false,
        "description": "Gets a UserContentDefinition by ID. When successful, the response is the requested UserContentDefinition.\r\n            If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "UserContentDefinitions_GetUserContentDefinition",
        "summary": "Get a UserContentDefinition by ID"
      }
    },
    "/api/v2/Users": {
      "get": {
        "parameters": [
          {
            "description": "Optional. Search by username. Supports beginning and ending wildcards (*).",
            "in": "query",
            "name": "username",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Search by email. Supports beginning and ending wildcards (*).",
            "in": "query",
            "name": "email",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Search by name. Supports beginning and ending wildcards (*).",
            "in": "query",
            "name": "name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Return only users having the provided role name.",
            "in": "query",
            "name": "hasRole",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_API.Models.User_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_API.Models.User_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Users"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Users_Get",
        "summary": "Get users"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.User"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.User"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Users"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Users_Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.User"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.User"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.User"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.User"
              }
            }
          },
          "description": "The user to create.",
          "required": true
        },
        "summary": "Create a user"
      }
    },
    "/api/v2/Users/Current": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.User"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.User"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Users"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Users_GetCurrentUser",
        "summary": "Gets the current user"
      },
      "put": {
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Users"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Users_PutCurrentUser",
        "requestBody": {
          "$ref": "#/components/requestBodies/API.Models.User"
        },
        "summary": "Update a user"
      }
    },
    "/api/v2/Users/Current/Permissions": {
      "get": {
        "parameters": [
          {
            "description": "Filter by permission name. Supports ending wildcard (*). Optional.",
            "in": "query",
            "name": "Permission",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_API.Models.UserEffectivePermission_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_API.Models.UserEffectivePermission_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UserPermissions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "UserPermissions_GetPermissions",
        "summary": "Get a user's permissions"
      }
    },
    "/api/v2/Users/Current/Roles": {
      "get": {
        "parameters": [
          {
            "description": "Filter by role name. Supports ending wildcard (*). Optional.",
            "in": "query",
            "name": "Role",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_API.Models.Role_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_API.Models.Role_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UserPermissions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "UserPermissions_GetCurrentUserRoles",
        "summary": "Gets the current user's roles"
      }
    },
    "/api/v2/Users/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "The user id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Users"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Users_Delete",
        "summary": "Delete a user"
      },
      "get": {
        "parameters": [
          {
            "description": "The user ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.User"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.User"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Users"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Users_Get",
        "summary": "Get a specific user"
      },
      "put": {
        "parameters": [
          {
            "description": "The user id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Users"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Users_Put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.User"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.User"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.User"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/API.Models.User"
              }
            }
          },
          "description": "The user",
          "required": true
        },
        "summary": "Update a user"
      }
    },
    "/api/v2/Users/{id}/Permissions": {
      "get": {
        "parameters": [
          {
            "description": "The User's ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Filter by permission name. Supports ending wildcard (*). Optional.",
            "in": "query",
            "name": "Permission",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_API.Models.UserEffectivePermission_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_API.Models.UserEffectivePermission_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UserPermissions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "UserPermissions_GetPermissions",
        "summary": "Get a user's permissions"
      }
    },
    "/api/v2/Users/{id}/Roles": {
      "get": {
        "parameters": [
          {
            "description": "The User's ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Filter by role name. Supports ending wildcard (*). Optional.",
            "in": "query",
            "name": "Role",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_API.Models.Role_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_API.Models.Role_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UserPermissions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "UserPermissions_GetRoles",
        "summary": "Get a user's roles"
      },
      "put": {
        "parameters": [
          {
            "description": "The User's ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "UserPermissions"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "UserPermissions_Put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/API.Models.UserRoleChange"
                },
                "type": "array"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/API.Models.UserRoleChange"
                },
                "type": "array"
              }
            },
            "application/xml": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/API.Models.UserRoleChange"
                },
                "type": "array"
              }
            },
            "text/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/API.Models.UserRoleChange"
                },
                "type": "array"
              }
            },
            "text/xml": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/API.Models.UserRoleChange"
                },
                "type": "array"
              }
            }
          },
          "description": "A list of changes to the User's Roles",
          "required": true
        },
        "summary": "Update a user's roles"
      }
    },
    "/api/v2/VoucherHistory": {
      "get": {
        "parameters": [
          {
            "description": "Optional. Filter history data by Voucher Code.",
            "in": "query",
            "name": "VoucherCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter history data where changes occured before provided date.",
            "in": "query",
            "name": "ChangedBefore",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter history data where changes occured after provided date.",
            "in": "query",
            "name": "ChangedAfter",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_DealerDB.Models.VoucherHistory_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_DealerDB.Models.VoucherHistory_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "VoucherHistory"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "VoucherHistory_GetVoucherHistory",
        "summary": "Gets voucher history data"
      }
    },
    "/api/v2/Vouchers": {
      "get": {
        "parameters": [
          {
            "description": "Optional. Filter vouchers by Type",
            "in": "query",
            "name": "Type",
            "required": false,
            "schema": {
              "enum": [
                "Commercial",
                "Internal",
                "Temporary",
                "RightToRepair"
              ],
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter vouchers by DealerCode",
            "in": "query",
            "name": "DealerCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter vouchers by LicenseTo. Wildcard supported (*).",
            "in": "query",
            "name": "LicenseTo",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter vouchers by Purpose. Wildcard supported (*).",
            "in": "query",
            "name": "Purpose",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter vouchers by OrderNumber",
            "in": "query",
            "name": "OrderNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter vouchers by Email. Wildcard supported (*).",
            "in": "query",
            "name": "Email",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter vouchers by ModifiedBy",
            "in": "query",
            "name": "ModifiedBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter vouchers by CreatedDate",
            "in": "query",
            "name": "CreatedAfter",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter vouchers by CreatedDate",
            "in": "query",
            "name": "CreatedBefore",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter vouchers by PunchedDate",
            "in": "query",
            "name": "PunchedAfter",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter vouchers by PunchedDate",
            "in": "query",
            "name": "PunchedBefore",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter vouchers by Punched status",
            "in": "query",
            "name": "Punched",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Optional. Filter vouchers by ExpirationDate",
            "in": "query",
            "name": "ExpirationAfter",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter vouchers by ExpirationDate",
            "in": "query",
            "name": "ExpirationBefore",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter vouchers by Deleted state. By default only vouchers that are not deleted are returned.",
            "in": "query",
            "name": "Deleted",
            "required": false,
            "schema": {
              "enum": [
                "NotDeleted",
                "Deleted",
                "All"
              ],
              "type": "string"
            }
          },
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_DealerDB.Models.Voucher_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_DealerDB.Models.Voucher_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Vouchers"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Vouchers_Get",
        "summary": "Gets a list of vouchers"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Vouchers"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Vouchers_Post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DealerDB.Models.Voucher"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DealerDB.Models.Voucher"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DealerDB.Models.Voucher"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DealerDB.Models.Voucher"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DealerDB.Models.Voucher"
              }
            }
          },
          "description": "The voucher to add.",
          "required": true
        },
        "summary": "Create a voucher"
      }
    },
    "/api/v2/Vouchers/{VoucherCode}": {
      "delete": {
        "parameters": [
          {
            "description": "The voucher code of the voucher to delete.",
            "in": "path",
            "name": "VoucherCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Vouchers"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Vouchers_Delete",
        "summary": "Delete a voucher"
      },
      "get": {
        "parameters": [
          {
            "description": "The voucher code of the voucher to get.",
            "in": "path",
            "name": "VoucherCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter vouchers by Deleted state. By default only vouchers that are not deleted are returned.",
            "in": "query",
            "name": "Deleted",
            "required": false,
            "schema": {
              "enum": [
                "NotDeleted",
                "Deleted",
                "All"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DealerDB.Models.Voucher"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DealerDB.Models.Voucher"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DealerDB.Models.Voucher"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DealerDB.Models.Voucher"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Vouchers"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Vouchers_Get",
        "summary": "Get a voucher"
      },
      "put": {
        "parameters": [
          {
            "description": "The voucher code of the voucher to update.",
            "in": "path",
            "name": "VoucherCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Vouchers"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Vouchers_Put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DealerDB.Models.Voucher"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/DealerDB.Models.Voucher"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DealerDB.Models.Voucher"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DealerDB.Models.Voucher"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DealerDB.Models.Voucher"
              }
            }
          },
          "description": "The updated voucher.",
          "required": true
        },
        "summary": "Update a voucher"
      }
    },
    "/api/v2/Vouchers/{VoucherCode}/VoucherHistory": {
      "get": {
        "parameters": [
          {
            "description": "The voucher code to get history for.",
            "in": "path",
            "name": "VoucherCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. The page limit. The default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset. The default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_DealerDB.Models.VoucherHistory_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_DealerDB.Models.VoucherHistory_"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Vouchers"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Vouchers_GetVoucherHistory",
        "summary": "Get a voucher's history."
      }
    },
    "/api/v2/activities": {
      "get": {
        "parameters": [
          {
            "description": "Optional. The page limit.  If not specified, the default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset.  If not specified, the default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Does it include deleted activity, or not",
            "in": "query",
            "name": "isIncludeDeleted",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_BuildSystem.Shared.DTO.Activity_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_BuildSystem.Shared.DTO.Activity_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Activities"
        ],
        "deprecated": false,
        "description": "Gets a collection of Activities. When successful, the response is a PagedResponse of Activities.  \r\n            If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "Activities_GetActivities",
        "summary": "Get Activities"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Activities"
        ],
        "deprecated": false,
        "description": "Creates an Activity.  The body of the POST is the Activity to create.  The ActivityID will be assigned\r\n            on creation of the Activity.  When successful, the response is the ActivityID.  If unsuccessful, an \r\n            appropriate ApiError is returned.",
        "operationId": "Activities_PostActivity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Activity"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Activity"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Activity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Activity"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Activity"
              }
            }
          },
          "description": "The activity to create.  The ActivityID will be assigned on creation of the Activity.",
          "required": true
        },
        "summary": "Create an Activity"
      }
    },
    "/api/v2/activities/{activityID}": {
      "delete": {
        "parameters": [
          {
            "description": "The id of the activity to delete",
            "in": "path",
            "name": "activityID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Activities"
        ],
        "deprecated": false,
        "description": "Deletes an Activity. When successful, the response is empty.  If unsuccessful, an appropriate\r\n            ApiError is returned.",
        "operationId": "Activities_DeleteActivity",
        "summary": "Mark the delete flag for the Activity"
      },
      "get": {
        "parameters": [
          {
            "description": "The ID of the Activity to get.",
            "in": "path",
            "name": "activityID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Does it include deleted activity, or not",
            "in": "query",
            "name": "isIncludeDeleted",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Activity"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Activity"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Activity"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Activity"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Activities"
        ],
        "deprecated": false,
        "description": "Gets an Activity by ID. When successful, the response is the requested Activity.  If unsuccessful,\r\n            an appropriate ApiError is returned.",
        "operationId": "Activities_GetActivity",
        "summary": "Get an Activity by ID"
      },
      "put": {
        "parameters": [
          {
            "description": "The id of the activity to update",
            "in": "path",
            "name": "activityID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Activities"
        ],
        "deprecated": false,
        "description": "Updates an Activity.  The body of the PUT is the updated Activity.  When successful, the response is empty.\r\n            If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "Activities_PutActivity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Activity"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Activity"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Activity"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Activity"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Activity"
              }
            }
          },
          "description": "The updated activity",
          "required": true
        },
        "summary": "Update an Activity"
      }
    },
    "/api/v2/activityRuns": {
      "get": {
        "parameters": [
          {
            "description": "Optional. The page limit.  If not specified, the default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset.  If not specified, the default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Filter activity runs by status.  Value should be a comma separated list of status to include.\r\n            If not specified, the default status filter is \u201cInProgress\u201d.",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "enum": [
                "Ready",
                "InProgress",
                "Succeeded",
                "Cancelled",
                "Failed"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_BuildSystem.Shared.DTO.ActivityRun_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_BuildSystem.Shared.DTO.ActivityRun_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ActivityRuns"
        ],
        "deprecated": false,
        "description": "Gets a collection of ActivityRuns. When successful, the response is a PagedResponse of ActivityRuns.  \r\n            If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "ActivityRuns_GetActivityRuns",
        "summary": "Get ActivityRuns"
      }
    },
    "/api/v2/activityRuns/{activityRunID}": {
      "get": {
        "parameters": [
          {
            "description": "The ID of the ActivityRun to get.",
            "in": "path",
            "name": "activityRunID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRun"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRun"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRun"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRun"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ActivityRuns"
        ],
        "deprecated": false,
        "description": "Gets an ActivityRun by ID. When successful, the response is the requested ActivityRun.  If unsuccessful,\r\n            an appropriate ApiError is returned.",
        "operationId": "ActivityRuns_GetActivityRun",
        "summary": "Get an ActivityRun by ID"
      },
      "put": {
        "parameters": [
          {
            "description": "The ID of the ActivityRun to update ActivityRunStatus for.",
            "in": "path",
            "name": "activityRunID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ActivityRuns"
        ],
        "deprecated": false,
        "description": "Updates the ActivityRunStatus of an ActivityRun.  The body of the PUT is the updated ActivityRunStatus.\r\n            When successful, the response is empty.  If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "ActivityRuns_PutActivityRun",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRun"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRun"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRun"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRun"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRun"
              }
            }
          },
          "description": "The updated ActivityRun.",
          "required": true
        },
        "summary": "Update an ActivityRun"
      }
    },
    "/api/v2/activityRuns/{activityRunID}/status": {
      "get": {
        "parameters": [
          {
            "description": "The ID of the ActivityRun to get ActivityRunStatus for.",
            "in": "path",
            "name": "activityRunID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRunStatus"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRunStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRunStatus"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRunStatus"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ActivityRuns"
        ],
        "deprecated": false,
        "description": "Gets the ActivityRunStatus of an ActivityRun.  When successful, the response is the requested ActivityRunStatus.\r\n            If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "ActivityRuns_GetActivityRunStatus",
        "summary": "Get the ActivityRunStatus of an ActivityRun"
      },
      "put": {
        "parameters": [
          {
            "description": "The ID of the ActivityRun to update ActivityRunStatus for.",
            "in": "path",
            "name": "activityRunID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "ActivityRuns"
        ],
        "deprecated": false,
        "description": "Updates the ActivityRunStatus of an ActivityRun.  The body of the PUT is the updated ActivityRunStatus.\r\n            When successful, the response is empty.  If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "ActivityRuns_PutActivityRunStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRunStatus"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRunStatus"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRunStatus"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRunStatus"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRunStatus"
              }
            }
          },
          "description": "The updated ActivityRunStatus.",
          "required": true
        },
        "summary": "Update the ActivityRunStatus of an ActivityRun"
      }
    },
    "/api/v2/agents": {
      "get": {
        "parameters": [
          {
            "description": "Optional. The page limit.  If not specified, the default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset.  If not specified, the default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_BuildSystem.Shared.DTO.Agent_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_BuildSystem.Shared.DTO.Agent_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Agents"
        ],
        "deprecated": false,
        "description": "Gets a collection of Agents. When successful, the response is a PagedResponse of Agents.  \r\n            If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "Agents_GetAgents",
        "summary": "Get Agents"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Agents"
        ],
        "deprecated": false,
        "description": "Creates an Agent.  The body of the POST is the Agent to create.  The AgentID will be assigned\r\n            on creation of the Agent.  When successful, the response is the AgentID.  If unsuccessful, an\r\n            appropriate ApiError is returned.",
        "operationId": "Agents_PostAgent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Agent"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Agent"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Agent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Agent"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Agent"
              }
            }
          },
          "description": "The Agent to create.  The AgentID will be assigned on creation of the Agent.",
          "required": true
        },
        "summary": "Create an Agent"
      }
    },
    "/api/v2/agents/Current": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Agent"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Agent"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Agent"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Agent"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Agents"
        ],
        "deprecated": false,
        "description": "Gets the Agent associated with the current user. When successful, the response is the requested Agent.  If unsuccessful,\r\n            an appropriate ApiError is returned.",
        "operationId": "Agents_GetCurrentAgentAsync",
        "summary": "Get Agent associated with the current user"
      }
    },
    "/api/v2/agents/Current/ActivityRun": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRun"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRun"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRun"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRun"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Agents"
        ],
        "deprecated": false,
        "description": "Gets the activity run assigned to an agent.  When successful, the response is the ActivityRun\r\n            assigned to the Agent.  If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "Agents_GetCurrentAgentActivityRun",
        "summary": "Get the ActivityRun of Agent associated with the current user"
      }
    },
    "/api/v2/agents/{agentID}": {
      "delete": {
        "parameters": [
          {
            "description": "The id of the Agent to delete.",
            "in": "path",
            "name": "agentID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Agents"
        ],
        "deprecated": false,
        "description": "Deletes an Agent. When successful, the response is empty.  If unsuccessful, an appropriate\r\n            ApiError is returned.",
        "operationId": "Agents_DeleteAgent",
        "summary": "Delete an Agent"
      },
      "get": {
        "parameters": [
          {
            "description": "The id of the Agent to get.",
            "in": "path",
            "name": "agentID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Agent"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Agent"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Agent"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Agent"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Agents"
        ],
        "deprecated": false,
        "description": "Gets an Agent by ID. When successful, the response is the requested Agent.  If unsuccessful,\r\n            an appropriate ApiError is returned.",
        "operationId": "Agents_GetAgentAsync",
        "summary": "Get Agent"
      },
      "put": {
        "parameters": [
          {
            "description": "The id of the Agent to update.",
            "in": "path",
            "name": "agentID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Agents"
        ],
        "deprecated": false,
        "description": "Updates an Agent.  The body of the PUT is the updated Agent.  When successful, the response is empty.\r\n            If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "Agents_PutAgent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Agent"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Agent"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Agent"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Agent"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Agent"
              }
            }
          },
          "description": "The updated Agent",
          "required": true
        },
        "summary": "Update an Agent"
      }
    },
    "/api/v2/agents/{agentID}/ActivityRun": {
      "get": {
        "parameters": [
          {
            "description": "The id of the Agent to get.",
            "in": "path",
            "name": "agentID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRun"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRun"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRun"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRun"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Agents"
        ],
        "deprecated": false,
        "description": "Gets the activity run assigned to an agent.  When successful, the response is the ActivityRun\r\n            assigned to the Agent.  If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "Agents_GetAgentActivityRun",
        "summary": "Get an Agent's ActivityRun"
      },
      "put": {
        "parameters": [
          {
            "description": "The id of the Agent to update.",
            "in": "path",
            "name": "agentID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Agents"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Agents_PutAgentActivityRun",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRun"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRun"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRun"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRun"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRun"
              }
            }
          },
          "description": "The ActivityRun assigned to the agent.  Only the ActivityRunID is used.",
          "required": true
        },
        "summary": "Update the ActivityRun assigned to the Agent."
      }
    },
    "/api/v2/agents/{agentID}/Status": {
      "put": {
        "parameters": [
          {
            "description": "The id of the Agent to update.",
            "in": "path",
            "name": "agentID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Agents"
        ],
        "deprecated": false,
        "description": "Updates the status of an Agent.The body of the PUT is the updated Agent status.  When successful,\r\n            the response is empty.If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "Agents_PutAgentStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.AgentStatus"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.AgentStatus"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.AgentStatus"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.AgentStatus"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.AgentStatus"
              }
            }
          },
          "description": "The updated AgentStatus.",
          "required": true
        },
        "summary": "Update an Agent"
      }
    },
    "/api/v2/jobRuns": {
      "get": {
        "parameters": [
          {
            "description": "Optional. The page limit.  If not specified, the default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset.  If not specified, the default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Indicates whether to include ActivityRun details.  Defaults to false.",
            "in": "query",
            "name": "includeActivityRunDetails",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_BuildSystem.Shared.DTO.JobRun_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_BuildSystem.Shared.DTO.JobRun_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "JobRuns"
        ],
        "deprecated": false,
        "description": "Gets a collection of JobRuns. When successful, the response is a PagedResponse of JobRuns.\r\n            If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "JobRuns_GetJobRuns",
        "summary": "Get JobRuns"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "JobRuns"
        ],
        "deprecated": false,
        "description": "Creates a JobRun.  The body of the POST is the JobRun to create.  The JobRunID will be assigned on\r\n            creation of the JobRun.  When successful, the response is the JobRunID.  If unsuccessful, an \r\n            appropriate ApiError is returned.",
        "operationId": "JobRuns_PostJobRun",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.JobRun"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.JobRun"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.JobRun"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.JobRun"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.JobRun"
              }
            }
          },
          "description": "The JobRun to create.  The JobRunID will be assigned on creation of the JobRun.",
          "required": true
        },
        "summary": "Create a JobRun"
      }
    },
    "/api/v2/jobRuns/{jobRunID}": {
      "delete": {
        "parameters": [
          {
            "description": "The id of the JobRun to delete",
            "in": "path",
            "name": "jobRunID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "JobRuns"
        ],
        "deprecated": false,
        "description": "Deletes a JobRun. When successful, the response is empty.  If unsuccessful, an appropriate\r\n            ApiError is returned.",
        "operationId": "JobRuns_DeleteJobRun",
        "summary": "Delete a JobRun"
      },
      "get": {
        "parameters": [
          {
            "description": "The ID of the JobRun to get.",
            "in": "path",
            "name": "jobRunID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. Indicates whether to include ActivityRun details.  Defaults to false.",
            "in": "query",
            "name": "includeActivityRunDetails",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.JobRun"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.JobRun"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.JobRun"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.JobRun"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "JobRuns"
        ],
        "deprecated": false,
        "description": "Gets a JobRun by ID. When successful, the response is the requested JobRun.\r\n            If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "JobRuns_GetJobRun",
        "summary": "Get a JobRun by ID"
      },
      "put": {
        "parameters": [
          {
            "description": "The id of the JobRun to update",
            "in": "path",
            "name": "jobRunID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "JobRuns"
        ],
        "deprecated": false,
        "description": "/// \r\n            Updates a JobRun.  The body of the PUT is the updated JobRun.\r\n            When successful, the response is empty.  If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "JobRuns_PutJobRun",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.JobRun"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.JobRun"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.JobRun"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.JobRun"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.JobRun"
              }
            }
          },
          "description": "The updated JobRun",
          "required": true
        },
        "summary": "Update a JobRun"
      }
    },
    "/api/v2/jobs": {
      "get": {
        "parameters": [
          {
            "description": "Optional. The page limit.  If not specified, the default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset.  If not specified, the default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Does it include deleted job, or not",
            "in": "query",
            "name": "isIncludeDeleted",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_BuildSystem.Shared.DTO.Job_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_BuildSystem.Shared.DTO.Job_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Jobs"
        ],
        "deprecated": false,
        "description": "Gets a collection of Jobs. When successful, the response is a PagedResponse of Jobs.\r\n            If unsuccessful, an appropriate ApiError is returned. \r\n            ///",
        "operationId": "Jobs_GetJobs",
        "summary": "Get Jobs"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Jobs"
        ],
        "deprecated": false,
        "description": "Creates a Job.  The body of the POST is the Job to create.  The JobID will be assigned on\r\n            creation of the Job.  When successful, the response is the JobID.  If unsuccessful, an \r\n            appropriate ApiError is returned.",
        "operationId": "Jobs_PostJob",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Job"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Job"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Job"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Job"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Job"
              }
            }
          },
          "description": "The job to create.  The JobID will be assigned on creation of the Job.",
          "required": true
        },
        "summary": "Create a Job"
      }
    },
    "/api/v2/jobs/{jobID}": {
      "delete": {
        "parameters": [
          {
            "description": "The id of the job to delete",
            "in": "path",
            "name": "jobID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Jobs"
        ],
        "deprecated": false,
        "description": "Deletes a Job. When successful, the response is empty.  If unsuccessful, an appropriate\r\n            ApiError is returned.",
        "operationId": "Jobs_DeleteJob",
        "summary": "Mark the delete flag for the Job"
      },
      "get": {
        "parameters": [
          {
            "description": "The ID of the Job to get.",
            "in": "path",
            "name": "jobID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Does it include deleted job, or not",
            "in": "query",
            "name": "isIncludeDeleted",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Job"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Job"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Job"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Job"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Jobs"
        ],
        "deprecated": false,
        "description": "Gets a Job by ID. When successful, the response is the requested Job.\r\n            If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "Jobs_GetJob",
        "summary": "Get a Job by ID"
      },
      "put": {
        "parameters": [
          {
            "description": "The id of the job to update",
            "in": "path",
            "name": "jobID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Jobs"
        ],
        "deprecated": false,
        "description": "Updates a Job.  The body of the PUT is the updated Job.  When successful, the response is empty.\r\n            If unsuccessful, an appropriate ApiError is returned.",
        "operationId": "Jobs_PutJob",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Job"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Job"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Job"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Job"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Job"
              }
            }
          },
          "description": "The updated job",
          "required": true
        },
        "summary": "Update a Job"
      }
    },
    "/api/v2/steps": {
      "get": {
        "parameters": [
          {
            "description": "Optional. The page limit.  If not specified, the default page limit is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Optional. The page offset.  If not specified, the default page offset is 0.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Does it include deleted step, or not",
            "in": "query",
            "name": "includeDeleted",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_BuildSystem.Shared.DTO.Step_"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.PagedResponse_BuildSystem.Shared.DTO.Step_"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Steps"
        ],
        "deprecated": false,
        "description": "Gets a collection of Steps. When successful, the response is a PagedResponse of Steps.\r\n            If unsuccessful, an appropriate ApiError is returned.  Steps.Read permission is required.",
        "operationId": "Steps_GetSteps",
        "summary": "Get Steps"
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "text/xml": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Steps"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Steps_PostStep",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Step"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Step"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Step"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Step"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Step"
              }
            }
          },
          "description": "The step to create",
          "required": true
        },
        "summary": "Create a Step"
      }
    },
    "/api/v2/steps/{stepID}": {
      "get": {
        "parameters": [
          {
            "description": "The ID of the Step to get.",
            "in": "path",
            "name": "stepID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Does it include deleted step, or not",
            "in": "query",
            "name": "isIncludeDeleted",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Step"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Step"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Step"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Step"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Steps"
        ],
        "deprecated": false,
        "description": "Gets a Step by ID. When successful, the response is the requested Step.\r\n            If unsuccessful, an appropriate ApiError is returned.  Steps.Read permission is required.",
        "operationId": "Steps_GetStep",
        "summary": "Get a Step by ID"
      },
      "put": {
        "parameters": [
          {
            "description": "The step ID of the step to update",
            "in": "path",
            "name": "stepID",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/API.Models.ApiError"
                }
              }
            },
            "description": "API Error Response"
          }
        },
        "tags": [
          "Steps"
        ],
        "deprecated": false,
        "description": "No Documentation Found.",
        "operationId": "Steps_PutStep",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Step"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Step"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Step"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Step"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Step"
              }
            }
          },
          "description": "The updated step",
          "required": true
        },
        "summary": "Update a Step"
      }
    }
  },
  "components": {
    "requestBodies": {
      "API.Models.User": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/API.Models.User"
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "$ref": "#/components/schemas/API.Models.User"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/API.Models.User"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/API.Models.User"
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/API.Models.User"
            }
          }
        },
        "description": "The user",
        "required": true
      },
      "AuthorizationCodes.Shared.Models.AuthorizationCodeDefinition": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCodeDefinition"
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCodeDefinition"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCodeDefinition"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCodeDefinition"
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCodeDefinition"
            }
          }
        },
        "description": "An authorization code definition.",
        "required": true
      },
      "AuthorizationCodes.Shared.Models.Category": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.Category"
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.Category"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.Category"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.Category"
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.Category"
            }
          }
        },
        "description": "An authorization category.",
        "required": true
      },
      "ContentSubmission.Shared.BusinessEntities.ContentDefinitionAttributeArray": {
        "content": {
          "application/json": {
            "schema": {
              "items": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinitionAttribute"
              },
              "type": "array"
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "items": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinitionAttribute"
              },
              "type": "array"
            }
          },
          "application/xml": {
            "schema": {
              "items": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinitionAttribute"
              },
              "type": "array"
            }
          },
          "text/json": {
            "schema": {
              "items": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinitionAttribute"
              },
              "type": "array"
            }
          },
          "text/xml": {
            "schema": {
              "items": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinitionAttribute"
              },
              "type": "array"
            }
          }
        },
        "required": true
      },
      "ContentSubmission.Shared.BusinessEntities.ContentSubmissionAttributeArray": {
        "content": {
          "application/json": {
            "schema": {
              "items": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionAttribute"
              },
              "type": "array"
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "items": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionAttribute"
              },
              "type": "array"
            }
          },
          "application/xml": {
            "schema": {
              "items": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionAttribute"
              },
              "type": "array"
            }
          },
          "text/json": {
            "schema": {
              "items": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionAttribute"
              },
              "type": "array"
            }
          },
          "text/xml": {
            "schema": {
              "items": {
                "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionAttribute"
              },
              "type": "array"
            }
          }
        },
        "required": true
      },
      "ContentSubmission.Shared.BusinessEntities.ContentSubmissionType": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionType"
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionType"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionType"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionType"
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionType"
            }
          }
        },
        "description": "The Content Submission Type",
        "required": true
      },
      "GlobalResources.Shared.Models.Language": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GlobalResources.Shared.Models.Language"
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "$ref": "#/components/schemas/GlobalResources.Shared.Models.Language"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/GlobalResources.Shared.Models.Language"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/GlobalResources.Shared.Models.Language"
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/GlobalResources.Shared.Models.Language"
            }
          }
        },
        "required": true
      },
      "GlobalResources.Shared.Models.TranslationRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationRequest"
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationRequest"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationRequest"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationRequest"
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationRequest"
            }
          }
        },
        "required": true
      },
      "GlobalResources.Shared.Models.TranslationSetAttribute": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetAttribute"
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetAttribute"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetAttribute"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetAttribute"
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetAttribute"
            }
          }
        },
        "required": true
      },
      "GlobalResources.Shared.Models.TranslationSetAttributeArray": {
        "content": {
          "application/json": {
            "schema": {
              "items": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetAttribute"
              },
              "type": "array"
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "items": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetAttribute"
              },
              "type": "array"
            }
          },
          "application/xml": {
            "schema": {
              "items": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetAttribute"
              },
              "type": "array"
            }
          },
          "text/json": {
            "schema": {
              "items": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetAttribute"
              },
              "type": "array"
            }
          },
          "text/xml": {
            "schema": {
              "items": {
                "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetAttribute"
              },
              "type": "array"
            }
          }
        },
        "required": true
      },
      "OASSupport.Shared.Models.TranslationKey": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OASSupport.Shared.Models.TranslationKey"
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "$ref": "#/components/schemas/OASSupport.Shared.Models.TranslationKey"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/OASSupport.Shared.Models.TranslationKey"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/OASSupport.Shared.Models.TranslationKey"
            }
          },
          "text/xml": {
            "schema": {
              "$ref": "#/components/schemas/OASSupport.Shared.Models.TranslationKey"
            }
          }
        },
        "required": true
      },
      "UpdateSystem.Models.UpdateGroupSubscriptionArray": {
        "content": {
          "application/json": {
            "schema": {
              "items": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupSubscription"
              },
              "type": "array"
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "items": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupSubscription"
              },
              "type": "array"
            }
          },
          "application/xml": {
            "schema": {
              "items": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupSubscription"
              },
              "type": "array"
            }
          },
          "text/json": {
            "schema": {
              "items": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupSubscription"
              },
              "type": "array"
            }
          },
          "text/xml": {
            "schema": {
              "items": {
                "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupSubscription"
              },
              "type": "array"
            }
          }
        },
        "required": true
      }
    },
    "schemas": {
      "AGCOPowerServices.Models.ECU": {
        "description": "An AGCO Power ECU",
        "properties": {
          "ActivationCode": {
            "description": "The code used to activate the ECU. May not be modified. Returned only on activation.",
            "format": "byte",
            "type": "string"
          },
          "DamagedDescription": {
            "description": "A description why the ECU cannot be deactivated.",
            "pattern": "^[a-zA-Z0-9]{0,4096}$",
            "type": "string"
          },
          "EngineSerialNumber": {
            "description": "The serial number of the ECU\u2019s engine",
            "pattern": "(^[A-Z][0-9]+$)|(^[ABCDEFGHJKLMNPRSTVWX1-9][5CMBL][ED][0-5][0-9][0-7][0-9][0-9][0-9]$)",
            "type": "string"
          },
          "ReplacesECUSerialNumber": {
            "description": "The serial number of the ECU that this ECU replaces. Required if activating an ECU..",
            "pattern": "^0?\\d{23}$",
            "type": "string"
          },
          "SerialNumber": {
            "description": "The serial number of the ECU",
            "pattern": "^0?\\d{23}$",
            "type": "string"
          },
          "State": {
            "description": "The state of the ECU",
            "enum": [
              "Active",
              "Inactive",
              "Damaged"
            ],
            "type": "string"
          }
        },
        "required": [
          "SerialNumber",
          "EngineSerialNumber",
          "State"
        ],
        "type": "object"
      },
      "AGCOPowerServices.Models.ProductionData": {
        "description": "Production data for an AGCO Power engine.",
        "properties": {
          "DataType": {
            "description": "Type of data. Valid types are (but not limited to)\r\n            'PowerCalibration'",
            "type": "string"
          },
          "DataValues": {
            "description": "Raw values of the calibration data",
            "format": "byte",
            "type": "string"
          }
        },
        "required": [
          "DataType",
          "DataValues"
        ],
        "type": "object"
      },
      "AGCOPowerServices.Models.UserStatus": {
        "description": "Status of a voucher in the AGCO Power system",
        "properties": {
          "DealerCode": {
            "description": "The dealer code of the voucher",
            "type": "string"
          },
          "State": {
            "description": "The state of the voucher",
            "enum": [
              "Active",
              "Inactive",
              "None"
            ],
            "type": "string"
          },
          "VoucherCode": {
            "description": "The voucher code",
            "type": "string"
          }
        },
        "required": [
          "VoucherCode",
          "DealerCode"
        ],
        "type": "object"
      },
      "API.IPagedResponse_AuthorizationCodes.Shared.Models.AuthorizationCodeDefinition_": {
        "properties": {
          "Entities": {
            "items": {
              "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCodeDefinition"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "API.IPagedResponse_AuthorizationCodes.Shared.Models.AuthorizationCode_": {
        "properties": {
          "Entities": {
            "items": {
              "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCode"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "API.IPagedResponse_AuthorizationCodes.Shared.Models.AuthorizationContactInformation_": {
        "properties": {
          "Entities": {
            "items": {
              "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationContactInformation"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "API.IPagedResponse_AuthorizationCodes.Shared.Models.CategoryUserReport_": {
        "properties": {
          "Entities": {
            "items": {
              "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.CategoryUserReport"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "API.IPagedResponse_AuthorizationCodes.Shared.Models.Category_": {
        "properties": {
          "Entities": {
            "items": {
              "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.Category"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "API.IPagedResponse_GlobalResources.Shared.Models.FileDownload_": {
        "properties": {
          "Entities": {
            "items": {
              "$ref": "#/components/schemas/GlobalResources.Shared.Models.FileDownload"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "API.IPagedResponse_GlobalResources.Shared.Models.GlobalImageCategory_": {
        "properties": {
          "Entities": {
            "items": {
              "$ref": "#/components/schemas/GlobalResources.Shared.Models.GlobalImageCategory"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "API.IPagedResponse_GlobalResources.Shared.Models.GlobalImage_": {
        "properties": {
          "Entities": {
            "items": {
              "$ref": "#/components/schemas/GlobalResources.Shared.Models.GlobalImage"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "API.IPagedResponse_GlobalResources.Shared.Models.Language_": {
        "properties": {
          "Entities": {
            "items": {
              "$ref": "#/components/schemas/GlobalResources.Shared.Models.Language"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "API.IPagedResponse_GlobalResources.Shared.Models.StringDefinition_": {
        "properties": {
          "Entities": {
            "items": {
              "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringDefinition"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "API.IPagedResponse_GlobalResources.Shared.Models.StringTranslation_": {
        "properties": {
          "Entities": {
            "items": {
              "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringTranslation"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "API.IPagedResponse_GlobalResources.Shared.Models.TranslationRequest_": {
        "properties": {
          "Entities": {
            "items": {
              "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationRequest"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "API.IPagedResponse_GlobalResources.Shared.Models.TranslationSetAttribute_": {
        "properties": {
          "Entities": {
            "items": {
              "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetAttribute"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "API.IPagedResponse_GlobalResources.Shared.Models.TranslationSetSourceString_": {
        "properties": {
          "Entities": {
            "items": {
              "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetSourceString"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "API.IPagedResponse_GlobalResources.Shared.Models.TranslationSetString_": {
        "properties": {
          "Entities": {
            "items": {
              "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetString"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "API.IPagedResponse_GlobalResources.Shared.Models.TranslationSet_": {
        "properties": {
          "Entities": {
            "items": {
              "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSet"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "API.IPagedResponse_OASSupport.Shared.Models.TranslationKey_": {
        "properties": {
          "Entities": {
            "items": {
              "$ref": "#/components/schemas/OASSupport.Shared.Models.TranslationKey"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "API.Models.ApiError": {
        "properties": {
          "DeveloperMessage": {
            "type": "string"
          },
          "ErrorCode": {
            "format": "int32",
            "type": "integer"
          },
          "MoreInfo": {
            "type": "string"
          },
          "UserMessage": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "API.Models.AuthenticatedUser": {
        "properties": {
          "Email": {
            "description": "The user's email address",
            "type": "string"
          },
          "MACId": {
            "description": "The MAC identifier to use for API access",
            "type": "string"
          },
          "MACToken": {
            "description": "The MAC token to use for API access",
            "type": "string"
          },
          "Name": {
            "description": "The user's name",
            "type": "string"
          },
          "Token": {
            "description": "The token to use for API access",
            "type": "string"
          },
          "UserID": {
            "description": "The user ID",
            "format": "int32",
            "type": "integer"
          },
          "Username": {
            "description": "The username used for authentication",
            "type": "string"
          }
        },
        "type": "object"
      },
      "API.Models.Credentials": {
        "properties": {
          "BearerAction": {
            "description": "The action to perform on the bearer token. Optional. Defaults to \u2018None\u2019.",
            "enum": [
              "None",
              "Reset",
              "Disable"
            ],
            "type": "string"
          },
          "MACAction": {
            "description": "The action to perform on the MAC token. Optional. Defaults to \u2018None\u2019.",
            "enum": [
              "None",
              "Reset",
              "Disable"
            ],
            "type": "string"
          },
          "password": {
            "description": "A secret word or phrase that must be used to gain admission",
            "type": "string"
          },
          "username": {
            "description": "A unique ID a user needs to login with",
            "type": "string"
          }
        },
        "required": [
          "username",
          "password"
        ],
        "type": "object"
      },
      "API.Models.Log": {
        "properties": {
          "ID": {
            "type": "string"
          },
          "Message": {
            "type": "string"
          },
          "TimeStamp": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "API.Models.Notification": {
        "properties": {
          "CC_Addresses": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "IsBodyHtml": {
            "type": "boolean"
          },
          "MessageBody": {
            "type": "string"
          },
          "Subject": {
            "type": "string"
          },
          "To_Addresses": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "To_Addresses",
          "Subject",
          "MessageBody",
          "IsBodyHtml"
        ],
        "type": "object"
      },
      "API.Models.PasswordReset": {
        "properties": {
          "NewPassword": {
            "description": "The new password",
            "type": "string"
          },
          "Token": {
            "description": "The password reset token",
            "type": "string"
          }
        },
        "required": [
          "Token",
          "NewPassword"
        ],
        "type": "object"
      },
      "API.Models.PasswordResetRequest": {
        "properties": {
          "ParameterName": {
            "description": "The query string parameter name to use for supplying the password reset token",
            "type": "string"
          },
          "Url": {
            "description": "The URL to direct the user to reset the password.",
            "type": "string"
          },
          "Username": {
            "description": "The username to reset the password for",
            "type": "string"
          }
        },
        "required": [
          "Username",
          "Url",
          "ParameterName"
        ],
        "type": "object"
      },
      "API.Models.Permission": {
        "properties": {
          "DataDescription": {
            "description": "Description of data to be provided with Role Authorization",
            "type": "string"
          },
          "DataRequired": {
            "description": "Indicates if data is required or optional",
            "enum": [
              "Yes",
              "No",
              "Optional"
            ],
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "Id": {
            "description": "The identifier of the permission.",
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "description": "The name of the permission.",
            "type": "string"
          }
        },
        "required": [
          "Name",
          "DataRequired"
        ],
        "type": "object"
      },
      "API.Models.Role": {
        "description": "Defines an API Role",
        "properties": {
          "Description": {
            "description": "Role description",
            "type": "string"
          },
          "Id": {
            "description": "The role's identifier.",
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "description": "The name of the role. Must be alpha-numeric strings separated by a period (.).",
            "pattern": "^[0-9a-zA-Z]*?[a-zA-Z]+[0-9a-zA-Z]*$",
            "type": "string"
          }
        },
        "required": [
          "Name",
          "Description"
        ],
        "type": "object"
      },
      "API.Models.RolePermissionChange": {
        "description": "Change to the Permissions that a Role is given.",
        "properties": {
          "Action": {
            "description": "The action to take.",
            "enum": [
              "Grant",
              "Revoke"
            ],
            "type": "string"
          },
          "Permission": {
            "description": "The name of the permission to grant or revoke.",
            "type": "string"
          }
        },
        "required": [
          "Permission",
          "Action"
        ],
        "type": "object"
      },
      "API.Models.RoleUserChange": {
        "properties": {
          "Action": {
            "description": "The action to take with the user",
            "enum": [
              "Grant",
              "Revoke"
            ],
            "type": "string"
          },
          "Id": {
            "description": "The Id of the User",
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "Id",
          "Action"
        ],
        "type": "object"
      },
      "API.Models.TokenOptions": {
        "properties": {
          "BearerAction": {
            "description": "The action to perform on the bearer token. Optional. Defaults to \u2018None\u2019.",
            "enum": [
              "None",
              "Reset",
              "Disable"
            ],
            "type": "string"
          },
          "MACAction": {
            "description": "The action to perform on the MAC token. Optional. Defaults to \u2018None\u2019.",
            "enum": [
              "None",
              "Reset",
              "Disable"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "API.Models.User": {
        "properties": {
          "ChangePassword": {
            "description": "Never Returned.  When changing a user's password, this field must contain the new password.",
            "type": "string"
          },
          "Email": {
            "description": "The user's email address",
            "type": "string"
          },
          "Name": {
            "description": "The user's name",
            "type": "string"
          },
          "Password": {
            "description": "Never Returned.  Required when creating a new user or updating a user.  When changing a user's password this field must contain the current password.",
            "type": "string"
          },
          "UserID": {
            "description": "The user ID",
            "format": "int32",
            "type": "integer"
          },
          "Username": {
            "description": "The username used for authentication",
            "type": "string"
          }
        },
        "type": "object"
      },
      "API.Models.UserEffectivePermission": {
        "properties": {
          "PermissionId": {
            "format": "int32",
            "type": "integer"
          },
          "PermissionName": {
            "type": "string"
          },
          "UserID": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "API.Models.UserRoleChange": {
        "properties": {
          "Action": {
            "description": "The action to take with the role",
            "enum": [
              "Grant",
              "Revoke"
            ],
            "type": "string"
          },
          "Name": {
            "description": "The name of the role",
            "type": "string"
          }
        },
        "required": [
          "Name",
          "Action"
        ],
        "type": "object"
      },
      "API.PagedResponseMetadata": {
        "description": "Metadata for the paged response",
        "properties": {
          "Limit": {
            "description": "The number of entities this paged response is limited to.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "Offset": {
            "description": "The number of entities prior to this page of items.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "TotalCount": {
            "description": "The total number of entities matching the request.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          }
        },
        "required": [
          "TotalCount",
          "Limit",
          "Offset"
        ],
        "type": "object"
      },
      "API.PagedResponse_API.Models.Log_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/API.Models.Log"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_API.Models.Permission_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/API.Models.Permission"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_API.Models.Role_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/API.Models.Role"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_API.Models.UserEffectivePermission_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/API.Models.UserEffectivePermission"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_API.Models.User_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/API.Models.User"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_BuildSystem.Shared.DTO.ActivityRun_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRun"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_BuildSystem.Shared.DTO.Activity_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Activity"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_BuildSystem.Shared.DTO.Agent_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Agent"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_BuildSystem.Shared.DTO.JobRun_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/BuildSystem.Shared.DTO.JobRun"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_BuildSystem.Shared.DTO.Job_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Job"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_BuildSystem.Shared.DTO.Step_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Step"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_Communication.Models.FileUploadIndexField_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/Communication.Models.FileUploadIndexField"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_Communication.Models.FileUploadType_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/Communication.Models.FileUploadType"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_Communication.Models.FileUpload_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/Communication.Models.FileUpload"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_ContentSubmission.Shared.BusinessEntities.ContentDefinitionAttribute_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinitionAttribute"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_ContentSubmission.Shared.BusinessEntities.ContentDefinition_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinition"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_ContentSubmission.Shared.BusinessEntities.ContentReleaseVersion_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentReleaseVersion"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_ContentSubmission.Shared.BusinessEntities.ContentSubmissionAttribute_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionAttribute"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_ContentSubmission.Shared.BusinessEntities.ContentSubmission_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmission"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_ContentSubmission.Shared.BusinessEntities.Release_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.Release"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_ContentSubmission.Shared.BusinessEntities.UserContentDefinition_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.UserContentDefinition"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_DealerDB.Models.Dealer_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/DealerDB.Models.Dealer"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_DealerDB.Models.DealersPerCountry_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/DealerDB.Models.DealersPerCountry"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_DealerDB.Models.License_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/DealerDB.Models.License"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_DealerDB.Models.VoucherHistory_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/DealerDB.Models.VoucherHistory"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_DealerDB.Models.Voucher_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/DealerDB.Models.Voucher"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_UpdateSystem.Models.AvailableUpdateGroupSubscription_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/UpdateSystem.Models.AvailableUpdateGroupSubscription"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_UpdateSystem.Models.Bundle_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/UpdateSystem.Models.Bundle"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_UpdateSystem.Models.ClientStatus_UpdateSystem.Models.PagedClientStatusMetadata_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/UpdateSystem.Models.ClientStatus"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/UpdateSystem.Models.PagedClientStatusMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_UpdateSystem.Models.Client_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/UpdateSystem.Models.Client"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_UpdateSystem.Models.PackageStatusSummary_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/UpdateSystem.Models.PackageStatusSummary"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_UpdateSystem.Models.PackageTypeIDtoBundle_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/UpdateSystem.Models.PackageTypeIDtoBundle"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_UpdateSystem.Models.PackageType_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/UpdateSystem.Models.PackageType"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_UpdateSystem.Models.Package_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/UpdateSystem.Models.Package"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_UpdateSystem.Models.PriorityPackage_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/UpdateSystem.Models.PriorityPackage"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_UpdateSystem.Models.UpdateGroupClientRelationship_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupClientRelationship"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_UpdateSystem.Models.UpdateGroupSubscription_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroupSubscription"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "API.PagedResponse_UpdateSystem.Models.UpdateGroup_": {
        "description": "A response containing a page of results and metadata concerning the results",
        "properties": {
          "Entities": {
            "description": "The set of entities that make up this page.",
            "items": {
              "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroup"
            },
            "readOnly": true,
            "type": "array"
          },
          "Metadata": {
            "$ref": "#/components/schemas/API.PagedResponseMetadata",
            "description": "Metadata about this paged response",
            "readOnly": true
          }
        },
        "required": [
          "Metadata",
          "Entities"
        ],
        "type": "object"
      },
      "AuthorizationCodes.Shared.Models.AuthorizationCode": {
        "description": "Represents the model containing an authorization code used to unlock a feature in machines and EDT",
        "properties": {
          "Code": {
            "description": "The code to enter to unlock a feature. Read only.",
            "type": "string"
          },
          "CreatedByUserID": {
            "description": "The ID of the user that created this authorization code. Read only.",
            "format": "int32",
            "type": "integer"
          },
          "CreatedDate": {
            "description": "A timestamp of when this code was created. Read only.",
            "format": "date-time",
            "type": "string"
          },
          "DataParameters": {
            "description": "The parameters and values contained as data in this authorization code. May not be updated.",
            "items": {
              "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.Parameter"
            },
            "type": "array"
          },
          "DefinitionID": {
            "description": "The id of the definition for this authorization code. May not be updated.",
            "type": "string"
          },
          "DeletedByUserID": {
            "description": "The ID of the user that deleted this authorization code. Read only.",
            "format": "int32",
            "type": "integer"
          },
          "DeletedDate": {
            "description": "A timestamp of when this authorization code was deleted. Read only.",
            "format": "date-time",
            "type": "string"
          },
          "EffectiveDate": {
            "description": "A date at which this code should begin being valid. Optional. Set on create only.",
            "format": "date-time",
            "type": "string"
          },
          "ID": {
            "description": "The identifier for the authorization code. Read only.",
            "format": "int32",
            "type": "integer"
          },
          "IsDeleted": {
            "description": "Indicates whether this code is deleted.",
            "type": "boolean"
          },
          "ValidationParameters": {
            "description": "The parameters and values used to validate this authorization code. May not be updated.",
            "items": {
              "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.Parameter"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AuthorizationCodes.Shared.Models.AuthorizationCodeDefinition": {
        "description": "Represents the model used to define how a type of authorization code is generated.",
        "properties": {
          "AuthorizationID": {
            "description": "The value used for securing codes generated.",
            "type": "string"
          },
          "CreatedByUserID": {
            "description": "The ID of the user that created this definition. Read only.",
            "format": "int32",
            "type": "integer"
          },
          "CreatedDate": {
            "description": "A timestamp of when this definition was created. Read only.",
            "format": "date-time",
            "type": "string"
          },
          "DataFields": {
            "description": "The defined fields to include in authorization codes generated from this definition. May not be updated.",
            "items": {
              "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.DataField"
            },
            "type": "array"
          },
          "DeletedByUserID": {
            "description": "The ID of the user that deleted this definition. Read only.",
            "format": "int32",
            "type": "integer"
          },
          "DeletedDate": {
            "description": "A timestamp of when this definition was deleted. Read only.",
            "format": "date-time",
            "type": "string"
          },
          "Description": {
            "description": "A description of this definition. May not be updated.",
            "type": "string"
          },
          "DurationAccuracy": {
            "description": "The number of bits used for timestamp verification. Defaults to 5. May not be updated.",
            "format": "int32",
            "type": "integer"
          },
          "DurationAmount": {
            "description": "The amount of duration for the specified duration unit used to calculate the Authorization Code. Defaults to 1. May not be updated.",
            "format": "int32",
            "type": "integer"
          },
          "DurationUnits": {
            "description": "The units of duration used to calculate the Authorization Code. Defaults to 'Days'. May not be updated.",
            "enum": [
              "Weeks",
              "Days",
              "Hours",
              "Minutes"
            ],
            "type": "string"
          },
          "HashLength": {
            "description": "The bit length of the hash data which will be used for the authorization code. Defaults to 20. May not be updated.",
            "format": "int32",
            "type": "integer"
          },
          "ID": {
            "description": "The ID of the authorization code definition. Read only.",
            "type": "string"
          },
          "IsDeleted": {
            "description": "Indicates whether this definition is enabled. True if generating codes is disabled.",
            "type": "boolean"
          },
          "Name": {
            "description": "The name of the authorization code definition. May not be updated.",
            "type": "string"
          },
          "RandomLength": {
            "description": "The bit length of random data which will be included in the authorization code.  This is necessary to allow creation of \"identical\" authorization codes containing the same timestamp. Defaults to 5. May not be updated.",
            "format": "int32",
            "type": "integer"
          },
          "ValidationFields": {
            "description": "The defined fields to verify when reading authorization codes generated from this definition. May not be updated.",
            "items": {
              "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.ValidationField"
            },
            "type": "array"
          }
        },
        "required": [
          "Name"
        ],
        "type": "object"
      },
      "AuthorizationCodes.Shared.Models.AuthorizationCodeUser": {
        "properties": {
          "Email": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "UserID": {
            "format": "int32",
            "type": "integer"
          },
          "Username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AuthorizationCodes.Shared.Models.AuthorizationContactInformation": {
        "properties": {
          "AuthorizationCodeID": {
            "description": "AuthorizationCode ID that the contact information ties into.",
            "format": "int32",
            "type": "integer"
          },
          "Code": {
            "description": "The authorization code. Read Only.",
            "type": "string"
          },
          "Contact": {
            "description": "Name of contact requesting an authorization code. Minimum length of 3 characters.",
            "type": "string"
          },
          "CreatedBy": {
            "description": "The name of the user that created this code. Read Only.",
            "type": "string"
          },
          "CreatedDate": {
            "description": "The date the authorization code was created.",
            "format": "date-time",
            "type": "string"
          },
          "DealerCode": {
            "description": "Dealer code that relates to the dealership. Minimum length of 3 characters.",
            "type": "string"
          },
          "Dealership": {
            "description": "Name of dealership. Minimum length of 3 characters.",
            "type": "string"
          },
          "DefinitionName": {
            "description": "The name of the definition used for generating this authorization code. Read Only.",
            "type": "string"
          },
          "Email": {
            "description": "Email of contact.",
            "type": "string"
          },
          "ID": {
            "description": "ID of authorizationContactInformation",
            "format": "int32",
            "type": "integer"
          },
          "Notes": {
            "description": "Optional notes used for internal use.",
            "type": "string"
          },
          "Phone": {
            "description": "Phone number of contact.",
            "type": "string"
          }
        },
        "required": [
          "AuthorizationCodeID",
          "Contact",
          "Dealership",
          "DealerCode",
          "Phone"
        ],
        "type": "object"
      },
      "AuthorizationCodes.Shared.Models.Category": {
        "description": "A category for Authorization Code Definitions",
        "properties": {
          "Description": {
            "description": "A description of the Category.",
            "type": "string"
          },
          "ID": {
            "description": "The ID of the Category.",
            "type": "string"
          },
          "Name": {
            "description": "The Name of the Category.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AuthorizationCodes.Shared.Models.CategoryUserReport": {
        "properties": {
          "Categories": {
            "items": {
              "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.Category"
            },
            "type": "array"
          },
          "User": {
            "$ref": "#/components/schemas/AuthorizationCodes.Shared.Models.AuthorizationCodeUser"
          }
        },
        "type": "object"
      },
      "AuthorizationCodes.Shared.Models.CodeValidationModel": {
        "properties": {
          "ExpirationDate": {
            "format": "date-time",
            "type": "string"
          },
          "IsValid": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "AuthorizationCodes.Shared.Models.DataField": {
        "properties": {
          "DigitsPrecision": {
            "description": "The number of decimal digits to be used by this data field. Required only by the 'Float' data type. Must be in range 1 - 15.",
            "format": "int32",
            "type": "integer"
          },
          "MaxExponent": {
            "description": "The maximum exponent to be used by this data field. Required only by the 'Float' data type. May not be greater than 307.",
            "format": "int32",
            "type": "integer"
          },
          "MaxValue": {
            "description": "The maximum value that can be represented by this data field. Required only by the 'Decimal' data type.",
            "format": "double",
            "type": "number"
          },
          "MinExponent": {
            "description": "The minimum exponent to be used by this data field. Required only by the 'Float' data type. May not be less than -292.",
            "format": "int32",
            "type": "integer"
          },
          "MinValue": {
            "description": "The minimum value that can be represented by this data field. Required only by the 'Decimal' data type.",
            "format": "double",
            "type": "number"
          },
          "Name": {
            "description": "The name of the field.",
            "type": "string"
          },
          "ScaleFactor": {
            "description": "The resolution of values that can be represented by this data field. The base value is multiplied by this to compute the final value. Required only by the 'Decimal' data type.",
            "format": "double",
            "type": "number"
          },
          "Signed": {
            "description": "Indicates whether this value is signed. Required only by the 'Float' data type.",
            "type": "boolean"
          },
          "Type": {
            "description": "The type of this data field.",
            "enum": [
              "Boolean",
              "Decimal",
              "Float",
              "VariableLengthByteArray"
            ],
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Name"
        ],
        "type": "object"
      },
      "AuthorizationCodes.Shared.Models.Parameter": {
        "description": "A parameter used to create an authorization code.",
        "properties": {
          "Name": {
            "description": "The name of the parameter. May not be updated.",
            "type": "string"
          },
          "Value": {
            "description": "The value of the parameter. May not be updated.",
            "type": "string"
          }
        },
        "required": [
          "Name",
          "Value"
        ],
        "type": "object"
      },
      "AuthorizationCodes.Shared.Models.ValidationField": {
        "properties": {
          "Name": {
            "description": "The name of the field.",
            "type": "string"
          },
          "Type": {
            "description": "The type for this validation field.",
            "enum": [
              "Boolean",
              "Float",
              "Int",
              "StringCaseInsensitive",
              "StringCaseSensitive"
            ],
            "type": "string"
          }
        },
        "required": [
          "Type",
          "Name"
        ],
        "type": "object"
      },
      "BuildSystem.Shared.DTO.Activity": {
        "description": "A DTO for an IActivity",
        "properties": {
          "ActivityID": {
            "description": "The ID of the activity",
            "format": "int32",
            "type": "integer"
          },
          "Deleted": {
            "description": "",
            "type": "boolean"
          },
          "Name": {
            "description": "The name of the activity",
            "type": "string"
          },
          "Parameters": {
            "description": "The parameters for this activity",
            "items": {
              "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Parameter"
            },
            "readOnly": true,
            "type": "array"
          },
          "Steps": {
            "description": "The steps which are performed for this activity",
            "items": {
              "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityStep"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "BuildSystem.Shared.DTO.ActivityRun": {
        "description": "A DTO for an IActivityRun",
        "properties": {
          "ActivityRunID": {
            "description": "The identifier for the ActivityRun",
            "format": "int32",
            "type": "integer"
          },
          "EndDate": {
            "description": "Read Only. The UTC date and time when the activity completed",
            "format": "date-time",
            "type": "string"
          },
          "JobActivityID": {
            "description": "Read Only. The ID of the Job Activity that defines this activity run",
            "format": "int32",
            "type": "integer"
          },
          "JobRunID": {
            "description": "Read Only. The ID of the JobRun under which this ActivityRun is executing",
            "format": "int32",
            "type": "integer"
          },
          "Parameters": {
            "description": "The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.",
            "items": {
              "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ParameterValue"
            },
            "readOnly": true,
            "type": "array"
          },
          "StartDate": {
            "description": "Read Only. The UTC date and time when the activity started",
            "format": "date-time",
            "type": "string"
          },
          "Status": {
            "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRunStatus",
            "description": "The status of this ActivityRun"
          },
          "Steps": {
            "description": "Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep",
            "items": {
              "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityStep"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "required": [
          "Status"
        ],
        "type": "object"
      },
      "BuildSystem.Shared.DTO.ActivityRunStatus": {
        "description": "A DTO for an IActivityRunStatus",
        "properties": {
          "CurrentStep": {
            "description": "The activity step currently executing, indicated by numeric order",
            "format": "int32",
            "type": "integer"
          },
          "Status": {
            "description": "The status of the ActivityRun",
            "enum": [
              "Ready",
              "InProgress",
              "Succeeded",
              "Cancelled",
              "Failed"
            ],
            "type": "string"
          },
          "StepProgress": {
            "description": "The percent progress from the currently executing step.  This value shall be null if progress is not available",
            "format": "int32",
            "type": "integer"
          },
          "StepStatus": {
            "description": "The status text from the currently executing step",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BuildSystem.Shared.DTO.ActivityStep": {
        "description": "A DTO for an IActivityStep",
        "properties": {
          "ActivityID": {
            "description": "The id of the activity this activity step belongs to",
            "format": "int32",
            "type": "integer"
          },
          "ActivityStepID": {
            "description": "The id of this activity step",
            "format": "int32",
            "type": "integer"
          },
          "ImplementationID": {
            "description": "The implementation id which is used to look up the step implementation",
            "type": "string"
          },
          "ParameterMappings": {
            "description": "The mapping of values from a source to be used for the step parameters",
            "items": {
              "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ParameterMapping"
            },
            "readOnly": true,
            "type": "array"
          },
          "RunOrder": {
            "description": "The order of this activity step relative to other activity steps",
            "format": "int32",
            "type": "integer"
          },
          "StepID": {
            "description": "The id of the step",
            "format": "int32",
            "type": "integer"
          },
          "StepName": {
            "description": "The name of the step",
            "type": "string"
          },
          "UseConfig": {
            "description": "Indicates the configuration for the ActivityStep to use at runtime.  The build agent must provide this configuration",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BuildSystem.Shared.DTO.Agent": {
        "description": "A DTO for an IAgent",
        "properties": {
          "AgentID": {
            "description": "The id of the Agent",
            "format": "int32",
            "type": "integer"
          },
          "KeepAliveInterval": {
            "description": "The 'Heartbeat Interval' used by the Build Agent.",
            "format": "int32",
            "type": "integer"
          },
          "MachineName": {
            "description": "The machine name of the computer the agent is running on",
            "type": "string"
          },
          "Status": {
            "$ref": "#/components/schemas/BuildSystem.Shared.DTO.AgentStatus",
            "description": "The agent status."
          },
          "StepConfigurations": {
            "description": "The agent's step configurations",
            "items": {
              "$ref": "#/components/schemas/BuildSystem.Shared.DTO.StepConfiguration"
            },
            "readOnly": true,
            "type": "array"
          },
          "UserID": {
            "description": "The UserID of the Agent",
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "UserID",
          "MachineName",
          "Status",
          "KeepAliveInterval"
        ],
        "type": "object"
      },
      "BuildSystem.Shared.DTO.AgentStatus": {
        "description": "A DTO for an IAgentStatus",
        "properties": {
          "LastStatusUpdate": {
            "description": "ReadOnly. The UTC date and time of the last status update",
            "format": "date-time",
            "type": "string"
          },
          "Online": {
            "description": "Indicates if the agent is online",
            "type": "boolean"
          }
        },
        "required": [
          "Online"
        ],
        "type": "object"
      },
      "BuildSystem.Shared.DTO.Job": {
        "description": "A DTO for an IJob",
        "properties": {
          "Activities": {
            "description": "The activities which are performed for the job",
            "items": {
              "$ref": "#/components/schemas/BuildSystem.Shared.DTO.JobActivity"
            },
            "readOnly": true,
            "type": "array"
          },
          "Deleted": {
            "description": "Indicates if the job has been deleted.",
            "type": "boolean"
          },
          "JobID": {
            "description": "The ID of the job",
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "description": "The name of the job",
            "type": "string"
          },
          "Parameters": {
            "description": "The parameters for the job",
            "items": {
              "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Parameter"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "BuildSystem.Shared.DTO.JobActivity": {
        "description": "A DTO for an IJobActivity",
        "properties": {
          "ActivityID": {
            "description": "The ID of the activity to be run as part of the job",
            "format": "int32",
            "type": "integer"
          },
          "JobActivityID": {
            "description": "The ID of this job activity",
            "format": "int32",
            "type": "integer"
          },
          "JobID": {
            "description": "The ID of the job this job activity belongs to",
            "format": "int32",
            "type": "integer"
          },
          "ParameterMappings": {
            "description": "The mapping of values from a source to be used for the activity parameters",
            "items": {
              "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ParameterMapping"
            },
            "readOnly": true,
            "type": "array"
          },
          "RunOrder": {
            "description": "The order of this job activity relative to others in the job",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "BuildSystem.Shared.DTO.JobRun": {
        "description": "A DTO for an IJobRun",
        "properties": {
          "ActivityRuns": {
            "description": "The activity runs belonging to this JobRun",
            "items": {
              "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ActivityRun"
            },
            "readOnly": true,
            "type": "array"
          },
          "EndDate": {
            "description": "The UTC date and time when the job completed",
            "format": "date-time",
            "type": "string"
          },
          "JobID": {
            "description": "The ID of the job that defines the run",
            "format": "int32",
            "type": "integer"
          },
          "JobRunID": {
            "description": "The ID of this JobRun",
            "format": "int32",
            "type": "integer"
          },
          "Parameters": {
            "description": "The parameters used for this run of the job",
            "items": {
              "$ref": "#/components/schemas/BuildSystem.Shared.DTO.ParameterValue"
            },
            "readOnly": true,
            "type": "array"
          },
          "StartDate": {
            "description": "The UTC date and time when the job started",
            "format": "date-time",
            "type": "string"
          },
          "Status": {
            "description": "The status of this JobRun",
            "enum": [
              "Ready",
              "InProgress",
              "Succeeded",
              "Cancelled",
              "Failed"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "BuildSystem.Shared.DTO.Parameter": {
        "description": "A DTO for an IParameter",
        "properties": {
          "Direction": {
            "description": "The parameter direction (Input or Output)",
            "enum": [
              "Input",
              "Output"
            ],
            "type": "string"
          },
          "Name": {
            "description": "The name of the parameter",
            "type": "string"
          },
          "Type": {
            "description": "The data type of the parameter",
            "enum": [
              "String",
              "Boolean",
              "Integer",
              "Float",
              "StringDictionary"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "BuildSystem.Shared.DTO.ParameterMapping": {
        "description": "A DTO for an IParameterMapping",
        "properties": {
          "Name": {
            "description": "The name of the parameter this mapping applies to",
            "type": "string"
          },
          "Source": {
            "description": "The source of the value.  The meaning of this value is determined by the source type.  When the source type is \u201cConstant\u201d then source is the value formatted as a string.  When the source type is \u201cVariable\u201d then the source is the name of the variable",
            "type": "string"
          },
          "SourceType": {
            "description": "The source type used for supplying the parameter",
            "enum": [
              "Constant",
              "Variable"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "BuildSystem.Shared.DTO.ParameterValue": {
        "description": "A DTO for an IParameterValue",
        "properties": {
          "Direction": {
            "description": "The parameter direction (Input or Output)",
            "enum": [
              "Input",
              "Output"
            ],
            "type": "string"
          },
          "Name": {
            "description": "The name of the parameter this value is for",
            "type": "string"
          },
          "Value": {
            "description": "The parameter value in string representation",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BuildSystem.Shared.DTO.Step": {
        "description": "Step",
        "properties": {
          "ConfigRequired": {
            "description": "Indicates if the step requires configuration values to be provided by the build agent",
            "type": "boolean"
          },
          "Deleted": {
            "description": "Read Only.  Indicates if the record is deleted.",
            "type": "boolean"
          },
          "Description": {
            "description": "A description of the step to be presented to a user",
            "type": "string"
          },
          "ImplementationID": {
            "description": "The implementation ID used to lookup the step implementation when it is executed",
            "type": "string"
          },
          "Name": {
            "description": "The name of the step",
            "type": "string"
          },
          "Parameters": {
            "description": "The parameters for this step",
            "items": {
              "$ref": "#/components/schemas/BuildSystem.Shared.DTO.Parameter"
            },
            "readOnly": true,
            "type": "array"
          },
          "StepID": {
            "description": "The ID of the step",
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "Name",
          "ConfigRequired",
          "ImplementationID"
        ],
        "type": "object"
      },
      "BuildSystem.Shared.DTO.StepConfiguration": {
        "description": "Step Configuration",
        "properties": {
          "Configurations": {
            "description": "The configuration names supported.  The configurations collection is empty for steps which do not require configuration.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "StepImplementationID": {
            "description": "The Implementation ID of the step this configuration is for",
            "type": "string"
          }
        },
        "required": [
          "StepImplementationID"
        ],
        "type": "object"
      },
      "BuildSystem.Shared.Interfaces.IActivityRun": {
        "description": "IActivityRun",
        "properties": {
          "ActivityRunID": {
            "description": "ActivityRunID",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "EndDate": {
            "description": "EndDate",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "JobActivityID": {
            "description": "JobActivityID",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "JobRunID": {
            "description": "JobRunID",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "Parameters": {
            "description": "Parameters",
            "items": {
              "$ref": "#/components/schemas/BuildSystem.Shared.Interfaces.IParameterValue"
            },
            "type": "array"
          },
          "StartDate": {
            "description": "StartDate",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "Status": {
            "$ref": "#/components/schemas/BuildSystem.Shared.Interfaces.IActivityRunStatus",
            "description": "Status"
          },
          "Steps": {
            "description": "Steps",
            "items": {
              "$ref": "#/components/schemas/BuildSystem.Shared.Interfaces.IActivityStep"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "BuildSystem.Shared.Interfaces.IActivityRunStatus": {
        "description": "Declares members of objects that communicate the progress of an \r\n            asynchronous activity run.",
        "properties": {
          "CurrentStep": {
            "description": "Gets or sets the number of the step the activity is currently running.",
            "format": "int32",
            "type": "integer"
          },
          "Status": {
            "description": "Gets or sets the status of the activity run.",
            "enum": [
              "Ready",
              "InProgress",
              "Succeeded",
              "Cancelled",
              "Failed"
            ],
            "type": "string"
          },
          "StepProgress": {
            "description": "Gets or sets a measurement of the current progress of the current step.",
            "format": "int32",
            "type": "integer"
          },
          "StepStatus": {
            "description": "Gets or sets a description of the current status of the currently \r\n            running step.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BuildSystem.Shared.Interfaces.IActivityStep": {
        "description": "IActivityStep",
        "properties": {
          "ActivityID": {
            "description": "ActivityID",
            "format": "int32",
            "type": "integer"
          },
          "ActivityStepID": {
            "description": "ActivityStepID",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ImplementationID": {
            "description": "Implementation ID",
            "readOnly": true,
            "type": "string"
          },
          "ParameterMappings": {
            "description": "ParameterMappings",
            "items": {
              "$ref": "#/components/schemas/BuildSystem.Shared.Interfaces.IParameterMapping"
            },
            "type": "array"
          },
          "RunOrder": {
            "description": "run order",
            "format": "int32",
            "type": "integer"
          },
          "StepID": {
            "description": "step id",
            "format": "int32",
            "type": "integer"
          },
          "StepName": {
            "description": "steo name",
            "readOnly": true,
            "type": "string"
          },
          "UseConfig": {
            "description": "UseConfig",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BuildSystem.Shared.Interfaces.IJobRun": {
        "description": "interface of JobRun",
        "properties": {
          "ActivityRuns": {
            "description": "ActivityRuns",
            "items": {
              "$ref": "#/components/schemas/BuildSystem.Shared.Interfaces.IActivityRun"
            },
            "type": "array"
          },
          "EndDate": {
            "description": "end date",
            "format": "date-time",
            "type": "string"
          },
          "JobID": {
            "description": "job id",
            "format": "int32",
            "type": "integer"
          },
          "JobRunID": {
            "description": "JobRunID",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "Parameters": {
            "description": "Parameters",
            "items": {
              "$ref": "#/components/schemas/BuildSystem.Shared.Interfaces.IParameterValue"
            },
            "readOnly": true,
            "type": "array"
          },
          "StartDate": {
            "description": "Start Date",
            "format": "date-time",
            "type": "string"
          },
          "Status": {
            "description": "status",
            "enum": [
              "Ready",
              "InProgress",
              "Succeeded",
              "Cancelled",
              "Failed"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "BuildSystem.Shared.Interfaces.IParameterMapping": {
        "description": "IParameterMapping",
        "properties": {
          "Name": {
            "description": "name",
            "type": "string"
          },
          "Source": {
            "description": "Source",
            "type": "string"
          },
          "SourceType": {
            "description": "SourceType",
            "enum": [
              "Constant",
              "Variable"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "BuildSystem.Shared.Interfaces.IParameterValue": {
        "description": "Declares members that must be implemented by parameter value objects.",
        "properties": {
          "Direction": {
            "description": "Gets or sets a value indicating whether the parameter value is an \r\n            input to the build part or an output from the build part.",
            "enum": [
              "Input",
              "Output"
            ],
            "type": "string"
          },
          "Name": {
            "description": "Gets or sets the name of the parameter.",
            "type": "string"
          },
          "Value": {
            "description": "Gets or sets the value of the parameter.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Communication.Models.FieldFilter": {
        "properties": {
          "Comparison": {
            "description": "Optional. The type of value comparison to apply.  Default is Equal.",
            "enum": [
              "Equal",
              "NotEqual",
              "LessThan",
              "LessThanOrEqual",
              "GreaterThan",
              "GreaterThanOrEqual",
              "In",
              "NotIn"
            ],
            "type": "string"
          },
          "Field": {
            "description": "The field to filter",
            "type": "string"
          },
          "Type": {
            "description": "Optional. The filter type. Default is HasFieldMatching.",
            "enum": [
              "HasFieldMatching",
              "HasIndexDataMatching",
              "DoesNotHaveIndexDataMatching"
            ],
            "type": "string"
          },
          "Value": {
            "description": "The value used with comparison to filter results. Do not use with \"Set\" comparisons",
            "type": "string"
          },
          "Values": {
            "description": "The set of values to use with comparison to filter results.  Use with \"Set\" comparisons.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "Field"
        ],
        "type": "object"
      },
      "Communication.Models.FileUpload": {
        "properties": {
          "CreatedDate": {
            "description": "The date the file was created",
            "format": "date-time",
            "type": "string"
          },
          "DealerID": {
            "description": "The Dearler ID",
            "type": "string"
          },
          "Description": {
            "description": "The description",
            "type": "string"
          },
          "Email": {
            "description": "The email address provided with the file upload",
            "type": "string"
          },
          "FileID": {
            "description": "The file ID",
            "type": "string"
          },
          "FileTypeID": {
            "description": "The File Type ID",
            "type": "string"
          },
          "IndexData": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The Index Data for the File Upload. \r\n            Fields without a value are omitted.\r\n            Index Data may not be included in the response if no index data was requested.",
            "type": "object"
          },
          "Name": {
            "description": "The name provided with the file upload",
            "type": "string"
          },
          "NodeID": {
            "description": "The node ID",
            "type": "string"
          },
          "Phone": {
            "description": "The phone number provided with the file upload",
            "type": "string"
          },
          "StoredData": {
            "additionalProperties": {
              "$ref": "#/components/schemas/System.Object"
            },
            "description": "The Stored Data for the File Upload. \r\n            Fields without a value are omitted.\r\n            Stored Data may not be included in the response if no stored data was requested.",
            "type": "object"
          },
          "SubmissionCode": {
            "description": "The submission code",
            "type": "string"
          },
          "UploadDate": {
            "description": "The date the file was uploaded",
            "format": "date-time",
            "type": "string"
          },
          "Version": {
            "description": "The EDT version",
            "type": "string"
          },
          "Voucher": {
            "description": "The voucher of the EDT instance",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Communication.Models.FileUploadIndexField": {
        "properties": {
          "Field": {
            "description": "The name of the file upload index field",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Communication.Models.FileUploadReportQuery": {
        "properties": {
          "FieldFilters": {
            "description": "Optional. Filter results by field values. Multiple filters are combined with 'AND' logic.",
            "items": {
              "$ref": "#/components/schemas/Communication.Models.FieldFilter"
            },
            "type": "array"
          },
          "IncludeIndexFields": {
            "description": "Optional. The index data fields to include in the results.  \r\n            By default any index data fields included in FieldFilters will be included.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "IncludeStoredDataFields": {
            "description": "Optional. The stored data fields to include in the results. \r\n            By default stored data fields are omitted in the result.\r\n            Limit must be 25 or less to return stored data fields.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "Limit": {
            "description": "Optional. Limit number of results returned. The default value is 10.",
            "format": "int32",
            "maximum": 25,
            "minimum": 1,
            "type": "integer"
          },
          "Offset": {
            "description": "Optional. Offset for the results returned. The default value is 0.",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Communication.Models.FileUploadType": {
        "properties": {
          "ID": {
            "description": "The file upload type ID",
            "type": "string"
          },
          "Name": {
            "description": "The name of the file upload type",
            "type": "string"
          },
          "NameStringId": {
            "description": "The string translation id of the file upload type",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContentSubmission.Shared.BusinessEntities.ContentDefinition": {
        "description": "The definition of the content for submission",
        "properties": {
          "Attributes": {
            "description": "Attributes of this ContentDefinition",
            "items": {
              "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinitionAttribute"
            },
            "type": "array"
          },
          "ContentDefinitionID": {
            "description": "The ID of this content definition.",
            "format": "int32",
            "type": "integer"
          },
          "Description": {
            "description": "The description used on the package type in the AGCO Update System",
            "type": "string"
          },
          "Name": {
            "description": "The name of this content. Name must be valid for Attribute on PackageType.",
            "type": "string"
          },
          "PackageTypeID": {
            "description": "Read Only. The ID of the package type used for this content.",
            "type": "string"
          },
          "TypeID": {
            "description": "The type of content.",
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "Description"
        ],
        "type": "object"
      },
      "ContentSubmission.Shared.BusinessEntities.ContentDefinitionAttribute": {
        "description": "An attribute of a definition of the content for submission",
        "properties": {
          "ContentDefinitionID": {
            "description": "The ID of the content definition to which this attribute belongs.",
            "format": "int32",
            "type": "integer"
          },
          "ID": {
            "description": "The ID of this attribute.",
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "description": "The name of this Attribute.",
            "pattern": "[a-zA-Z0-9]+",
            "type": "string"
          },
          "Value": {
            "description": "The value of this Attribute",
            "type": "string"
          }
        },
        "required": [
          "Name"
        ],
        "type": "object"
      },
      "ContentSubmission.Shared.BusinessEntities.ContentReleaseVersion": {
        "description": "ContentReleaseVersion class",
        "properties": {
          "ContentDefinitionID": {
            "description": "ContentDefinitionID",
            "format": "int32",
            "type": "integer"
          },
          "ContentReleaseID": {
            "description": "ContentReleaseID",
            "format": "int32",
            "type": "integer"
          },
          "Deleted": {
            "description": "deleted flag",
            "type": "boolean"
          },
          "PublisherUserID": {
            "description": "PublisherUser ID",
            "format": "int32",
            "type": "integer"
          },
          "ReleaseID": {
            "description": "rele4ase Id",
            "format": "int32",
            "type": "integer"
          },
          "TestReportUrl": {
            "description": "The URL at which test reports for this content can be found",
            "type": "string"
          },
          "UpdatedDate": {
            "description": "Updated Date",
            "format": "date-time",
            "type": "string"
          },
          "Version": {
            "description": "version",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ContentSubmission.Shared.BusinessEntities.ContentSubmission": {
        "description": "A content submission",
        "properties": {
          "Attributes": {
            "description": "Attributes of this ContentSubmission",
            "items": {
              "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentSubmissionAttribute"
            },
            "type": "array"
          },
          "BuildID": {
            "description": "ReadOnly. The ID of the Azure DevOps Build which will build the content package.",
            "format": "int32",
            "type": "integer"
          },
          "ContentDefinitionID": {
            "description": "The ID of the Content Definition.",
            "format": "int32",
            "type": "integer"
          },
          "ContentSubmissionID": {
            "description": "The ID of this Content Submission.",
            "format": "int32",
            "type": "integer"
          },
          "Definition": {
            "$ref": "#/components/schemas/ContentSubmission.Shared.BusinessEntities.ContentDefinition",
            "description": "The ContentDefinition for this ContentSubmission"
          },
          "JobRunID": {
            "description": "ReadOnly. The ID of the JobRun which will build the content package.",
            "format": "int32",
            "type": "integer"
          },
          "PackageID": {
            "description": "The ID of package generated by this content submission.",
            "type": "string"
          },
          "ReleaseNotes": {
            "description": "Release Notes for this ContentSubmission",
            "type": "string"
          },
          "Repository": {
            "description": "The SVN repository used as the source of this content submission",
            "type": "string"
          },
          "Revision": {
            "description": "The SVN revision used as the source of this content submission.",
            "format": "int32",
            "type": "integer"
          },
          "SubmissionDate": {
            "description": "Read Only. The UTC date and time the content submission was made.",
            "format": "date-time",
            "type": "string"
          },
          "UserID": {
            "description": "Read Only. The ID of the user who submitted the content",
            "format": "int32",
            "type": "integer"
          },
          "Version": {
            "description": "Optional.  The version number assigned to this Content Submission and the resulting Package.\r\n            If not provided, version shall be 1 if it is the first content submission for the \r\n            ContentDefinitionID otherwise it shall be the highest content submission version for the\r\n            specified ContentDefinitionID incremented by 1.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ContentSubmission.Shared.BusinessEntities.ContentSubmissionAttribute": {
        "description": "The definition of the content for submission",
        "properties": {
          "ContentSubmissionID": {
            "description": "The ID of the content submission to which this attribute belongs.",
            "format": "int32",
            "type": "integer"
          },
          "ID": {
            "description": "The ID of this attribute.",
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "description": "The name of this Attribute.",
            "pattern": "[a-zA-Z0-9]+",
            "type": "string"
          },
          "Value": {
            "description": "The value of this Attribute",
            "type": "string"
          }
        },
        "required": [
          "Name"
        ],
        "type": "object"
      },
      "ContentSubmission.Shared.BusinessEntities.ContentSubmissionType": {
        "description": "A type of content available for submission",
        "properties": {
          "AttributeTemplate": {
            "description": "A template for the Attribute from which to read the version of the package installed. The following placeholders are valid: {ContentDefinitionType}, {ContentDefinitionID}, {ContentDefinitionName}",
            "type": "string"
          },
          "BuildDefinitionID": {
            "description": "The ID of the Azure DevOps Build Definition for which to create a Build. Either 'BuildDefinitionID' or 'JobID' is required.",
            "format": "int32",
            "type": "integer"
          },
          "CategoryTemplate": {
            "description": "A template for the category from which to read the version of the package installed. The following placeholders are valid: {ContentDefinitionType}, {ContentDefinitionID}, {ContentDefinitionName}",
            "type": "string"
          },
          "Description": {
            "description": "A description for the Content Submission Type",
            "type": "string"
          },
          "Enabled": {
            "description": "Indicates whether this submission type is available to be used",
            "type": "boolean"
          },
          "ID": {
            "description": "The ID of the Content Submission Type",
            "format": "int32",
            "type": "integer"
          },
          "InventoryPackageID": {
            "description": "The ID of the Inventory Package from which to read the version of the package installed.",
            "type": "string"
          },
          "JobID": {
            "description": "The ID of the JobDefinition for which to initiate a Job. A value of '0' will cause a submission to fail. Either 'BuildDefinitionID' or 'JobID' is required.",
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "description": "The Name of the Content Submission Type",
            "type": "string"
          },
          "ReleaseNotesDescription": {
            "description": "A description of how release notes for this Content Submission Type are used",
            "type": "string"
          }
        },
        "required": [
          "Name",
          "Description"
        ],
        "type": "object"
      },
      "ContentSubmission.Shared.BusinessEntities.Release": {
        "description": "Release class",
        "properties": {
          "BuildDate": {
            "description": "Build Date",
            "format": "date-time",
            "type": "string"
          },
          "BundleIDs": {
            "description": "IDs of AUC Bundles associated with this Release.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "ReleaseDate": {
            "description": "Release Date",
            "format": "date-time",
            "type": "string"
          },
          "ReleaseID": {
            "description": "Release ID",
            "format": "int32",
            "type": "integer"
          },
          "ReleaseNumber": {
            "description": "Release Number",
            "type": "string"
          },
          "Visible": {
            "description": "Visible",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ContentSubmission.Shared.BusinessEntities.UserContentDefinition": {
        "description": "Relationship indicating that a User can manage submissions for the Content",
        "properties": {
          "ContentDefinitionID": {
            "description": "The ID of the ContentDefinition.",
            "format": "int32",
            "type": "integer"
          },
          "UserContentDefinitionID": {
            "description": "Read Only. The ID of the User to ContentDefinition relationship.",
            "format": "int32",
            "type": "integer"
          },
          "UserID": {
            "description": "The ID of the user.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DealerDB.Models.Dealer": {
        "properties": {
          "BillingAddress": {
            "type": "string"
          },
          "BillingAddress2": {
            "type": "string"
          },
          "BillingAddress3": {
            "type": "string"
          },
          "BillingAddress4": {
            "type": "string"
          },
          "BillingCity": {
            "type": "string"
          },
          "BillingCountry": {
            "type": "string"
          },
          "BillingCountryCode": {
            "type": "string"
          },
          "BillingState": {
            "type": "string"
          },
          "BillingZip": {
            "type": "string"
          },
          "Brands": {
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "DealerCode": {
            "type": "string"
          },
          "DealerName": {
            "type": "string"
          },
          "DealerStatus": {
            "type": "string"
          },
          "DealerStatusUpdateDate": {
            "type": "string"
          },
          "Filler": {
            "type": "string"
          },
          "IsValid": {
            "readOnly": true,
            "type": "boolean"
          },
          "LanguagePreference": {
            "type": "string"
          },
          "Region1": {
            "type": "string"
          },
          "Region2": {
            "type": "string"
          },
          "RegionMapping": {
            "type": "string"
          },
          "RoleBrand": {
            "type": "string"
          },
          "ShippingAddress2": {
            "type": "string"
          },
          "ShippingAddress3": {
            "type": "string"
          },
          "ShippingAddress4": {
            "type": "string"
          },
          "ShippingCity": {
            "type": "string"
          },
          "ShippingCountry": {
            "type": "string"
          },
          "ShippingState": {
            "type": "string"
          },
          "ShippingStreet": {
            "type": "string"
          },
          "ShippingZip": {
            "type": "string"
          },
          "Telephone": {
            "type": "string"
          },
          "VATCode": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DealerDB.Models.DealersPerCountry": {
        "properties": {
          "Count": {
            "format": "int32",
            "type": "integer"
          },
          "Country": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DealerDB.Models.EDTLiteRegistration": {
        "description": "Registration for an EDT Lite",
        "properties": {
          "DealerCode": {
            "description": "The dealer code with which the EDT Lite was created.",
            "type": "string"
          },
          "ExpirationDate": {
            "description": "The date at which the content of the EDT Lite expires.",
            "format": "date-time",
            "type": "string"
          },
          "InstanceID": {
            "description": "The identifier for the EDT Lite.",
            "type": "string"
          },
          "VoucherCode": {
            "description": "The voucher code with which the EDT Lite was created.",
            "type": "string"
          }
        },
        "required": [
          "InstanceID",
          "VoucherCode",
          "ExpirationDate"
        ],
        "type": "object"
      },
      "DealerDB.Models.License": {
        "properties": {
          "Active": {
            "description": "True if license is active.",
            "type": "boolean"
          },
          "CreatedDate": {
            "description": "The date the license was created.",
            "format": "date-time",
            "type": "string"
          },
          "DeactivatedDate": {
            "description": "The date the license was deactivated.",
            "format": "date-time",
            "type": "string"
          },
          "LicenseActivationType": {
            "description": "The type of license (e.g. EDT, EDT Lite)",
            "enum": [
              "EDT",
              "EDTLite"
            ],
            "type": "string"
          },
          "LicenseID": {
            "description": "The LicenseID",
            "type": "string"
          },
          "LicenseVersion": {
            "description": "The version of the license.",
            "type": "string"
          },
          "RefreshDate": {
            "description": "The date the license was refreshed.",
            "format": "date-time",
            "type": "string"
          },
          "SystemInfo": {
            "description": "Information about the system which is licensed.",
            "type": "string"
          },
          "UpdatedLicenseVersion": {
            "description": "The updated version of the license.  A value in this field indicates that the update has not been confirmed.",
            "type": "string"
          },
          "VoucherCode": {
            "description": "The voucher code that generated the license.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DealerDB.Models.LicenseActivation": {
        "properties": {
          "Key": {
            "description": "The license key in base64 format.  This is only provided when the LicenseData is a new license.",
            "type": "string"
          },
          "LicenseData": {
            "description": "The license data in base64 format.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DealerDB.Models.LicenseActivationConfirm": {
        "properties": {
          "LicenseVersion": {
            "description": "The license version to confirm",
            "type": "string"
          }
        },
        "required": [
          "LicenseVersion"
        ],
        "type": "object"
      },
      "DealerDB.Models.LicenseActivationCreate": {
        "properties": {
          "DealerCode": {
            "description": "The Dealer Code of the dealer activating the license",
            "type": "string"
          },
          "LicenseActivationType": {
            "description": "The type of license to create (e.g. EDT, EDT Lite)",
            "enum": [
              "EDT",
              "EDTLite"
            ],
            "type": "string"
          },
          "PostalCode": {
            "description": "The dealer's postal code (zip code)",
            "type": "string"
          },
          "SystemInfo": {
            "description": "Information about  the system being activated",
            "type": "string"
          },
          "VoucherCode": {
            "description": "The Voucher Code to use for activation",
            "type": "string"
          }
        },
        "required": [
          "VoucherCode",
          "DealerCode",
          "PostalCode",
          "SystemInfo"
        ],
        "type": "object"
      },
      "DealerDB.Models.LicenseActivationUpdate": {
        "properties": {
          "LicenseVersion": {
            "description": "The license version to update",
            "type": "string"
          },
          "SystemInfo": {
            "description": "Information about  the system being activated",
            "type": "string"
          }
        },
        "required": [
          "LicenseVersion"
        ],
        "type": "object"
      },
      "DealerDB.Models.Voucher": {
        "description": "A voucher for EDT activation",
        "properties": {
          "CreatedDate": {
            "description": "Read-Only. The date the voucher was created.",
            "format": "date-time",
            "type": "string"
          },
          "DealerCode": {
            "description": "The dealer code the voucher is assigned to.  Required for commercial and right to repair vouchers.",
            "type": "string"
          },
          "Deleted": {
            "description": "Read-Only. True if voucher has been deleted.",
            "type": "boolean"
          },
          "Email": {
            "description": "Required for internal vouchers.",
            "type": "string"
          },
          "ExpirationDate": {
            "description": "The expiration date of the voucher. Required for Temporary and Right to Repair Vouchers.",
            "format": "date-time",
            "type": "string"
          },
          "LicenseTo": {
            "description": "Required for Internal Vouchers",
            "type": "string"
          },
          "ModifiedBy": {
            "description": "Read-Only. The user that made the last modification to the voucher.",
            "type": "string"
          },
          "OrderNumber": {
            "description": "The order number of a license. Required for Commercial and Right To Repair Vouchers. Not supported for other Vouchers.",
            "type": "string"
          },
          "Punched": {
            "description": "True if voucher has aleady been used.  False if the voucher has not been used.",
            "type": "boolean"
          },
          "PunchedDate": {
            "description": "Read-Only. The date the voucher was punched.",
            "format": "date-time",
            "type": "string"
          },
          "Purpose": {
            "description": "Required for Internal Vouchers. Not supported for other Vouchers.",
            "type": "string"
          },
          "Type": {
            "description": "The type of voucher. Commercial is the default if not specified.",
            "enum": [
              "Commercial",
              "Internal",
              "Temporary",
              "RightToRepair"
            ],
            "type": "string"
          },
          "VoucherCode": {
            "description": "The voucher code.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DealerDB.Models.VoucherHistory": {
        "properties": {
          "ChangedDate": {
            "format": "date-time",
            "type": "string"
          },
          "CreatedDate": {
            "description": "Read-Only. The date the voucher was created.",
            "format": "date-time",
            "type": "string"
          },
          "DealerCode": {
            "description": "The dealer code the voucher is assigned to.  Required for commercial vouchers.",
            "type": "string"
          },
          "Deleted": {
            "description": "Read-Only. True if voucher has been deleted.",
            "type": "boolean"
          },
          "Email": {
            "description": "The email address. Required for Internal Vouchers",
            "type": "string"
          },
          "ExpirationDate": {
            "description": "The expiration date of the voucher. Required for Temporary Vouchers.",
            "format": "date-time",
            "type": "string"
          },
          "ID": {
            "description": "The id of the voucher history item",
            "format": "int32",
            "type": "integer"
          },
          "LicenseTo": {
            "description": "Required for Internal Vouchers",
            "type": "string"
          },
          "ModifiedBy": {
            "description": "Read-Only. The user that made the last modification to the voucher.",
            "type": "string"
          },
          "OrderNumber": {
            "description": "The order number of a commercial license. Required for Commercial Vouchers. Not supported for other Vouchers.",
            "type": "string"
          },
          "Punched": {
            "description": "True if voucher has aleady been used.  False if the voucher has not been used.",
            "type": "boolean"
          },
          "PunchedDate": {
            "description": "Read-Only. The date the voucher was punched.",
            "format": "date-time",
            "type": "string"
          },
          "Purpose": {
            "description": "Required for Internal Vouchers",
            "type": "string"
          },
          "Type": {
            "description": "The type of voucher.",
            "enum": [
              "Commercial",
              "Internal",
              "Temporary",
              "RightToRepair"
            ],
            "type": "string"
          },
          "VoucherCode": {
            "description": "The voucher code.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GlobalResources.Shared.Models.FileDownload": {
        "description": "A language used for string translations.",
        "properties": {
          "CRC": {
            "description": "The crc of the file (SHA256, HEX-encoded). Must be provided when creating a file.",
            "type": "string"
          },
          "ContentType": {
            "description": "The type of file; sent as the content-type header.",
            "type": "string"
          },
          "Description": {
            "description": "The description of the file.",
            "type": "string"
          },
          "Id": {
            "description": "The Id of the file.",
            "type": "string"
          },
          "IsPublic": {
            "description": "Indicates whether this file is available to the public for download.",
            "type": "boolean"
          },
          "Name": {
            "description": "The name of the file when downloaded.",
            "type": "string"
          },
          "Path": {
            "description": "The Path of the file.",
            "type": "string"
          },
          "Size": {
            "description": "The size of the file in bytes. Null until assigned by server when marked as 'Available'. Read Only",
            "format": "int64",
            "type": "integer"
          },
          "State": {
            "description": "Indicates the state of this file. Must be 'Created' when created.",
            "enum": [
              "Created",
              "Available",
              "Removed"
            ],
            "type": "string"
          }
        },
        "required": [
          "Name",
          "Description",
          "ContentType",
          "State",
          "IsPublic",
          "CRC",
          "Path"
        ],
        "type": "object"
      },
      "GlobalResources.Shared.Models.GlobalImage": {
        "description": "An image from the Global Image library.",
        "properties": {
          "CRC": {
            "description": "The Hash of the file (SHA256, HEX-encoded).",
            "type": "string"
          },
          "Categories": {
            "description": "The category of the file.",
            "items": {
              "$ref": "#/components/schemas/GlobalResources.Shared.Models.GlobalImageCategory"
            },
            "type": "array"
          },
          "Date": {
            "description": "The date of the file.",
            "format": "date-time",
            "type": "string"
          },
          "Description": {
            "description": "The description of the file.",
            "type": "string"
          },
          "Height": {
            "description": "The height of the file.",
            "format": "int32",
            "type": "integer"
          },
          "Id": {
            "description": "The Id of the GlobalImage Metadata.",
            "type": "string"
          },
          "Name": {
            "description": "The name of the file when downloaded.",
            "type": "string"
          },
          "Publisher": {
            "description": "The Publisher of the file.",
            "type": "string"
          },
          "Size": {
            "description": "The size of the file in bytes. Null until assigned by server when marked as 'Available'. Read Only",
            "format": "int64",
            "type": "integer"
          },
          "State": {
            "description": "Indicates the state of this file. Must be 'Created' when created. Read Only.",
            "enum": [
              "Created",
              "Available",
              "Removed"
            ],
            "type": "string"
          },
          "ThumbnailCRC": {
            "description": "The Hash of the thumbnail file (SHA256, HEX-encoded).",
            "type": "string"
          },
          "ThumbnailSize": {
            "description": "The size of the thumbnail file in bytes. Null until assigned by server when marked as 'Available'. Read Only",
            "format": "int64",
            "type": "integer"
          },
          "Width": {
            "description": "The width of the file.",
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "CRC",
          "ThumbnailCRC",
          "State",
          "Name",
          "Description",
          "Width",
          "Height"
        ],
        "type": "object"
      },
      "GlobalResources.Shared.Models.GlobalImageCategory": {
        "description": "An image category from the Global Image library.",
        "properties": {
          "Id": {
            "description": "The Id of the GlobalImage Categories.",
            "type": "string"
          },
          "Name": {
            "description": "The name of the globalImage Catetory.",
            "type": "string"
          }
        },
        "required": [
          "Name"
        ],
        "type": "object"
      },
      "GlobalResources.Shared.Models.Language": {
        "description": "A language used for string translations.",
        "properties": {
          "Description": {
            "description": "The description of the language (e.g. \u201cEnglish \u2013 United States\u201d).",
            "type": "string"
          },
          "IsDeleted": {
            "description": "Indicates whether the API supports the language. Must be false when created. Read Only.",
            "type": "boolean"
          },
          "LocaleId": {
            "description": "The Locale Id of the language.",
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "LocaleId",
          "Description"
        ],
        "type": "object"
      },
      "GlobalResources.Shared.Models.StringDefinition": {
        "description": "The definition of a string to be translated",
        "properties": {
          "DescriptionForTranslator": {
            "description": "The description of the string to be translated.",
            "type": "string"
          },
          "DoNotTranslate": {
            "description": "True if the string should not be translated. False by default.",
            "type": "boolean"
          },
          "Id": {
            "description": "The identifier for the string. Read Only.",
            "type": "string"
          },
          "ParameterCount": {
            "description": "The number of parameters expected for the string.",
            "format": "int32",
            "type": "integer"
          },
          "Timestamp": {
            "description": "A value indicating the last modification of this string. Read Only.",
            "format": "byte",
            "type": "string"
          },
          "Translations": {
            "description": "Translations for the string.",
            "items": {
              "$ref": "#/components/schemas/GlobalResources.Shared.Models.StringTranslation"
            },
            "type": "array"
          }
        },
        "required": [
          "DescriptionForTranslator"
        ],
        "type": "object"
      },
      "GlobalResources.Shared.Models.StringTranslation": {
        "description": "A translation of a string in a specific language",
        "properties": {
          "AuthorId": {
            "description": "The id of the user to last edit thie translation",
            "format": "int32",
            "type": "integer"
          },
          "LanguageId": {
            "description": "The id of the language of the translation",
            "format": "int32",
            "type": "integer"
          },
          "State": {
            "description": "The state of the translation",
            "enum": [
              "Original",
              "Requested",
              "Processing",
              "Processed",
              "Validated",
              "Invalidated",
              "RequestPending",
              "CreatePending"
            ],
            "type": "string"
          },
          "StringId": {
            "description": "The id of the string that is translated",
            "type": "string"
          },
          "StringValue": {
            "description": "The translated string",
            "type": "string"
          },
          "Timestamp": {
            "description": "A value indicating the last modification of this translation. Read Only.",
            "format": "byte",
            "type": "string"
          }
        },
        "required": [
          "StringValue"
        ],
        "type": "object"
      },
      "GlobalResources.Shared.Models.TranslationRequest": {
        "description": "A request to translate specified strings into specified locales",
        "properties": {
          "ApprovalUserId": {
            "description": "The ID of the user from which approval for the request is required",
            "format": "int32",
            "type": "integer"
          },
          "CCEmailAddresses": {
            "description": "Additional email addresses to CC on emails pertaining to the request",
            "items": {
              "type": "string"
            },
            "pattern": "^(?(\")(\"[^\"]+?\"@)|(([0-9a-z]((\\.(?!\\.))|[-!#\\$%&'\\*\\+/=\\?\\^`\\{\\}\\|~\\w])*)(?<=[0-9a-z])@))(?(\\[)(\\[(\\d{1,3}\\.){3}\\d{1,3}\\])|(([0-9a-z][-\\w]*[0-9a-z]*\\.)+[a-z0-9]{2,24}))$",
            "type": "array"
          },
          "ChargeToAccount": {
            "description": "The account to charge for the request",
            "type": "string"
          },
          "Deadline": {
            "description": "The date by which the translations in the request are needed. Defaults to 30 days from the current date",
            "format": "date-time",
            "type": "string"
          },
          "Id": {
            "description": "The ID of the request",
            "format": "int32",
            "type": "integer"
          },
          "LocaleIds": {
            "description": "Locale IDs to which these strings are requested to be translated",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "Notes": {
            "description": "Additional notes or comments about the request",
            "type": "string"
          },
          "QuestionsUserId": {
            "description": "The ID of the user to which to address questions regarding the request",
            "format": "int32",
            "type": "integer"
          },
          "State": {
            "description": "The state of the request",
            "enum": [
              "NotSubmitted",
              "Submitted",
              "Cancelled",
              "Completed"
            ],
            "type": "string"
          },
          "SubmittedBy": {
            "description": "The ID of the User that submitted the request",
            "format": "int32",
            "type": "integer"
          },
          "TranslatorEmail": {
            "description": "The email address for the translator",
            "type": "string"
          },
          "TranslatorName": {
            "description": "The name of the translator",
            "type": "string"
          }
        },
        "required": [
          "ChargeToAccount",
          "Deadline",
          "Notes",
          "State",
          "CCEmailAddresses",
          "LocaleIds"
        ],
        "type": "object"
      },
      "GlobalResources.Shared.Models.TranslationSet": {
        "description": "A set of strings submitted for translation",
        "properties": {
          "Attributes": {
            "description": "Attributes of the Translation Set",
            "items": {
              "$ref": "#/components/schemas/GlobalResources.Shared.Models.TranslationSetAttribute"
            },
            "type": "array"
          },
          "FileIDs": {
            "description": "IDs for files related to this translation set. For example, the original and processed files",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "Id": {
            "description": "The id of the TranslationSet.",
            "format": "int32",
            "type": "integer"
          },
          "InDate": {
            "description": "Read Only. The date the translation set was returned.",
            "format": "date-time",
            "type": "string"
          },
          "Notes": {
            "description": "Notes on the TranslationSet",
            "type": "string"
          },
          "OutDate": {
            "description": "Read Only. The date the translation set was sent out.",
            "format": "date-time",
            "type": "string"
          },
          "State": {
            "description": "An enum indicating the state of the translation set",
            "enum": [
              "OutForProcessing",
              "Processing",
              "PendingApproval",
              "OutForTranslation",
              "Cancelled",
              "Completed"
            ],
            "type": "string"
          },
          "TranslationRequestID": {
            "description": "Read Only. The Id of the TranslationRequest which generated this translation set.",
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "State",
          "FileIDs"
        ],
        "type": "object"
      },
      "GlobalResources.Shared.Models.TranslationSetAttribute": {
        "description": "An attribute of a",
        "properties": {
          "ID": {
            "description": "The ID of this attribute.",
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "description": "The name of this Attribute.",
            "pattern": "[a-zA-Z0-9]+",
            "type": "string"
          },
          "TranslationSetID": {
            "description": "The ID of the translation set to which this attribute belongs.",
            "format": "int32",
            "type": "integer"
          },
          "Value": {
            "description": "The value of this Attribute",
            "type": "string"
          }
        },
        "required": [
          "Name"
        ],
        "type": "object"
      },
      "GlobalResources.Shared.Models.TranslationSetSourceString": {
        "description": "Information needed to translate a string in a translation set",
        "properties": {
          "DescriptionForTranslator": {
            "description": "A description of the string to translate. This should contain context and parameter count.",
            "type": "string"
          },
          "LanguageID": {
            "description": "The ID of the language from which to translate the string",
            "format": "int32",
            "type": "integer"
          },
          "StringID": {
            "description": "The ID of the string to translate",
            "type": "string"
          },
          "StringValue": {
            "description": "The string to translate",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GlobalResources.Shared.Models.TranslationSetStatistics": {
        "description": "Statistics for a translation set",
        "properties": {
          "LanguageIDs": {
            "description": "The IDs of languages for which translaions in this translation set have been requested",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "StringCount": {
            "description": "The count of unique string definitions contained in this translation set",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GlobalResources.Shared.Models.TranslationSetString": {
        "description": "The resulting translation in a translation set.  is the  to which the string will be translated.",
        "properties": {
          "LanguageID": {
            "description": "The ID of the language into which to translate the string",
            "format": "int32",
            "type": "integer"
          },
          "StringID": {
            "description": "The Id of the string translation that has been requested",
            "type": "string"
          },
          "StringValue": {
            "description": "The string value returned from the translator",
            "type": "string"
          },
          "TranslationSetId": {
            "description": "The id of the TranslationSet",
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "TranslationSetId",
          "StringID",
          "LanguageID"
        ],
        "type": "object"
      },
      "OASSupport.Shared.Models.TranslationKey": {
        "description": "A translation key to map the relationship of keyNames, usually for ODX, and string Ids",
        "properties": {
          "ID": {
            "description": "The identifier for the translationKey. Read Only.",
            "format": "int32",
            "type": "integer"
          },
          "KeyName": {
            "description": "The key name of the item. One example is tkODX_HWIKM14R01",
            "type": "string"
          },
          "StringID": {
            "description": "Foreign key to StringDefinitionID",
            "type": "string"
          }
        },
        "required": [
          "KeyName",
          "StringID"
        ],
        "type": "object"
      },
      "System.Object": {
        "properties": {},
        "type": "object"
      },
      "UpdateSystem.Models.AttributeValue": {
        "properties": {
          "Key": {
            "description": "The attribute name. Limit 50 characters. Attributes with names exceeding this limit will be ignored.",
            "type": "string"
          },
          "TimeStamp": {
            "description": "Read Only. The timestamp.",
            "format": "date-time",
            "type": "string"
          },
          "Value": {
            "description": "The value",
            "type": "string"
          }
        },
        "required": [
          "Key"
        ],
        "type": "object"
      },
      "UpdateSystem.Models.AvailableSubscription": {
        "properties": {
          "PackageType": {
            "$ref": "#/components/schemas/UpdateSystem.Models.PackageType",
            "description": "The PackageType this subscription is for."
          },
          "SubscriptionType": {
            "description": "The type of subscription supported.",
            "enum": [
              "Required",
              "IncludeByDefault",
              "ExcludeByDefault"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateSystem.Models.AvailableUpdateGroupSubscription": {
        "properties": {
          "AvailableSubscriptions": {
            "description": "The available subscriptions for this update group.",
            "items": {
              "$ref": "#/components/schemas/UpdateSystem.Models.AvailableSubscription"
            },
            "type": "array"
          },
          "UpdateGroup": {
            "$ref": "#/components/schemas/UpdateSystem.Models.UpdateGroup",
            "description": "The Update Group this subscription is for."
          }
        },
        "type": "object"
      },
      "UpdateSystem.Models.Bundle": {
        "properties": {
          "Active": {
            "description": "Default Value: false. During the creation of the Bundle, this field must be false.",
            "type": "boolean"
          },
          "BundleID": {
            "description": "Read-Only.",
            "type": "string"
          },
          "BundleNumber": {
            "description": "The bundle number",
            "format": "int32",
            "type": "integer"
          },
          "Description": {
            "description": "The Bundle description.",
            "type": "string"
          },
          "UpdateGroupID": {
            "description": "The update group this bundle belongs to.",
            "type": "string"
          }
        },
        "required": [
          "Description",
          "UpdateGroupID",
          "BundleNumber"
        ],
        "type": "object"
      },
      "UpdateSystem.Models.Category": {
        "properties": {
          "Values": {
            "items": {
              "$ref": "#/components/schemas/UpdateSystem.Models.AttributeValue"
            },
            "type": "array"
          },
          "category": {
            "description": "The category name. Limit 50 characters. Categories with names exceeding this limit will be ignored.",
            "type": "string"
          }
        },
        "required": [
          "category"
        ],
        "type": "object"
      },
      "UpdateSystem.Models.CheckinResult": {
        "properties": {
          "NextTransactionID": {
            "description": "The transaction ID to use for the next checkin.",
            "type": "string"
          },
          "Packages": {
            "description": "The packages for the client to run.",
            "items": {
              "$ref": "#/components/schemas/UpdateSystem.Models.Package"
            },
            "type": "array"
          },
          "RemovePackages": {
            "description": "The package ids for the client to remove.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UpdateSystem.Models.Client": {
        "properties": {
          "ClientID": {
            "description": "Read Only. The id of the client",
            "type": "string"
          },
          "LastCheckin": {
            "description": "Read Only. The time of the client's last checkin with the server.",
            "format": "date-time",
            "type": "string"
          },
          "Tag": {
            "description": "A description of the client that can be used for easy reference",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateSystem.Models.ClientInfo": {
        "properties": {
          "ClientID": {
            "description": "The id of the client",
            "type": "string"
          },
          "Package": {
            "description": "The packages",
            "items": {
              "$ref": "#/components/schemas/UpdateSystem.Models.PackageReport"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UpdateSystem.Models.ClientStatus": {
        "properties": {
          "ClientID": {
            "description": "The Client ID",
            "type": "string"
          },
          "LastCheckin": {
            "description": "The time of the client's last check-in",
            "format": "date-time",
            "type": "string"
          },
          "MinutesElapsed": {
            "description": "The number of minutes that have passed since the last check-in",
            "format": "int32",
            "type": "integer"
          },
          "ReportResult": {
            "description": "The result for the client included in the UpdateGroup's report",
            "type": "string"
          },
          "ReportResultIsValid": {
            "description": "True if the result for the client matches what is expected for the UpdateGroup",
            "type": "boolean"
          },
          "ReportValue": {
            "description": "The value for the client included in the UpdateGroup's report",
            "type": "string"
          },
          "Tag": {
            "description": "A descriptive name for the client",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateSystem.Models.Package": {
        "properties": {
          "Autorun": {
            "description": "Value is true if package should run automatically. Default value is false.",
            "type": "boolean"
          },
          "CRC": {
            "description": "The CRC used to validate the download.",
            "type": "string"
          },
          "Description": {
            "description": "The package description",
            "type": "string"
          },
          "LocalizedName": {
            "description": "Optional. The StringID used to localize the name of the Package",
            "type": "string"
          },
          "Notes": {
            "description": "Notes about the package",
            "type": "string"
          },
          "PackageID": {
            "description": "Read Only. The package ID",
            "type": "string"
          },
          "PackageTypeID": {
            "description": "The id of the package type this package belongs to.",
            "type": "string"
          },
          "PreviousVersion": {
            "description": "For delta packages, the previous version required.  For non-delta packages, the Previous version is 0.  Default value is 0.",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer"
          },
          "ReleaseDate": {
            "description": "The date the package was released",
            "format": "date-time",
            "type": "string"
          },
          "Released": {
            "description": "True if the package is released.  Default value is False.",
            "type": "boolean"
          },
          "RemoveOnSuccess": {
            "description": "True to remove the package after successful execution.  Default value is False.",
            "type": "boolean"
          },
          "Size": {
            "description": "The size of the file at the specified URL.  If a size is not supplied at creation time, the size will be determined by the response from the URL.\r\n            If the size provided does not match the size in the response from the URL an error will be returned.",
            "format": "int64",
            "type": "integer"
          },
          "Switches": {
            "description": "The command line arguments for the package.  Default value is an empty string.",
            "type": "string"
          },
          "Url": {
            "description": "The Url to download the package from.",
            "type": "string"
          },
          "Version": {
            "description": "The version.",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer"
          }
        },
        "required": [
          "PackageTypeID",
          "Url",
          "CRC",
          "Version",
          "Description",
          "ReleaseDate"
        ],
        "type": "object"
      },
      "UpdateSystem.Models.PackageReport": {
        "properties": {
          "Categories": {
            "description": "The package report's categories.",
            "items": {
              "$ref": "#/components/schemas/UpdateSystem.Models.Category"
            },
            "type": "array"
          },
          "PackageDescription": {
            "description": "Read Only. The package description",
            "type": "string"
          },
          "PackageID": {
            "description": "The PackageID.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateSystem.Models.PackageStatus": {
        "properties": {
          "ClientID": {
            "description": "The id of the client",
            "type": "string"
          },
          "ClientKey": {
            "description": "The client's tag",
            "type": "string"
          },
          "DownloadTime": {
            "description": "The amount of time spent downloading",
            "type": "string"
          },
          "Downloaded": {
            "description": "The number of bytes downloaded",
            "type": "string"
          },
          "InstallCompleted": {
            "description": "The time the package completed",
            "type": "string"
          },
          "InstallResult": {
            "description": "The package result",
            "type": "string"
          },
          "InstallStarted": {
            "description": "The time the package was started",
            "type": "string"
          },
          "InstallTime": {
            "description": "The amount of time required to run the package",
            "type": "string"
          },
          "Percentage": {
            "description": "The download completion percentage",
            "type": "string"
          },
          "Size": {
            "description": "The total size of the package",
            "type": "string"
          },
          "Timestamp": {
            "description": "The time the status was last updated",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateSystem.Models.PackageStatusSummary": {
        "properties": {
          "AverageDownloadTime": {
            "description": "The average time required to complete the download",
            "type": "string"
          },
          "AverageInstallTime": {
            "description": "The average time required to complete the install",
            "type": "string"
          },
          "Downloaded": {
            "description": "The number of clients that have completed the download",
            "format": "int64",
            "type": "integer"
          },
          "Error": {
            "description": "The result of the install",
            "format": "int32",
            "type": "integer"
          },
          "Installed": {
            "description": "The number of clients that have completed the install",
            "format": "int64",
            "type": "integer"
          },
          "Package": {
            "description": "The name of the package",
            "type": "string"
          },
          "PackageID": {
            "description": "The ID of the package",
            "type": "string"
          },
          "PackageStatusItems": {
            "description": "The individual package status items",
            "items": {
              "$ref": "#/components/schemas/UpdateSystem.Models.PackageStatus"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UpdateSystem.Models.PackageType": {
        "properties": {
          "Attribute": {
            "description": "The inventory attribute (from the InventoryPackage) used to determine what version of this package type is installed.",
            "type": "string"
          },
          "Category": {
            "description": "The inventory category (from the InventoryPackage) used to determine what version of this package type is installed.",
            "type": "string"
          },
          "Description": {
            "description": "The description of the package type",
            "type": "string"
          },
          "Icon": {
            "description": "Optional.  The icon to use for the PackageType, in base 64",
            "type": "string"
          },
          "InventoryFrequency": {
            "description": "The number of minutes to wait before requesting another inventory.  The default value is 1440 (24 hours).",
            "format": "int32",
            "type": "integer"
          },
          "InventoryPackage": {
            "description": "The inventory package used to determine what version of this package type is installed.",
            "type": "string"
          },
          "LocalizedDescription": {
            "description": "Optional. The StringID used to localize the description of the PackageType",
            "type": "string"
          },
          "LocalizedName": {
            "description": "Optional. The StringID used to localize the name of the PackageType",
            "type": "string"
          },
          "MaxDeltaPackages": {
            "description": "The maximum number of \"chained\" delta packages to use when updating the client",
            "format": "int32",
            "type": "integer"
          },
          "PackageTypeID": {
            "description": "Read Only. The package type id.",
            "type": "string"
          }
        },
        "required": [
          "Description"
        ],
        "type": "object"
      },
      "UpdateSystem.Models.PackageTypeIDtoBundle": {
        "properties": {
          "BundleID": {
            "description": "The bundle to include the package in.",
            "type": "string"
          },
          "PackageTypeID": {
            "description": "The package type id of the package to include",
            "type": "string"
          },
          "PackageVersion": {
            "description": "The package version of the package to include",
            "format": "int32",
            "type": "integer"
          },
          "Priority": {
            "description": "The execution priority of the package relative to other packages in the bundle. Range 1 - 100, lower value indication higher priority.",
            "format": "int32",
            "maximum": 100,
            "minimum": 1,
            "type": "integer"
          },
          "SubscriptionType": {
            "description": "Optional. The type of subscription supported.  The default subscription type is Required.",
            "enum": [
              "Required",
              "IncludeByDefault",
              "ExcludeByDefault"
            ],
            "type": "string"
          }
        },
        "required": [
          "BundleID",
          "PackageTypeID",
          "PackageVersion",
          "Priority"
        ],
        "type": "object"
      },
      "UpdateSystem.Models.PagedClientStatusMetadata": {
        "properties": {
          "Limit": {
            "description": "The number of entities this paged response is limited to.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "Offset": {
            "description": "The number of entities prior to this page of items.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "ReportResultExpected": {
            "description": "The label for data contained in ClientStatus.ReportResults",
            "type": "string"
          },
          "ReportResultLabel": {
            "description": "The label for data contained in ClientStatus.ReportResults",
            "type": "string"
          },
          "ReportValueLabel": {
            "description": "The label for data contained in ClientStatus.ReportValue",
            "type": "string"
          },
          "TotalCount": {
            "description": "The total number of entities matching the request.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          }
        },
        "required": [
          "TotalCount",
          "Limit",
          "Offset",
          "ReportValueLabel",
          "ReportResultLabel",
          "ReportResultExpected"
        ],
        "type": "object"
      },
      "UpdateSystem.Models.PriorityPackage": {
        "properties": {
          "Autorun": {
            "description": "Read Only. From the package specified by package ID.\r\n            Value is true if package should run automatically. Default value is false.",
            "type": "boolean"
          },
          "CRC": {
            "description": "Read Only. From the package specified by package ID.",
            "type": "string"
          },
          "ClientID": {
            "description": "The ID of the client to receive the priority package",
            "type": "string"
          },
          "Description": {
            "description": "Read Only. From the package specified by package ID.",
            "type": "string"
          },
          "Notes": {
            "description": "Read Only. From the package specified by package ID.",
            "type": "string"
          },
          "PackageID": {
            "description": "The ID of the package to push as a priority package.",
            "type": "string"
          },
          "PackageTypeID": {
            "description": "Read Only. From the package specified by package ID.",
            "type": "string"
          },
          "PreviousVersion": {
            "description": "Read Only. From the package specified by package ID.",
            "format": "int32",
            "type": "integer"
          },
          "PriorityPackageID": {
            "description": "Read Only. The ID of the priority package.",
            "type": "string"
          },
          "ReleaseDate": {
            "description": "Read Only. From the package specified by package ID.\r\n            The date the package was released",
            "format": "date-time",
            "type": "string"
          },
          "Released": {
            "description": "Read Only. From the package specified by package ID.",
            "type": "boolean"
          },
          "RemoveOnSuccess": {
            "description": "Read Only. From the package specified by package ID.",
            "type": "boolean"
          },
          "Size": {
            "description": "Read Only. From the package specified by package ID.",
            "format": "int64",
            "type": "integer"
          },
          "Switches": {
            "description": "The command line arguments for the priority package.  Default value is an empty string.",
            "type": "string"
          },
          "TimeStamp": {
            "description": "Read Only. The timestamp of the priority package.",
            "format": "date-time",
            "type": "string"
          },
          "Url": {
            "description": "Read Only. From the package specified by package ID.",
            "type": "string"
          },
          "Version": {
            "description": "Read Only. From the package specified by package ID.",
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "ClientID",
          "PackageID"
        ],
        "type": "object"
      },
      "UpdateSystem.Models.UpdateGroup": {
        "properties": {
          "Description": {
            "description": "The description of the update group",
            "type": "string"
          },
          "ID": {
            "type": "string"
          },
          "InventoryFrequency": {
            "description": "The time in minutes between inventory checks. Default value is 1440 minutes (one day).",
            "format": "int32",
            "type": "integer"
          },
          "InventoryPackage": {
            "description": "The Package ID of the package used for inventory",
            "type": "string"
          },
          "LocalizedDescription": {
            "description": "Optional. The StringID used to localize the description of the update group",
            "type": "string"
          },
          "LocalizedName": {
            "description": "Optional. The StringID used to localize the name of the update group",
            "type": "string"
          },
          "Priority": {
            "description": "The execution priority of the package relative to other packages in the bundle. Range 1 - 100, lower value indication higher priority.",
            "format": "int32",
            "maximum": 100,
            "minimum": 1,
            "type": "integer"
          },
          "ReportField": {
            "description": "A field to return in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
            "type": "string"
          },
          "UpdateType": {
            "description": "The update type name",
            "type": "string"
          },
          "ValidatingField": {
            "description": "A field used for validation in the status report for this update group.\r\n            Specify the field with the format [Label]: {[InventoryPackageID].[Category].[Attribute]}.  (i.e. example: {bec778ca-278d-424a-867a-4653a1a19e86.MyCategory.MyAttribute})",
            "type": "string"
          },
          "ValueToValidate": {
            "description": "The value to validate the ValidationField against.",
            "type": "string"
          },
          "Version": {
            "description": "The version of the UpdateGroup, this value is incremented with each modification to a related Bundle or PackageType",
            "format": "byte",
            "type": "string"
          }
        },
        "required": [
          "Description",
          "UpdateType",
          "Priority"
        ],
        "type": "object"
      },
      "UpdateSystem.Models.UpdateGroupClientRelationship": {
        "properties": {
          "Active": {
            "description": "The subscription status.  The status is active by default.",
            "type": "boolean"
          },
          "ClientID": {
            "description": "Read Only after creation. The client id of the subscriber.",
            "type": "string"
          },
          "LastCheckin": {
            "description": "ReadOnly. The timestamp of the last checkin.",
            "format": "date-time",
            "type": "string"
          },
          "RelationshipID": {
            "description": "Read Only after creation. The relationship id.  A relationship id will be assigned if not provided on creation.",
            "type": "string"
          },
          "UpdateGroupID": {
            "description": "Read Only after creation. The update group to subscribe to.",
            "type": "string"
          }
        },
        "required": [
          "UpdateGroupID",
          "ClientID"
        ],
        "type": "object"
      },
      "UpdateSystem.Models.UpdateGroupSubscription": {
        "properties": {
          "ClientID": {
            "description": "The ClientID.",
            "type": "string"
          },
          "Include": {
            "description": "True to receive content of type indicated by PackageTypeID.",
            "type": "boolean"
          },
          "PackageTypeID": {
            "description": "The PackageType to set subscription status for",
            "type": "string"
          },
          "UpdateGroupID": {
            "description": "The Update Group this subscription is relevant for.",
            "type": "string"
          },
          "UpdateGroupSubscriptionID": {
            "description": "The Update Group Subscription ID.  This ID will be automatically assigned when creating an Update Group Subscription.",
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "UpdateGroupID",
          "PackageTypeID",
          "ClientID",
          "Include"
        ],
        "type": "object"
      },
      "UpdateSystem.Models.UpdateMetricsData": {
        "description": "Model that retrieves the data for UpdateMetrics",
        "properties": {
          "ActiveVersion": {
            "description": "Active version (bundle number) of update type.",
            "type": "string"
          },
          "ActiveVersionByClient": {
            "description": "Generic collection that is of type ActiveVersionByClientRecord",
            "items": {
              "$ref": "#/components/schemas/UpdateSystem.Models.UpdateMetricsData.ActiveVersionByClientRecord"
            },
            "type": "array"
          },
          "CurrentStateByClient": {
            "description": "Generic collection that is of type CurrentStateByClientRecord",
            "items": {
              "$ref": "#/components/schemas/UpdateSystem.Models.UpdateMetricsData.CurrentStateByClientRecord"
            },
            "type": "array"
          },
          "CutOffDate": {
            "description": "Date that has been configured to only show the most recent clients with a cut off date. (Ex. year from current date)",
            "format": "date-time",
            "type": "string"
          },
          "DataRefreshed": {
            "description": "Data was refreshed at this time.",
            "format": "date-time",
            "type": "string"
          },
          "FilteredClientCount": {
            "description": "Sum of clients represented\r\n            Filtered by updateType and lastCheckedInDate",
            "format": "int32",
            "type": "integer"
          },
          "PackageErrors": {
            "description": "Generic collection that is of type PackageErrorsRecord",
            "items": {
              "$ref": "#/components/schemas/UpdateSystem.Models.UpdateMetricsData.PackageErrorsRecord"
            },
            "type": "array"
          },
          "TotalClientCount": {
            "description": "Total clients we have ever serviced",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UpdateSystem.Models.UpdateMetricsData.ActiveVersionByClientRecord": {
        "properties": {
          "BundleNumber": {
            "format": "int32",
            "type": "integer"
          },
          "ClientCount": {
            "format": "int32",
            "type": "integer"
          },
          "ReleaseName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateSystem.Models.UpdateMetricsData.CurrentStateByClientRecord": {
        "properties": {
          "ClientCount": {
            "format": "int32",
            "type": "integer"
          },
          "State": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateSystem.Models.UpdateMetricsData.PackageErrorsRecord": {
        "properties": {
          "ClientCount": {
            "format": "int32",
            "type": "integer"
          },
          "ErrorCode": {
            "type": "string"
          },
          "LongDescription": {
            "type": "string"
          },
          "ShortDescription": {
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  }
}