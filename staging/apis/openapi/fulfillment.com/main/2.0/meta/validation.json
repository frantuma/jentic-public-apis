[
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Found 9 absolute http references: [(('components', 'securitySchemes', 'fdcAuth', 'flows', 'implicit', 'authorizationUrl'), 'authorizationUrl', 'https://api.fulfillment.com/v2/oauth/authorize'), (('components', 'securitySchemes', 'fdcAuth', 'flows', 'password', 'tokenUrl'), 'tokenUrl', 'https://api.fulfillment.com/v2/oauth/access_token'), (('components', 'securitySchemes', 'fdcAuth', 'flows', 'password', 'refreshUrl'), 'refreshUrl', 'https://api.fulfillment.com/v2/oauth/access_token'), (('paths', '/track', 'get', 'responses', '200', 'content', 'application/json', 'schema', 'properties', 'origin', 'properties', 'geometry', 'externalDocs', 'url'), 'url', 'http://geojson.org/geojson-spec.html#geometry-objects'), (('paths', '/track', 'get', 'responses', '200', 'content', 'application/json', 'schema', 'properties', 'origin', 'externalDocs', 'url'), 'url', 'https://tools.ietf.org/html/rfc7946#section-3.2'), (('servers', 0, 'url'), 'url', 'https://api.fulfillment.com/v2'), (('info', 'termsOfService'), 'termsOfService', 'https://fulfillment.github.io/api/terms/'), (('info', 'contact', 'url'), 'url', 'https://fulfillment.com'), (('info', 'x-logo', 'url'), 'url', 'https://fulfillment.github.io/api/FDC_API_144x144.png')]",
    "severity": 3,
    "code": "found-absolute-http-references",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec",
      "absoluteRefsCount": "9"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Security scheme 'apiKey' is defined in components.securitySchemes but not used in any security requirement.",
    "severity": 2,
    "code": "UNUSED_SECURITY_SCHEME_DEFINED",
    "code_description": null,
    "source": "default-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "securitySchemes"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Every operation should have security defined on it or on the root level. [path: paths./oauth/access_token.post]",
    "severity": 1,
    "code": "security-defined",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/oauth/access_token",
        "post"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Every operation should have security defined on it or on the root level. [path: paths./track.get]",
    "severity": 1,
    "code": "security-defined",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/track",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Info object should contain `license` field. [path: info]",
    "severity": 2,
    "code": "info-license",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "info"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object `description` must be non-empty string. [path: tags.2.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        2,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object `description` must be non-empty string. [path: tags.3.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        3,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object `description` must be non-empty string. [path: tags.4.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        4,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object `description` must be non-empty string. [path: tags.6.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        6,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object `description` must be non-empty string. [path: tags.7.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        7,
        "description"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./users/me.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/users/me",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./returns.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/returns",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `context` property type must be array. [path: paths./orders.post.responses.409.content.application/json.examples.duplicate-order.value.context]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/orders",
        "post",
        "responses",
        409,
        "content",
        "application/json",
        "examples",
        "duplicate-order",
        "value",
        "context"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `context` property type must be array. [path: paths./orders.post.responses.422.content.application/json.examples.validation-failure.value.context]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/orders",
        "post",
        "responses",
        422,
        "content",
        "application/json",
        "examples",
        "validation-failure",
        "value",
        "context"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./accounting.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/accounting",
        "get",
        "responses"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Component: \"authHeader\" is never used. [path: components.parameters.authHeader]",
    "severity": 2,
    "code": "no-unused-components",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "parameters",
        "authHeader"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1663,
        "character": 32
      },
      "end": {
        "line": 1664,
        "character": 33
      }
    },
    "message": "\"context\" property type must be array [path: paths./orders.post.responses.409.content.application/json.examples.duplicate-order.value.context]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/orders",
        "post",
        "responses",
        "409",
        "content",
        "application/json",
        "examples",
        "duplicate-order",
        "value",
        "context"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1695,
        "character": 32
      },
      "end": {
        "line": 1696,
        "character": 33
      }
    },
    "message": "\"context\" property type must be array [path: paths./orders.post.responses.422.content.application/json.examples.validation-failure.value.context]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/orders",
        "post",
        "responses",
        "422",
        "content",
        "application/json",
        "examples",
        "validation-failure",
        "value",
        "context"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2648,
        "character": 23
      },
      "end": {
        "line": 2648,
        "character": 30
      }
    },
    "message": "\"example\" property type must be array [path: paths./accounting.get.parameters.6.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/accounting",
        "get",
        "parameters",
        "6",
        "example"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2900,
        "character": 19
      },
      "end": {
        "line": 2906,
        "character": 26
      }
    },
    "message": "Potentially unused component has been detected. [path: components.parameters.authHeader]",
    "severity": 2,
    "code": "oas3-unused-component",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "parameters",
        "authHeader"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2966,
        "character": 19
      },
      "end": {
        "line": 2966,
        "character": 26
      }
    },
    "message": "\"example\" property type must be array [path: components.parameters.warehouseParam.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "parameters",
        "warehouseParam",
        "example"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2980,
        "character": 19
      },
      "end": {
        "line": 2980,
        "character": 47
      }
    },
    "message": "\"example\" property type must be array [path: components.parameters.externalSkuNameParam.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "parameters",
        "externalSkuNameParam",
        "example"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Found 9 absolute http references: [(('components', 'securitySchemes', 'fdcAuth', 'flows', 'implicit', 'authorizationUrl'), 'authorizationUrl', 'https://api.fulfillment.com/v2/oauth/authorize'), (('components', 'securitySchemes', 'fdcAuth', 'flows', 'password', 'tokenUrl'), 'tokenUrl', 'https://api.fulfillment.com/v2/oauth/access_token'), (('components', 'securitySchemes', 'fdcAuth', 'flows', 'password', 'refreshUrl'), 'refreshUrl', 'https://api.fulfillment.com/v2/oauth/access_token'), (('paths', '/track', 'get', 'responses', '200', 'content', 'application/json', 'schema', 'properties', 'origin', 'properties', 'geometry', 'externalDocs', 'url'), 'url', 'http://geojson.org/geojson-spec.html#geometry-objects'), (('paths', '/track', 'get', 'responses', '200', 'content', 'application/json', 'schema', 'properties', 'origin', 'externalDocs', 'url'), 'url', 'https://tools.ietf.org/html/rfc7946#section-3.2'), (('servers', 0, 'url'), 'url', 'https://api.fulfillment.com/v2'), (('info', 'termsOfService'), 'termsOfService', 'https://fulfillment.github.io/api/terms/'), (('info', 'contact', 'url'), 'url', 'https://fulfillment.com'), (('info', 'x-logo', 'url'), 'url', 'https://fulfillment.github.io/api/FDC_API_144x144.png')]",
    "severity": 3,
    "code": "found-absolute-http-references",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec",
      "absoluteRefsCount": "9"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Security scheme 'apiKey' is defined in components.securitySchemes but not used in any security requirement.",
    "severity": 2,
    "code": "UNUSED_SECURITY_SCHEME_DEFINED",
    "code_description": null,
    "source": "default-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "securitySchemes"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Every operation should have security defined on it or on the root level. [path: paths./oauth/access_token.post]",
    "severity": 1,
    "code": "security-defined",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/oauth/access_token",
        "post"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Every operation should have security defined on it or on the root level. [path: paths./track.get]",
    "severity": 1,
    "code": "security-defined",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/track",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Info object should contain `license` field. [path: info]",
    "severity": 2,
    "code": "info-license",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "info"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object `description` must be non-empty string. [path: tags.2.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        2,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object `description` must be non-empty string. [path: tags.3.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        3,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object `description` must be non-empty string. [path: tags.4.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        4,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object `description` must be non-empty string. [path: tags.6.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        6,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Tag object `description` must be non-empty string. [path: tags.7.description]",
    "severity": 2,
    "code": "tag-description",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "tags",
        7,
        "description"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./users/me.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/users/me",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./returns.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/returns",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `context` property type must be array. [path: paths./orders.post.responses.409.content.application/json.examples.duplicate-order.value.context]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/orders",
        "post",
        "responses",
        409,
        "content",
        "application/json",
        "examples",
        "duplicate-order",
        "value",
        "context"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Example value must conform to the schema: `context` property type must be array. [path: paths./orders.post.responses.422.content.application/json.examples.validation-failure.value.context]",
    "severity": 2,
    "code": "no-invalid-media-type-examples",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/orders",
        "post",
        "responses",
        422,
        "content",
        "application/json",
        "examples",
        "validation-failure",
        "value",
        "context"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation must have at least one `4XX` response. [path: paths./accounting.get.responses]",
    "severity": 2,
    "code": "operation-4xx-response",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/accounting",
        "get",
        "responses"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Component: \"authHeader\" is never used. [path: components.parameters.authHeader]",
    "severity": 2,
    "code": "no-unused-components",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "parameters",
        "authHeader"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1663,
        "character": 32
      },
      "end": {
        "line": 1664,
        "character": 33
      }
    },
    "message": "\"context\" property type must be array [path: paths./orders.post.responses.409.content.application/json.examples.duplicate-order.value.context]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/orders",
        "post",
        "responses",
        "409",
        "content",
        "application/json",
        "examples",
        "duplicate-order",
        "value",
        "context"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 1695,
        "character": 32
      },
      "end": {
        "line": 1696,
        "character": 33
      }
    },
    "message": "\"context\" property type must be array [path: paths./orders.post.responses.422.content.application/json.examples.validation-failure.value.context]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/orders",
        "post",
        "responses",
        "422",
        "content",
        "application/json",
        "examples",
        "validation-failure",
        "value",
        "context"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2648,
        "character": 23
      },
      "end": {
        "line": 2648,
        "character": 30
      }
    },
    "message": "\"example\" property type must be array [path: paths./accounting.get.parameters.6.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/accounting",
        "get",
        "parameters",
        "6",
        "example"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2900,
        "character": 19
      },
      "end": {
        "line": 2906,
        "character": 26
      }
    },
    "message": "Potentially unused component has been detected. [path: components.parameters.authHeader]",
    "severity": 2,
    "code": "oas3-unused-component",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "parameters",
        "authHeader"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2966,
        "character": 19
      },
      "end": {
        "line": 2966,
        "character": 26
      }
    },
    "message": "\"example\" property type must be array [path: components.parameters.warehouseParam.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "parameters",
        "warehouseParam",
        "example"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 2980,
        "character": 19
      },
      "end": {
        "line": 2980,
        "character": 47
      }
    },
    "message": "\"example\" property type must be array [path: components.parameters.externalSkuNameParam.example]",
    "severity": 1,
    "code": "oas3-valid-media-example",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "parameters",
        "externalSkuNameParam",
        "example"
      ],
      "target": "import-url_bundled-spec"
    }
  }
]