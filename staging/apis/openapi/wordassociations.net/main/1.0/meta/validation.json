[
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Found 2 absolute http references: [(('servers', 0, 'url'), 'url', 'https://api.wordassociations.net/associations/v1.0'), (('info', 'termsOfService'), 'termsOfService', 'https://wordassociations.net/en/api')]",
    "severity": 3,
    "code": "found-absolute-http-references",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec",
      "absoluteRefsCount": "2"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Security scheme 'internalApiKey' is defined in components.securitySchemes but not used in any security requirement.",
    "severity": 2,
    "code": "UNUSED_SECURITY_SCHEME_DEFINED",
    "code_description": null,
    "source": "default-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "securitySchemes"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/x-www-form-urlencoded': {'schema': {'properties': {'indent': {'default': 'yes', 'description': 'Indentation switch for pretty printing of JSON response.\\nAllows to either turn on or off space indentation for a response.\\nThe following values are allowed:\\n* yes - turns indentation with spaces on;\\n* no - turn indentation with spaces off;\\n', 'enum': ['yes', 'no'], 'type': 'string'}, 'lang': {'description': 'Query language. Use language code for the language of the text:\\n* de - German;\\n* en - English;\\n* es - Spanish;\\n* fr - French;\\n* it - Italian;\\n* pt - Portuguese;\\n* ru - Russian;\\n', 'enum': ['de', 'en', 'es', 'fr', 'it', 'pt', 'ru'], 'type': 'string'}, 'limit': {'default': 50, 'description': 'Maximum number of results to return.\\nAllows to limit the number of results (associations) in response.\\nThe value of this parameter is an integer number from 1 to 300 inclusive.\\n', 'maximum': 300, 'minimum': 1, 'type': 'integer'}, 'pos': {'default': ['noun', 'adjective', 'verb', 'adverb'], 'description': 'Parts of speech to return.\\nAllows to limit results by specified parts of speech. The value of this parameter is a list of parts of speech separated by comma.\\nThe following parts of speech codes are supported:\\n* noun\\n* adjective\\n* verb\\n* adverb\\n', 'items': {'collectionFormat': 'csv', 'enum': ['noun', 'adjective', 'verb', 'adverb'], 'type': 'string'}, 'type': 'array'}, 'text': {'description': \"Word or phrase to find associations with.\\nTip. You can use multiple parameters 'text' in a request (from 1 to 10 inclusive). This way you can get associations for several input words or phrases in one response.\\nRestriction: regardless of the size of the text association lookup is always performed by the first 10 words of the text.\\n\", 'items': {'type': 'string'}, 'maxItems': 10, 'minItems': 1, 'type': 'array'}, 'type': {'default': 'stimulus', 'description': 'Type of result.\\nPossible values: \\n* stimulus - an input data (the text parameter) is considered as a response word. The service returns a list of stimuli words, which evoke a given response word;\\n* response - an input data (the text parameter) is considered as a stimulus word. The service returns a list of response words, which come to mind for a given stimulus word.\\n', 'enum': ['stimulus', 'response'], 'type': 'string'}}, 'required': ['text'], 'type': 'object'}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/json/search",
        "post",
        "requestBody"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./json/search.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/json/search",
        "get",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./json/search.post.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/json/search",
        "post",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `collectionFormat` is not expected here. [path: paths./json/search.post.requestBody.content.application/x-www-form-urlencoded.schema.properties.pos.items.collectionFormat]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/json/search",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "schema",
        "properties",
        "pos",
        "items",
        "collectionFormat"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Info object should contain `license` field. [path: info]",
    "severity": 2,
    "code": "info-license",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "info"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./json/search.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/json/search",
        "get",
        "operationId"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./json/search.post.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/json/search",
        "post",
        "operationId"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 19,
        "character": 12
      },
      "end": {
        "line": 140,
        "character": 75
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./json/search.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/json/search",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 19,
        "character": 12
      },
      "end": {
        "line": 140,
        "character": 75
      }
    },
    "message": "Operation must have non-empty \"tags\" array. [path: paths./json/search.get]",
    "severity": 2,
    "code": "operation-tags",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/json/search",
        "get"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 142,
        "character": 13
      },
      "end": {
        "line": 241,
        "character": 32
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./json/search.post]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/json/search",
        "post"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 142,
        "character": 13
      },
      "end": {
        "line": 241,
        "character": 32
      }
    },
    "message": "Operation must have non-empty \"tags\" array. [path: paths./json/search.post]",
    "severity": 2,
    "code": "operation-tags",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/json/search",
        "post"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 208,
        "character": 42
      },
      "end": {
        "line": 208,
        "character": 47
      }
    },
    "message": "Property \"collectionFormat\" is not expected to be here. [path: paths./json/search.post.requestBody.content.application/x-www-form-urlencoded.schema.properties.pos.items.collectionFormat]",
    "severity": 1,
    "code": "oas3-schema",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/json/search",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "schema",
        "properties",
        "pos",
        "items",
        "collectionFormat"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Found 2 absolute http references: [(('servers', 0, 'url'), 'url', 'https://api.wordassociations.net/associations/v1.0'), (('info', 'termsOfService'), 'termsOfService', 'https://wordassociations.net/en/api')]",
    "severity": 3,
    "code": "found-absolute-http-references",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec",
      "absoluteRefsCount": "2"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Security scheme 'internalApiKey' is defined in components.securitySchemes but not used in any security requirement.",
    "severity": 2,
    "code": "UNUSED_SECURITY_SCHEME_DEFINED",
    "code_description": null,
    "source": "default-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "securitySchemes"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/x-www-form-urlencoded': {'schema': {'properties': {'indent': {'default': 'yes', 'description': 'Indentation switch for pretty printing of JSON response.\\nAllows to either turn on or off space indentation for a response.\\nThe following values are allowed:\\n* yes - turns indentation with spaces on;\\n* no - turn indentation with spaces off;\\n', 'enum': ['yes', 'no'], 'type': 'string'}, 'lang': {'description': 'Query language. Use language code for the language of the text:\\n* de - German;\\n* en - English;\\n* es - Spanish;\\n* fr - French;\\n* it - Italian;\\n* pt - Portuguese;\\n* ru - Russian;\\n', 'enum': ['de', 'en', 'es', 'fr', 'it', 'pt', 'ru'], 'type': 'string'}, 'limit': {'default': 50, 'description': 'Maximum number of results to return.\\nAllows to limit the number of results (associations) in response.\\nThe value of this parameter is an integer number from 1 to 300 inclusive.\\n', 'maximum': 300, 'minimum': 1, 'type': 'integer'}, 'pos': {'default': ['noun', 'adjective', 'verb', 'adverb'], 'description': 'Parts of speech to return.\\nAllows to limit results by specified parts of speech. The value of this parameter is a list of parts of speech separated by comma.\\nThe following parts of speech codes are supported:\\n* noun\\n* adjective\\n* verb\\n* adverb\\n', 'items': {'collectionFormat': 'csv', 'enum': ['noun', 'adjective', 'verb', 'adverb'], 'type': 'string'}, 'type': 'array'}, 'text': {'description': \"Word or phrase to find associations with.\\nTip. You can use multiple parameters 'text' in a request (from 1 to 10 inclusive). This way you can get associations for several input words or phrases in one response.\\nRestriction: regardless of the size of the text association lookup is always performed by the first 10 words of the text.\\n\", 'items': {'type': 'string'}, 'maxItems': 10, 'minItems': 1, 'type': 'array'}, 'type': {'default': 'stimulus', 'description': 'Type of result.\\nPossible values: \\n* stimulus - an input data (the text parameter) is considered as a response word. The service returns a list of stimuli words, which evoke a given response word;\\n* response - an input data (the text parameter) is considered as a stimulus word. The service returns a list of response words, which come to mind for a given stimulus word.\\n', 'enum': ['stimulus', 'response'], 'type': 'string'}}, 'required': ['text'], 'type': 'object'}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/json/search",
        "post",
        "requestBody"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./json/search.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/json/search",
        "get",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./json/search.post.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/json/search",
        "post",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `collectionFormat` is not expected here. [path: paths./json/search.post.requestBody.content.application/x-www-form-urlencoded.schema.properties.pos.items.collectionFormat]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/json/search",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "schema",
        "properties",
        "pos",
        "items",
        "collectionFormat"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Info object should contain `license` field. [path: info]",
    "severity": 2,
    "code": "info-license",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "info"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./json/search.get.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/json/search",
        "get",
        "operationId"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `operationId` field. [path: paths./json/search.post.operationId]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/json/search",
        "post",
        "operationId"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 19,
        "character": 12
      },
      "end": {
        "line": 140,
        "character": 75
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./json/search.get]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/json/search",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 19,
        "character": 12
      },
      "end": {
        "line": 140,
        "character": 75
      }
    },
    "message": "Operation must have non-empty \"tags\" array. [path: paths./json/search.get]",
    "severity": 2,
    "code": "operation-tags",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/json/search",
        "get"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 142,
        "character": 13
      },
      "end": {
        "line": 241,
        "character": 32
      }
    },
    "message": "Operation must have \"operationId\". [path: paths./json/search.post]",
    "severity": 2,
    "code": "operation-operationId",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/json/search",
        "post"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 142,
        "character": 13
      },
      "end": {
        "line": 241,
        "character": 32
      }
    },
    "message": "Operation must have non-empty \"tags\" array. [path: paths./json/search.post]",
    "severity": 2,
    "code": "operation-tags",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/json/search",
        "post"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 208,
        "character": 42
      },
      "end": {
        "line": 208,
        "character": 47
      }
    },
    "message": "Property \"collectionFormat\" is not expected to be here. [path: paths./json/search.post.requestBody.content.application/x-www-form-urlencoded.schema.properties.pos.items.collectionFormat]",
    "severity": 1,
    "code": "oas3-schema",
    "code_description": null,
    "source": "spectral-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/json/search",
        "post",
        "requestBody",
        "content",
        "application/x-www-form-urlencoded",
        "schema",
        "properties",
        "pos",
        "items",
        "collectionFormat"
      ],
      "target": "import-url_bundled-spec"
    }
  }
]