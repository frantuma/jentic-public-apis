[
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Found 4 absolute http references: [(('components', 'securitySchemes', 'oauth2', 'flows', 'authorizationCode', 'authorizationUrl'), 'authorizationUrl', 'https://api.vercel.com/oauth/authorize'), (('components', 'securitySchemes', 'oauth2', 'flows', 'authorizationCode', 'tokenUrl'), 'tokenUrl', 'https://api.vercel.com/oauth/access_token'), (('servers', 0, 'url'), 'url', 'https://api.vercel.com'), (('info', 'contact', 'url'), 'url', 'https://vercel.com/support')]",
    "severity": 3,
    "code": "found-absolute-http-references",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec",
      "absoluteRefsCount": "4"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Security scheme 'oauth2' is defined in components.securitySchemes but not used in any security requirement.",
    "severity": 2,
    "code": "UNUSED_SECURITY_SCHEME_DEFINED",
    "code_description": null,
    "source": "default-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "securitySchemes"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'enum': ['running', 'succeeded', 'failed']}, 'statusText': {'type': 'string'}, 'outcomes': {'type': 'array', 'items': {'oneOf': [{'type': 'object', 'properties': {'kind': {'type': 'string', 'const': 'resource-secrets'}, 'secrets': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'value': {'type': 'string'}}, 'required': ['name', 'value'], 'additionalProperties': False}}}, 'required': ['kind', 'secrets'], 'additionalProperties': False}]}}}, 'required': [], 'additionalProperties': False}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/deployments/{deploymentId}/integrations/{integrationConfigurationId}/resources/{resourceId}/actions/{action}",
        "patch",
        "requestBody"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/json': {'schema': {'required': ['type'], 'properties': {'type': {'description': 'The type of record, it could be one of the valid DNS records.', 'type': 'string', 'enum': ['A', 'AAAA', 'ALIAS', 'CAA', 'CNAME', 'HTTPS', 'MX', 'SRV', 'TXT', 'NS']}}, 'anyOf': [{'type': 'object', 'additionalProperties': False, 'required': ['type', 'value', 'name'], 'properties': {'name': {'description': 'A subdomain name or an empty string for the root domain.', 'type': 'string', 'example': 'subdomain'}, 'type': {'description': 'Must be of type `A`.', 'type': 'string', 'enum': ['A']}, 'ttl': {'description': 'The TTL value. Must be a number between 60 and 2147483647. Default value is 60.', 'type': 'number', 'minimum': 60, 'maximum': 2147483647, 'example': 60}, 'value': {'description': 'The record value must be a valid IPv4 address.', 'type': 'string', 'format': 'ipv4', 'example': '192.0.2.42'}, 'comment': {'type': 'string', 'description': 'A comment to add context on what this DNS record is for', 'example': 'used to verify ownership of domain', 'maxLength': 500}}}, {'type': 'object', 'additionalProperties': False, 'required': ['type', 'value', 'name'], 'properties': {'name': {'description': 'A subdomain name or an empty string for the root domain.', 'type': 'string', 'example': 'subdomain'}, 'type': {'description': 'Must be of type `AAAA`.', 'type': 'string', 'enum': ['AAAA']}, 'ttl': {'description': 'The TTL value. Must be a number between 60 and 2147483647. Default value is 60.', 'type': 'number', 'minimum': 60, 'maximum': 2147483647, 'example': 60}, 'value': {'description': 'An AAAA record pointing to an IPv6 address.', 'type': 'string', 'format': 'ipv6', 'example': '2001:DB8::42'}, 'comment': {'type': 'string', 'description': 'A comment to add context on what this DNS record is for', 'example': 'used to verify ownership of domain', 'maxLength': 500}}}, {'type': 'object', 'additionalProperties': False, 'required': ['type', 'value', 'name'], 'properties': {'name': {'description': 'A subdomain name or an empty string for the root domain.', 'type': 'string', 'example': 'subdomain'}, 'type': {'description': 'Must be of type `ALIAS`.', 'type': 'string', 'enum': ['ALIAS']}, 'ttl': {'description': 'The TTL value. Must be a number between 60 and 2147483647. Default value is 60.', 'type': 'number', 'minimum': 60, 'maximum': 2147483647, 'example': 60}, 'value': {'description': 'An ALIAS virtual record pointing to a hostname resolved to an A record on server side.', 'type': 'string', 'example': 'cname.vercel-dns.com'}, 'comment': {'type': 'string', 'description': 'A comment to add context on what this DNS record is for', 'example': 'used to verify ownership of domain', 'maxLength': 500}}}, {'type': 'object', 'additionalProperties': False, 'required': ['type', 'value', 'name'], 'properties': {'name': {'description': 'A subdomain name or an empty string for the root domain.', 'type': 'string', 'example': 'subdomain'}, 'type': {'description': 'Must be of type `CAA`.', 'type': 'string', 'enum': ['CAA']}, 'ttl': {'description': 'The TTL value. Must be a number between 60 and 2147483647. Default value is 60.', 'type': 'number', 'minimum': 60, 'maximum': 2147483647, 'example': 60}, 'value': {'description': 'A CAA record to specify which Certificate Authorities (CAs) are allowed to issue certificates for the domain.', 'type': 'string', 'example': '0 issue \\\\\"letsencrypt.org\\\\\"'}, 'comment': {'type': 'string', 'description': 'A comment to add context on what this DNS record is for', 'example': 'used to verify ownership of domain', 'maxLength': 500}}}, {'type': 'object', 'additionalProperties': False, 'required': ['type', 'name'], 'properties': {'name': {'description': 'A subdomain name or an empty string for the root domain.', 'type': 'string', 'example': 'subdomain'}, 'type': {'description': 'Must be of type `CNAME`.', 'type': 'string', 'enum': ['CNAME']}, 'ttl': {'description': 'The TTL value. Must be a number between 60 and 2147483647. Default value is 60.', 'type': 'number', 'minimum': 60, 'maximum': 2147483647, 'example': 60}, 'value': {'description': 'A CNAME record mapping to another domain name.', 'type': 'string', 'example': 'cname.vercel-dns.com'}, 'comment': {'type': 'string', 'description': 'A comment to add context on what this DNS record is for', 'example': 'used to verify ownership of domain', 'maxLength': 500}}}, {'type': 'object', 'additionalProperties': False, 'required': ['type', 'value', 'name', 'mxPriority'], 'properties': {'name': {'description': 'A subdomain name or an empty string for the root domain.', 'type': 'string', 'example': 'subdomain'}, 'type': {'description': 'Must be of type `MX`.', 'type': 'string', 'enum': ['MX']}, 'ttl': {'description': 'The TTL value. Must be a number between 60 and 2147483647. Default value is 60.', 'type': 'number', 'minimum': 60, 'maximum': 2147483647, 'example': 60}, 'value': {'description': 'An MX record specifying the mail server responsible for accepting messages on behalf of the domain name.', 'type': 'string', 'example': '10 mail.example.com.'}, 'mxPriority': {'type': 'number', 'minimum': 0, 'maximum': 65535, 'example': 10}, 'comment': {'type': 'string', 'description': 'A comment to add context on what this DNS record is for', 'example': 'used to verify ownership of domain', 'maxLength': 500}}}, {'type': 'object', 'additionalProperties': False, 'required': ['type', 'name', 'srv'], 'properties': {'name': {'description': 'A subdomain name or an empty string for the root domain.', 'type': 'string', 'name': 'subdomain'}, 'type': {'description': 'Must be of type `SRV`.', 'type': 'string', 'enum': ['SRV']}, 'ttl': {'description': 'The TTL value. Must be a number between 60 and 2147483647. Default value is 60.', 'type': 'number', 'minimum': 60, 'maximum': 2147483647, 'example': 60}, 'srv': {'type': 'object', 'additionalProperties': False, 'required': ['weight', 'port', 'priority', 'target'], 'properties': {'priority': {'anyOf': [{'type': 'number', 'minimum': 0, 'maximum': 65535, 'example': 10}, {'type': 'null'}]}, 'weight': {'anyOf': [{'type': 'number', 'minimum': 0, 'maximum': 65535, 'example': 10}, {'type': 'null'}]}, 'port': {'anyOf': [{'type': 'number', 'minimum': 0, 'maximum': 65535, 'example': 5000}, {'type': 'null'}]}, 'target': {'type': 'string', 'example': 'host.example.com'}}}, 'comment': {'type': 'string', 'description': 'A comment to add context on what this DNS record is for', 'example': 'used to verify ownership of domain', 'maxLength': 500}}}, {'type': 'object', 'additionalProperties': False, 'required': ['type', 'value', 'name'], 'properties': {'name': {'description': 'A subdomain name or an empty string for the root domain.', 'type': 'string', 'name': 'subdomain'}, 'type': {'description': 'Must be of type `TXT`.', 'type': 'string', 'enum': ['TXT']}, 'ttl': {'description': 'The TTL value. Must be a number between 60 and 2147483647. Default value is 60.', 'type': 'number', 'minimum': 60, 'maximum': 2147483647, 'example': 60}, 'value': {'description': 'A TXT record containing arbitrary text.', 'type': 'string', 'example': 'hello'}, 'comment': {'type': 'string', 'description': 'A comment to add context on what this DNS record is for', 'example': 'used to verify ownership of domain', 'maxLength': 500}}}, {'type': 'object', 'additionalProperties': False, 'required': ['type', 'name'], 'properties': {'name': {'description': 'A subdomain name.', 'type': 'string', 'example': 'subdomain'}, 'type': {'description': 'Must be of type `NS`.', 'type': 'string', 'enum': ['NS']}, 'ttl': {'description': 'The TTL value. Must be a number between 60 and 2147483647. Default value is 60.', 'type': 'number', 'minimum': 60, 'maximum': 2147483647, 'example': 60}, 'value': {'description': 'An NS domain value.', 'type': 'string', 'example': 'ns1.example.com'}, 'comment': {'type': 'string', 'description': 'A comment to add context on what this DNS record is for', 'example': 'used to verify ownership of domain', 'maxLength': 500}}}, {'type': 'object', 'additionalProperties': False, 'required': ['type', 'name', 'https'], 'properties': {'name': {'description': 'A subdomain name or an empty string for the root domain.', 'type': 'string', 'name': 'subdomain'}, 'type': {'description': 'Must be of type `HTTPS`.', 'type': 'string', 'enum': ['HTTPS']}, 'ttl': {'description': 'The TTL value. Must be a number between 60 and 2147483647. Default value is 60.', 'type': 'number', 'minimum': 60, 'maximum': 2147483647, 'example': 60}, 'https': {'type': 'object', 'additionalProperties': False, 'required': ['priority', 'target'], 'properties': {'priority': {'anyOf': [{'type': 'number', 'minimum': 0, 'maximum': 65535, 'example': 10}, {'type': 'null'}]}, 'target': {'type': 'string', 'example': 'host.example.com'}, 'params': {'type': 'string', 'example': 'alpn=h2,h3'}}}, 'comment': {'type': 'string', 'description': 'A comment to add context on what this DNS record is for', 'example': 'used to verify ownership of domain', 'maxLength': 500}}}]}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/domains/{domain}/records",
        "post",
        "requestBody"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/json': {'schema': {'properties': {'additionalProperties': False, 'name': {'type': 'string', 'description': 'The name of the DNS record', 'example': 'example-1', 'nullable': True}, 'value': {'type': 'string', 'description': 'The value of the DNS record', 'example': 'google.com', 'nullable': True}, 'type': {'enum': ['A', 'AAAA', 'ALIAS', 'CAA', 'CNAME', 'HTTPS', 'MX', 'SRV', 'TXT', 'NS'], 'type': 'string', 'description': 'The type of the DNS record', 'example': 'A', 'maxLength': 255, 'nullable': True}, 'ttl': {'type': 'integer', 'description': 'The Time to live (TTL) value of the DNS record', 'example': '60', 'minimum': 60, 'maximum': 2147483647, 'nullable': True}, 'mxPriority': {'type': 'integer', 'description': 'The MX priority value of the DNS record', 'nullable': True}, 'srv': {'additionalProperties': False, 'required': ['target', 'weight', 'port', 'priority'], 'properties': {'target': {'type': 'string', 'description': '', 'example': 'example2.com.', 'maxLength': 255, 'nullable': True}, 'weight': {'description': '', 'type': 'integer', 'nullable': True}, 'port': {'description': '', 'type': 'integer', 'nullable': True}, 'priority': {'description': '', 'type': 'integer', 'nullable': True}}, 'type': 'object', 'nullable': True}, 'https': {'additionalProperties': False, 'required': ['priority', 'target'], 'properties': {'priority': {'description': '', 'type': 'integer', 'nullable': True}, 'target': {'type': 'string', 'description': '', 'example': 'example2.com.', 'maxLength': 255, 'nullable': True}, 'params': {'description': '', 'type': 'string', 'nullable': True}}, 'type': 'object', 'nullable': True}, 'comment': {'type': 'string', 'description': 'A comment to add context on what this DNS record is for', 'example': 'used to verify ownership of domain', 'maxLength': 500}}, 'type': 'object'}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/domains/records/{recordId}",
        "patch",
        "requestBody"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'name': 'domain', 'in': 'path', 'schema': {'type': 'string'}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v3/domains/{domain}",
        "patch",
        "parameters",
        0
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/json': {'schema': {'type': 'object', 'additionalProperties': False, 'required': ['deliveryFormat', 'url', 'sources'], 'properties': {'deliveryFormat': {'description': 'The delivery log format', 'example': 'json', 'enum': ['json', 'ndjson']}, 'url': {'description': 'The log drain url', 'format': 'uri', 'pattern': '^(http|https)?://', 'type': 'string'}, 'headers': {'description': 'Headers to be sent together with the request', 'type': 'object', 'additionalProperties': {'type': 'string'}}, 'projectIds': {'minItems': 1, 'maxItems': 50, 'type': 'array', 'items': {'pattern': '^[a-zA-z0-9_]+$', 'type': 'string'}}, 'sources': {'type': 'array', 'uniqueItems': True, 'items': {'type': 'string', 'enum': ['static', 'lambda', 'build', 'edge', 'external', 'firewall']}, 'minItems': 1}, 'environments': {'type': 'array', 'uniqueItems': True, 'items': {'type': 'string', 'enum': ['preview', 'production']}, 'minItems': 1}, 'secret': {'description': 'Custom secret of log drain', 'type': 'string'}, 'samplingRate': {'type': 'number', 'description': 'The sampling rate for this log drain. It should be a percentage rate between 0 and 100. With max 2 decimal points', 'multiplesOf': 0.01, 'minimum': 0.01, 'maximum': 1}, 'name': {'type': 'string', 'description': 'The custom name of this log drain.'}}}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/log-drains",
        "post",
        "requestBody"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/json': {'schema': {'type': 'object', 'required': ['slug'], 'properties': {'slug': {'maxLength': 64, 'pattern': '^[\\\\\\\\w-]+$', 'type': 'string'}, 'items': {'type': 'object', 'propertyNames': {'maxLength': 256, 'pattern': '^[\\\\\\\\w-]+$', 'type': 'string'}, 'additionalProperties': {}}}}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/edge-config",
        "post",
        "requestBody"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/json': {'schema': {'type': 'object', 'additionalProperties': False, 'required': ['items', 'definition'], 'properties': {'items': {'type': 'array', 'items': {'oneOf': [{'type': 'object', 'properties': {'operation': {'enum': ['create', 'update', 'upsert', 'delete']}, 'key': {'maxLength': 256, 'pattern': '^[\\\\\\\\w-]+$', 'type': 'string'}, 'value': {}, 'description': {'oneOf': [{'type': 'string', 'maxLength': 512}, {'type': 'null'}]}}, 'anyOf': [{'properties': {'operation': {'const': 'create'}}, 'required': ['operation', 'key', 'value']}, {'properties': {'operation': {'enum': ['update', 'upsert']}}, 'required': ['operation', 'key', 'value']}, {'properties': {'operation': {'enum': ['update', 'upsert']}}, 'required': ['operation', 'key', 'description']}, {'properties': {'operation': {'const': 'delete'}}, 'required': ['operation', 'key'], 'not': {'required': ['value', 'description']}}]}]}}, 'definition': {}}}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/edge-config/{edgeConfigId}/items",
        "patch",
        "requestBody"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'name': 'namespaceId', 'in': 'query', 'schema': {'type': ['string', 'number'], 'nullable': True}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/integrations/search-repo",
        "get",
        "parameters",
        1
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/json': {'schema': {'type': 'object', 'additionalProperties': False, 'required': ['data'], 'properties': {'data': {'type': 'object', 'propertyNames': {'maxLength': 256, 'pattern': '^[\\\\\\\\w-]+$', 'type': 'string'}, 'additionalProperties': {}}}}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/installations/{integrationConfigurationId}/resources/{resourceId}/experimentation/edge-config",
        "put",
        "requestBody"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/json': {'schema': {'type': 'object', 'properties': {'slug': {'description': 'The slug of the custom environment to create.', 'type': 'string', 'maxLength': 32, 'errorMessage': 'Slug must be 32 characters or less.'}, 'description': {'description': 'Description of the custom environment. This is optional.', 'type': 'string', 'maxLength': 256, 'errorMessage': 'Description must be 256 characters or less.'}, 'branchMatcher': {'required': ['type', 'pattern'], 'description': 'How we want to determine a matching branch. This is optional.', 'type': 'object', 'properties': {'type': {'description': 'Type of matcher. One of \\\\\"equals\\\\\", \\\\\"startsWith\\\\\", or \\\\\"endsWith\\\\\".', 'enum': ['equals', 'startsWith', 'endsWith']}, 'pattern': {'description': 'Git branch name or portion thereof.', 'type': 'string', 'maxLength': 100, 'errorMessage': 'Branch matcher pattern must be 100 characters or less.'}}}, 'copyEnvVarsFrom': {'description': 'Where to copy environment variables from. This is optional.', 'type': 'string'}}}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}/custom-environments",
        "post",
        "requestBody"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/json': {'schema': {'type': 'object', 'properties': {'slug': {'description': 'The slug of the custom environment.', 'type': 'string', 'maxLength': 32, 'errorMessage': 'Slug must be 32 characters or less.'}, 'description': {'description': 'Description of the custom environment. This is optional.', 'type': 'string', 'maxLength': 256, 'errorMessage': 'Description must be 256 characters or less.'}, 'branchMatcher': {'required': ['type', 'pattern'], 'description': 'How we want to determine a matching branch. This is optional.', 'type': 'object', 'properties': {'type': {'description': 'Type of matcher. One of \\\\\"equals\\\\\", \\\\\"startsWith\\\\\", or \\\\\"endsWith\\\\\".', 'enum': ['equals', 'startsWith', 'endsWith']}, 'pattern': {'description': 'Git branch name or portion thereof.', 'type': 'string', 'maxLength': 100, 'errorMessage': 'Branch matcher pattern must be 100 characters or less.'}}, 'nullable': True}}}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}/custom-environments/{environmentSlugOrId}",
        "patch",
        "requestBody"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/json': {'schema': {'type': 'object', 'required': [], 'properties': {'deleteUnassignedEnvironmentVariables': {'description': 'Delete Environment Variables that are not assigned to any environments.', 'type': 'boolean'}}}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}/custom-environments/{environmentSlugOrId}",
        "delete",
        "requestBody"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/json': {'schema': {'type': 'object', 'properties': {'revoke': {'description': 'Optional instructions for revoking and regenerating a automation bypass', 'type': 'object', 'properties': {'secret': {'description': 'Automation bypass to revoked', 'type': 'string'}, 'regenerate': {'description': 'Whether or not a new automation bypass should be created after the provided secret is revoked', 'type': 'boolean'}}, 'required': ['secret', 'regenerate']}, 'generate': {'description': 'Generate a new secret. If neither generate or revoke are provided, a new random secret will be generated.', 'type': 'object', 'properties': {'secret': {'description': 'Optional value of the secret to generate', 'type': 'string', 'pattern': '^[a-zA-Z0-9]{32}$', 'errorMessage': 'Invalid value for `generate.secret` provided. Must be a string with a length of 32 characters. Cannot include special characters.'}}}}, 'additionalProperties': False}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/projects/{idOrName}/protection-bypass",
        "patch",
        "requestBody"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/json': {'schema': {'type': 'object', 'properties': {'firewallEnabled': {'type': 'boolean'}, 'managedRules': {'type': 'object', 'additionalProperties': {'anyOf': [{'not': {}}, {'type': 'object', 'properties': {'active': {'type': 'boolean'}, 'action': {'type': 'string', 'enum': ['log', 'challenge', 'deny']}, 'ruleGroups': {'type': 'object', 'additionalProperties': {'type': 'object', 'properties': {'active': {'type': 'boolean'}, 'action': {'type': 'string', 'enum': ['log', 'challenge', 'deny']}}, 'additionalProperties': False}}}, 'required': ['active'], 'additionalProperties': False}]}}, 'crs': {'type': 'object', 'properties': {'sd': {'type': 'object', 'properties': {'active': {'type': 'boolean'}, 'action': {'type': 'string', 'enum': ['deny', 'log']}}, 'required': ['active', 'action'], 'additionalProperties': False}, 'ma': {'type': 'object', 'properties': {'active': {'type': 'boolean'}, 'action': {'type': 'string', 'enum': ['deny', 'log']}}, 'required': ['active', 'action'], 'additionalProperties': False}, 'lfi': {'type': 'object', 'properties': {'active': {'type': 'boolean'}, 'action': {'type': 'string', 'enum': ['deny', 'log']}}, 'required': ['active', 'action'], 'additionalProperties': False}, 'rfi': {'type': 'object', 'properties': {'active': {'type': 'boolean'}, 'action': {'type': 'string', 'enum': ['deny', 'log']}}, 'required': ['active', 'action'], 'additionalProperties': False}, 'rce': {'type': 'object', 'properties': {'active': {'type': 'boolean'}, 'action': {'type': 'string', 'enum': ['deny', 'log']}}, 'required': ['active', 'action'], 'additionalProperties': False}, 'php': {'type': 'object', 'properties': {'active': {'type': 'boolean'}, 'action': {'type': 'string', 'enum': ['deny', 'log']}}, 'required': ['active', 'action'], 'additionalProperties': False}, 'gen': {'type': 'object', 'properties': {'active': {'type': 'boolean'}, 'action': {'type': 'string', 'enum': ['deny', 'log']}}, 'required': ['active', 'action'], 'additionalProperties': False}, 'xss': {'type': 'object', 'properties': {'active': {'type': 'boolean'}, 'action': {'type': 'string', 'enum': ['deny', 'log']}}, 'required': ['active', 'action'], 'additionalProperties': False}, 'sqli': {'type': 'object', 'properties': {'active': {'type': 'boolean'}, 'action': {'type': 'string', 'enum': ['deny', 'log']}}, 'required': ['active', 'action'], 'additionalProperties': False}, 'sf': {'type': 'object', 'properties': {'active': {'type': 'boolean'}, 'action': {'type': 'string', 'enum': ['deny', 'log']}}, 'required': ['active', 'action'], 'additionalProperties': False}, 'java': {'type': 'object', 'properties': {'active': {'type': 'boolean'}, 'action': {'type': 'string', 'enum': ['deny', 'log']}}, 'required': ['active', 'action'], 'additionalProperties': False}}, 'additionalProperties': False}, 'rules': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'string'}, 'name': {'type': 'string', 'maxLength': 160}, 'description': {'type': 'string', 'maxLength': 256}, 'active': {'type': 'boolean'}, 'conditionGroup': {'type': 'array', 'items': {'type': 'object', 'properties': {'conditions': {'type': 'array', 'items': {'type': 'object', 'properties': {'type': {'type': 'string', 'enum': ['host', 'path', 'method', 'header', 'query', 'cookie', 'target_path', 'raw_path', 'ip_address', 'region', 'protocol', 'scheme', 'environment', 'user_agent', 'geo_continent', 'geo_country', 'geo_country_region', 'geo_city', 'geo_as_number', 'ja4_digest', 'ja3_digest', 'rate_limit_api_id']}, 'op': {'type': 'string', 'enum': ['re', 'eq', 'neq', 'ex', 'nex', 'inc', 'ninc', 'pre', 'suf', 'sub', 'gt', 'gte', 'lt', 'lte']}, 'neg': {'type': 'boolean'}, 'key': {'type': 'string'}, 'value': {'anyOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}, 'maxItems': 75}, {'type': 'number'}]}}, 'required': ['type', 'op'], 'additionalProperties': False}, 'maxItems': 65}}, 'required': ['conditions'], 'additionalProperties': False}, 'maxItems': 25}, 'action': {'type': 'object', 'properties': {'mitigate': {'type': 'object', 'properties': {'action': {'type': 'string', 'enum': ['log', 'challenge', 'deny', 'bypass', 'rate_limit', 'redirect']}, 'rateLimit': {'anyOf': [{'type': 'object', 'properties': {'algo': {'type': 'string', 'enum': ['fixed_window', 'token_bucket']}, 'window': {'type': 'number'}, 'limit': {'type': 'number'}, 'keys': {'type': 'array', 'items': {'type': 'string'}}, 'action': {'anyOf': [{'type': 'string', 'enum': ['log', 'challenge', 'deny', 'rate_limit']}, {'type': 'null'}]}}, 'required': ['algo', 'window', 'limit', 'keys'], 'additionalProperties': False}, {'type': 'null'}]}, 'redirect': {'anyOf': [{'type': 'object', 'properties': {'location': {'type': 'string'}, 'permanent': {'type': 'boolean'}}, 'required': ['location', 'permanent'], 'additionalProperties': False}, {'type': 'null'}]}, 'actionDuration': {'type': 'string', 'nullable': True}, 'bypassSystem': {'type': 'boolean', 'nullable': True}}, 'required': ['action'], 'additionalProperties': False}}, 'additionalProperties': False}}, 'required': ['name', 'active', 'conditionGroup', 'action'], 'additionalProperties': False}}, 'ips': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'string'}, 'hostname': {'type': 'string'}, 'ip': {'type': 'string'}, 'notes': {'type': 'string'}, 'action': {'type': 'string', 'enum': ['deny', 'challenge', 'log', 'bypass']}}, 'required': ['hostname', 'ip', 'action'], 'additionalProperties': False}}}, 'required': ['firewallEnabled'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "put",
        "requestBody"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/json': {'schema': {'oneOf': [{'description': 'Enable Firewall', 'type': 'object', 'properties': {'action': {'type': 'string', 'const': 'firewallEnabled'}, 'id': {'type': 'null'}, 'value': {'type': 'boolean'}}, 'required': ['action', 'value'], 'additionalProperties': False}, {'description': 'Add a custom rule', 'type': 'object', 'properties': {'action': {'type': 'string', 'const': 'rules.insert'}, 'id': {'type': 'null'}, 'value': {'type': 'object', 'properties': {'name': {'type': 'string', 'maxLength': 160}, 'description': {'type': 'string', 'maxLength': 256}, 'active': {'type': 'boolean'}, 'conditionGroup': {'type': 'array', 'items': {'type': 'object', 'properties': {'conditions': {'type': 'array', 'items': {'type': 'object', 'properties': {'type': {'type': 'string', 'enum': ['host', 'path', 'method', 'header', 'query', 'cookie', 'target_path', 'raw_path', 'ip_address', 'region', 'protocol', 'scheme', 'environment', 'user_agent', 'geo_continent', 'geo_country', 'geo_country_region', 'geo_city', 'geo_as_number', 'ja4_digest', 'ja3_digest', 'rate_limit_api_id']}, 'op': {'type': 'string', 'enum': ['re', 'eq', 'neq', 'ex', 'nex', 'inc', 'ninc', 'pre', 'suf', 'sub', 'gt', 'gte', 'lt', 'lte']}, 'neg': {'type': 'boolean'}, 'key': {'type': 'string'}, 'value': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}, 'maxItems': 75}, {'type': 'number'}]}}, 'required': ['type', 'op'], 'additionalProperties': False}, 'maxItems': 65}}, 'required': ['conditions'], 'additionalProperties': False}, 'maxItems': 25}, 'action': {'type': 'object', 'properties': {'mitigate': {'type': 'object', 'properties': {'action': {'type': 'string', 'enum': ['log', 'challenge', 'deny', 'bypass', 'rate_limit', 'redirect']}, 'rateLimit': {'anyOf': [{'type': 'object', 'properties': {'algo': {'type': 'string', 'enum': ['fixed_window', 'token_bucket']}, 'window': {'type': 'number'}, 'limit': {'type': 'number'}, 'keys': {'type': 'array', 'items': {'type': 'string'}}, 'action': {'anyOf': [{'type': 'string', 'enum': ['log', 'challenge', 'deny', 'rate_limit']}, {'type': 'null'}]}}, 'required': ['algo', 'window', 'limit', 'keys'], 'additionalProperties': False}, {'type': 'null'}]}, 'redirect': {'anyOf': [{'type': 'object', 'properties': {'location': {'type': 'string'}, 'permanent': {'type': 'boolean'}}, 'required': ['location', 'permanent'], 'additionalProperties': False}, {'type': 'null'}]}, 'actionDuration': {'type': 'string', 'nullable': True}, 'bypassSystem': {'type': 'boolean', 'nullable': True}}, 'required': ['action'], 'additionalProperties': False}}, 'additionalProperties': False}}, 'required': ['name', 'active', 'conditionGroup', 'action'], 'additionalProperties': False}}, 'required': ['action', 'value'], 'additionalProperties': False}, {'description': 'Update a custom rule', 'type': 'object', 'properties': {'action': {'type': 'string', 'const': 'rules.update'}, 'id': {'type': 'string'}, 'value': {'type': 'object', 'properties': {'name': {'type': 'string', 'maxLength': 160}, 'description': {'type': 'string', 'maxLength': 256}, 'active': {'type': 'boolean'}, 'conditionGroup': {'type': 'array', 'items': {'type': 'object', 'properties': {'conditions': {'type': 'array', 'items': {'type': 'object', 'properties': {'type': {'type': 'string', 'enum': ['host', 'path', 'method', 'header', 'query', 'cookie', 'target_path', 'raw_path', 'ip_address', 'region', 'protocol', 'scheme', 'environment', 'user_agent', 'geo_continent', 'geo_country', 'geo_country_region', 'geo_city', 'geo_as_number', 'ja4_digest', 'ja3_digest', 'rate_limit_api_id']}, 'op': {'type': 'string', 'enum': ['re', 'eq', 'neq', 'ex', 'nex', 'inc', 'ninc', 'pre', 'suf', 'sub', 'gt', 'gte', 'lt', 'lte']}, 'neg': {'type': 'boolean'}, 'key': {'type': 'string'}, 'value': {'anyOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}, 'maxItems': 75}, {'type': 'number'}]}}, 'required': ['type', 'op'], 'additionalProperties': False}, 'maxItems': 65}}, 'required': ['conditions'], 'additionalProperties': False}, 'maxItems': 25}, 'action': {'type': 'object', 'properties': {'mitigate': {'type': 'object', 'properties': {'action': {'type': 'string', 'enum': ['log', 'challenge', 'deny', 'bypass', 'rate_limit', 'redirect']}, 'rateLimit': {'anyOf': [{'type': 'object', 'properties': {'algo': {'type': 'string', 'enum': ['fixed_window', 'token_bucket']}, 'window': {'type': 'number'}, 'limit': {'type': 'number'}, 'keys': {'type': 'array', 'items': {'type': 'string'}}, 'action': {'anyOf': [{'type': 'string', 'enum': ['log', 'challenge', 'deny', 'rate_limit']}, {'type': 'null'}]}}, 'required': ['algo', 'window', 'limit', 'keys'], 'additionalProperties': False}, {'type': 'null'}]}, 'redirect': {'anyOf': [{'type': 'object', 'properties': {'location': {'type': 'string'}, 'permanent': {'type': 'boolean'}}, 'required': ['location', 'permanent'], 'additionalProperties': False}, {'type': 'null'}]}, 'actionDuration': {'type': 'string', 'nullable': True}, 'bypassSystem': {'type': 'boolean', 'nullable': True}}, 'required': ['action'], 'additionalProperties': False}}, 'additionalProperties': False}}, 'required': ['name', 'active', 'conditionGroup', 'action'], 'additionalProperties': False}}, 'required': ['action', 'id', 'value'], 'additionalProperties': False}, {'description': 'Remove a custom rule', 'type': 'object', 'properties': {'action': {'type': 'string', 'const': 'rules.remove'}, 'id': {'type': 'string'}, 'value': {'type': 'null'}}, 'required': ['action', 'id'], 'additionalProperties': False}, {'description': 'Reorder a custom rule', 'type': 'object', 'properties': {'action': {'type': 'string', 'const': 'rules.priority'}, 'id': {'type': 'string'}, 'value': {'type': 'number'}}, 'required': ['action', 'id', 'value'], 'additionalProperties': False}, {'description': 'Enable a managed rule', 'type': 'object', 'properties': {'action': {'type': 'string', 'const': 'crs.update'}, 'id': {'type': 'string', 'enum': ['sd', 'ma', 'lfi', 'rfi', 'rce', 'php', 'gen', 'xss', 'sqli', 'sf', 'java']}, 'value': {'type': 'object', 'properties': {'active': {'type': 'boolean'}, 'action': {'type': 'string', 'enum': ['deny', 'log']}}, 'required': ['active', 'action'], 'additionalProperties': False}}, 'required': ['action', 'id', 'value'], 'additionalProperties': False}, {'description': 'Disable a managed rule', 'type': 'object', 'properties': {'action': {'type': 'string', 'const': 'crs.disable'}, 'id': {'type': 'null'}, 'value': {'type': 'null'}}, 'required': ['action'], 'additionalProperties': False}, {'description': 'Add an IP Blocking rule', 'type': 'object', 'properties': {'action': {'type': 'string', 'const': 'ip.insert'}, 'id': {'type': 'null'}, 'value': {'type': 'object', 'properties': {'hostname': {'type': 'string'}, 'ip': {'type': 'string'}, 'notes': {'type': 'string'}, 'action': {'type': 'string', 'enum': ['deny', 'challenge', 'log', 'bypass']}}, 'required': ['hostname', 'ip', 'action'], 'additionalProperties': False}}, 'required': ['action', 'value'], 'additionalProperties': False}, {'description': 'Update an IP Blocking rule', 'type': 'object', 'properties': {'action': {'type': 'string', 'const': 'ip.update'}, 'id': {'type': 'string'}, 'value': {'type': 'object', 'properties': {'hostname': {'type': 'string'}, 'ip': {'type': 'string'}, 'notes': {'type': 'string'}, 'action': {'type': 'string', 'enum': ['deny', 'challenge', 'log', 'bypass']}}, 'required': ['hostname', 'ip', 'action'], 'additionalProperties': False}}, 'required': ['action', 'id', 'value'], 'additionalProperties': False}, {'description': 'Remove an IPBlocking rule', 'type': 'object', 'properties': {'action': {'type': 'string', 'const': 'ip.remove'}, 'id': {'type': 'string'}, 'value': {'type': 'null'}}, 'required': ['action', 'id'], 'additionalProperties': False}, {'description': 'Update a managed ruleset', 'type': 'object', 'properties': {'action': {'type': 'string', 'const': 'managedRules.update'}, 'id': {'type': 'string'}, 'value': {'type': 'object', 'properties': {'action': {'type': 'string', 'enum': ['log', 'challenge', 'deny']}, 'active': {'type': 'boolean'}}, 'required': ['active'], 'additionalProperties': False}}, 'required': ['action', 'id', 'value'], 'additionalProperties': False}, {'description': 'Update a managed rule group', 'type': 'object', 'properties': {'action': {'type': 'string', 'const': 'managedRuleGroup.update'}, 'id': {'type': 'string'}, 'value': {'type': 'object', 'additionalProperties': {'type': 'object', 'properties': {'active': {'type': 'boolean'}, 'action': {'type': 'string', 'enum': ['log', 'challenge', 'deny']}}, 'required': ['active'], 'additionalProperties': False}}}, 'required': ['action', 'id', 'value'], 'additionalProperties': False}]}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'name': 'userId', 'in': 'path', 'required': False, 'schema': {'type': 'string'}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/teams/{teamId}/request/{userId}",
        "get",
        "parameters",
        0
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/json': {'schema': {'type': 'object', 'properties': {'confirmed': {'type': 'boolean', 'enum': [True], 'description': 'Accept a user who requested access to the team.', 'example': True}, 'role': {'type': 'string', 'description': 'The role in the team of the member.', 'default': ['MEMBER', 'VIEWER'], 'example': ['MEMBER', 'VIEWER']}, 'projects': {'type': 'array', 'items': {'type': 'object', 'additionalProperties': False, 'required': ['role', 'projectId'], 'properties': {'projectId': {'type': 'string', 'maxLength': 256, 'example': 'prj_ndlgr43fadlPyCtREAqxxdyFK', 'description': 'The ID of the project.'}, 'role': {'type': 'string', 'enum': ['ADMIN', 'PROJECT_VIEWER', 'PROJECT_DEVELOPER', None], 'example': 'ADMIN', 'description': 'The project role of the member that will be added. \\\\\"null\\\\\" will remove this project level role.', 'nullable': True}}}}, 'joinedFrom': {'additionalProperties': False, 'type': 'object', 'properties': {'ssoUserId': {'type': 'null'}}}}}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/teams/{teamId}/members/{uid}",
        "patch",
        "requestBody"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'description': 'The Team identifier to perform the request on behalf of.', 'in': 'path', 'name': 'teamId', 'schema': {'type': 'string'}, 'required': False} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/teams/{teamId}",
        "get",
        "parameters",
        1
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/json': {'schema': {'type': 'object', 'additionalProperties': False, 'properties': {'avatar': {'type': 'string', 'format': 'regex', 'regex': '^[0-9a-f]{40}$', 'description': 'The hash value of an uploaded image.'}, 'description': {'type': 'string', 'maxLength': 140, 'example': 'Our mission is to make cloud computing accessible to everyone', 'description': 'A short text that describes the team.'}, 'emailDomain': {'type': 'string', 'format': 'regex', 'regex': '\\\\\\\\b((?=[a-z0-9-]{1,63}\\\\\\\\.)(xn--)?[a-z0-9]+(-[a-z0-9]+)*\\\\\\\\.)+[a-z]{2,63}\\\\\\\\b', 'example': 'example.com', 'nullable': True}, 'name': {'type': 'string', 'maxLength': 256, 'example': 'My Team', 'description': 'The name of the team.'}, 'previewDeploymentSuffix': {'type': 'string', 'format': 'hostname', 'example': 'example.dev', 'description': 'Suffix that will be used for all preview deployments.', 'nullable': True}, 'regenerateInviteCode': {'type': 'boolean', 'example': True, 'description': 'Create a new invite code and replace the current one.'}, 'saml': {'type': 'object', 'additionalProperties': False, 'properties': {'enforced': {'type': 'boolean', 'example': True, 'description': 'Require that members of the team use SAML Single Sign-On.'}, 'roles': {'type': 'object', 'description': 'Directory groups to role or access group mappings.', 'additionalProperties': {'anyOf': [{'type': 'string', 'enum': ['OWNER', 'MEMBER', 'DEVELOPER', 'SECURITY', 'BILLING', 'VIEWER', 'CONTRIBUTOR']}, {'type': 'object', 'additionalProperties': False, 'required': ['accessGroupId'], 'properties': {'accessGroupId': {'type': 'string', 'pattern': '^ag_[A-z0-9_ -]+$'}}}]}}}}, 'slug': {'type': 'string', 'example': 'my-team', 'description': 'A new slug for the team.'}, 'enablePreviewFeedback': {'type': 'string', 'example': 'on', 'description': 'Enable preview toolbar: one of on, off or default.'}, 'enableProductionFeedback': {'type': 'string', 'example': 'on', 'description': 'Enable production toolbar: one of on, off or default.'}, 'sensitiveEnvironmentVariablePolicy': {'type': 'string', 'example': 'on', 'description': 'Sensitive environment variable policy: one of on, off or default.'}, 'remoteCaching': {'type': 'object', 'description': 'Whether or not remote caching is enabled for the team', 'additionalProperties': False, 'properties': {'enabled': {'type': 'boolean', 'example': True, 'description': 'Enable or disable remote caching for the team.'}}}, 'hideIpAddresses': {'type': 'boolean', 'example': False, 'description': 'Display or hide IP addresses in Monitoring queries.'}, 'hideIpAddressesInLogDrains': {'type': 'boolean', 'example': False, 'description': 'Display or hide IP addresses in Log Drains.'}}}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/teams/{teamId}",
        "patch",
        "requestBody"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Path parameter 'domain' for 'get' operation in '/v1/domains/{domain}/registry' was not resolved",
    "severity": 1,
    "code": "<unset>",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Path parameter 'configVersion' for 'get' operation in '/v1/security/firewall/config/{configVersion}' was not resolved",
    "severity": 1,
    "code": "<unset>",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Path parameter 'teamId' for 'get' operation in '/v2/teams/{teamId}/members' was not resolved",
    "severity": 1,
    "code": "<unset>",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Path parameter 'teamId' for 'post' operation in '/v1/teams/{teamId}/members' was not resolved",
    "severity": 1,
    "code": "<unset>",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Path parameter 'teamId' for 'post' operation in '/v1/teams/{teamId}/request' was not resolved",
    "severity": 1,
    "code": "<unset>",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Path parameter 'teamId' for 'get' operation in '/v1/teams/{teamId}/request/{userId}' was not resolved",
    "severity": 1,
    "code": "<unset>",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Path parameter 'teamId' for 'post' operation in '/v1/teams/{teamId}/members/teams/join' was not resolved",
    "severity": 1,
    "code": "<unset>",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Path parameter 'teamId' for 'patch' operation in '/v1/teams/{teamId}/members/{uid}' was not resolved",
    "severity": 1,
    "code": "<unset>",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Path parameter 'teamId' for 'delete' operation in '/v1/teams/{teamId}/members/{uid}' was not resolved",
    "severity": 1,
    "code": "<unset>",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Path parameter 'teamId' for 'delete' operation in '/v1/teams/{teamId}/invites/{inviteId}' was not resolved",
    "severity": 1,
    "code": "<unset>",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Path parameter 'name' for 'post' operation in '/v2/secrets/{name}' was not resolved",
    "severity": 1,
    "code": "<unset>",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The path already exists which differs only by path parameter name(s): `/v1/access-groups/{idOrName}/projects` and `/v1/access-groups/{accessGroupIdOrName}/projects`. [path: paths./v1/access-groups/{accessGroupIdOrName}/projects]",
    "severity": 1,
    "code": "no-identical-paths",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/access-groups/{accessGroupIdOrName}/projects"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The path already exists which differs only by path parameter name(s): `/v13/deployments/{idOrUrl}` and `/v13/deployments/{id}`. [path: paths./v13/deployments/{id}]",
    "severity": 1,
    "code": "no-identical-paths",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v13/deployments/{id}"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The path already exists which differs only by path parameter name(s): `/v2/secrets/{name}` and `/v2/secrets/{idOrName}`. [path: paths./v2/secrets/{idOrName}]",
    "severity": 1,
    "code": "no-identical-paths",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/secrets/{idOrName}"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v8/artifacts.post.responses.200.content.application/json.schema.additionalProperties.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v8/artifacts",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "additionalProperties",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./data-cache/purge-all.delete.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/data-cache/purge-all",
        "delete",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./data-cache/billing-settings.patch.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/data-cache/billing-settings",
        "patch",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v1/data-cache/projects/{projectId}.patch.responses.200.content.application/json.schema.properties.env.items.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/data-cache/projects/{projectId}",
        "patch",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "env",
        "items",
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v1/data-cache/projects/{projectId}.patch.responses.200.content.application/json.schema.properties.latestDeployments.items.properties.aliasAssigned.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/data-cache/projects/{projectId}",
        "patch",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "latestDeployments",
        "items",
        "properties",
        "aliasAssigned",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v1/data-cache/projects/{projectId}.patch.responses.200.content.application/json.schema.properties.targets.additionalProperties.properties.aliasAssigned.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/data-cache/projects/{projectId}",
        "patch",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "targets",
        "additionalProperties",
        "properties",
        "aliasAssigned",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v1/data-cache/projects/{projectId}.patch.responses.200.content.application/json.schema.properties.trustedIps.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/data-cache/projects/{projectId}",
        "patch",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "trustedIps",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `const` is not expected here. [path: paths./v1/deployments/{deploymentId}/integrations/{integrationConfigurationId}/resources/{resourceId}/actions/{action}.patch.requestBody.content.application/json.schema.properties.outcomes.items.oneOf.0.properties.kind.const]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/deployments/{deploymentId}/integrations/{integrationConfigurationId}/resources/{resourceId}/actions/{action}",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "outcomes",
        "items",
        "oneOf",
        0,
        "properties",
        "kind",
        "const"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v13/deployments/{idOrUrl}.get.responses.200.content.application/json.schema.oneOf.0.properties.aliasAssignedAt.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v13/deployments/{idOrUrl}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "oneOf",
        0,
        "properties",
        "aliasAssignedAt",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v13/deployments/{idOrUrl}.get.responses.200.content.application/json.schema.oneOf.0.properties.gitRepo.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v13/deployments/{idOrUrl}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "oneOf",
        0,
        "properties",
        "gitRepo",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.FlagJSONValue.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "FlagJSONValue",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v13/deployments.post.responses.200.content.application/json.schema.properties.aliasAssignedAt.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v13/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "aliasAssignedAt",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v13/deployments.post.responses.200.content.application/json.schema.properties.gitRepo.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v13/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "gitRepo",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v12/deployments/{id}/cancel.patch.responses.200.content.application/json.schema.properties.aliasAssignedAt.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v12/deployments/{id}/cancel",
        "patch",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "aliasAssignedAt",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v12/deployments/{id}/cancel.patch.responses.200.content.application/json.schema.properties.gitRepo.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v12/deployments/{id}/cancel",
        "patch",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "gitRepo",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `name` is not expected here. [path: paths./v2/domains/{domain}/records.post.requestBody.content.application/json.schema.anyOf.6.properties.name.name]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/domains/{domain}/records",
        "post",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "anyOf",
        6,
        "properties",
        "name",
        "name"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v2/domains/{domain}/records.post.requestBody.content.application/json.schema.anyOf.6.properties.srv.properties.priority.anyOf.1.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/domains/{domain}/records",
        "post",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "anyOf",
        6,
        "properties",
        "srv",
        "properties",
        "priority",
        "anyOf",
        1,
        "type"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v2/domains/{domain}/records.post.requestBody.content.application/json.schema.anyOf.6.properties.srv.properties.weight.anyOf.1.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/domains/{domain}/records",
        "post",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "anyOf",
        6,
        "properties",
        "srv",
        "properties",
        "weight",
        "anyOf",
        1,
        "type"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v2/domains/{domain}/records.post.requestBody.content.application/json.schema.anyOf.6.properties.srv.properties.port.anyOf.1.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/domains/{domain}/records",
        "post",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "anyOf",
        6,
        "properties",
        "srv",
        "properties",
        "port",
        "anyOf",
        1,
        "type"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `name` is not expected here. [path: paths./v2/domains/{domain}/records.post.requestBody.content.application/json.schema.anyOf.7.properties.name.name]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/domains/{domain}/records",
        "post",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "anyOf",
        7,
        "properties",
        "name",
        "name"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `name` is not expected here. [path: paths./v2/domains/{domain}/records.post.requestBody.content.application/json.schema.anyOf.9.properties.name.name]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/domains/{domain}/records",
        "post",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "anyOf",
        9,
        "properties",
        "name",
        "name"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v2/domains/{domain}/records.post.requestBody.content.application/json.schema.anyOf.9.properties.https.properties.priority.anyOf.1.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/domains/{domain}/records",
        "post",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "anyOf",
        9,
        "properties",
        "https",
        "properties",
        "priority",
        "anyOf",
        1,
        "type"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Expected type `Schema` (object) but got `boolean` [path: paths./v1/domains/records/{recordId}.patch.requestBody.content.application/json.schema.properties.additionalProperties]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/domains/records/{recordId}",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "additionalProperties"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The operation does not define the path parameter `{domain}` expected by path `/v1/domains/{domain}/registry`. [path: paths./v1/domains/{domain}/registry.get.parameters]",
    "severity": 1,
    "code": "path-parameters-defined",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/domains/{domain}/registry",
        "get",
        "parameters"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `multiplesOf` is not expected here. [path: paths./v1/log-drains.post.requestBody.content.application/json.schema.properties.samplingRate.multiplesOf]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/log-drains",
        "post",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "samplingRate",
        "multiplesOf"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `propertyNames` is not expected here. [path: paths./v1/edge-config.post.requestBody.content.application/json.schema.properties.items.propertyNames]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/edge-config",
        "post",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "items",
        "propertyNames"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.EdgeConfigItemValue.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "EdgeConfigItemValue",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `const` is not expected here. [path: paths./v1/edge-config/{edgeConfigId}/items.patch.requestBody.content.application/json.schema.properties.items.items.oneOf.0.anyOf.0.properties.operation.const]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/edge-config/{edgeConfigId}/items",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "items",
        "items",
        "oneOf",
        0,
        "anyOf",
        0,
        "properties",
        "operation",
        "const"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `const` is not expected here. [path: paths./v1/edge-config/{edgeConfigId}/items.patch.requestBody.content.application/json.schema.properties.items.items.oneOf.0.anyOf.3.properties.operation.const]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/edge-config/{edgeConfigId}/items",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "items",
        "items",
        "oneOf",
        0,
        "anyOf",
        3,
        "properties",
        "operation",
        "const"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v1/edge-config/{edgeConfigId}/items.patch.requestBody.content.application/json.schema.properties.items.items.oneOf.0.properties.description.oneOf.1.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/edge-config/{edgeConfigId}/items",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "items",
        "items",
        "oneOf",
        0,
        "properties",
        "description",
        "oneOf",
        1,
        "type"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.UserEvent.properties.payload.oneOf.61.properties.newOwner.properties.importFlowGitNamespace.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "UserEvent",
        "properties",
        "payload",
        "oneOf",
        61,
        "properties",
        "newOwner",
        "properties",
        "importFlowGitNamespace",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.UserEvent.properties.payload.oneOf.61.properties.newOwner.properties.importFlowGitNamespaceId.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "UserEvent",
        "properties",
        "payload",
        "oneOf",
        61,
        "properties",
        "newOwner",
        "properties",
        "importFlowGitNamespaceId",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.UserEvent.properties.payload.oneOf.61.properties.newOwner.properties.preferredScopesAndGitNamespaces.items.properties.gitNamespaceId.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "UserEvent",
        "properties",
        "payload",
        "oneOf",
        61,
        "properties",
        "newOwner",
        "properties",
        "preferredScopesAndGitNamespaces",
        "items",
        "properties",
        "gitNamespaceId",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.UserEvent.properties.payload.oneOf.76.properties.ssoProtection.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "UserEvent",
        "properties",
        "payload",
        "oneOf",
        76,
        "properties",
        "ssoProtection",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.UserEvent.properties.payload.oneOf.76.properties.oldSsoProtection.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "UserEvent",
        "properties",
        "payload",
        "oneOf",
        76,
        "properties",
        "oldSsoProtection",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.UserEvent.properties.payload.oneOf.77.properties.passwordProtection.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "UserEvent",
        "properties",
        "payload",
        "oneOf",
        77,
        "properties",
        "passwordProtection",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.UserEvent.properties.payload.oneOf.77.properties.oldPasswordProtection.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "UserEvent",
        "properties",
        "payload",
        "oneOf",
        77,
        "properties",
        "oldPasswordProtection",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v1/integrations/sso/token.post.responses.200.content.application/json.schema.properties.access_token.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/integrations/sso/token",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "access_token",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v1/integrations/sso/token.post.responses.200.content.application/json.schema.properties.token_type.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/integrations/sso/token",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "token_type",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v1/integrations/search-repo.get.parameters.1.schema.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/integrations/search-repo",
        "get",
        "parameters",
        1,
        "schema",
        "type"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v1/integrations/search-repo.get.responses.200.content.application/json.schema.oneOf.1.properties.gitAccount.properties.namespaceId.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/integrations/search-repo",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "oneOf",
        1,
        "properties",
        "gitAccount",
        "properties",
        "namespaceId",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./v1/experimentation/items.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/experimentation/items",
        "get",
        "summary"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `propertyNames` is not expected here. [path: paths./v1/installations/{integrationConfigurationId}/resources/{resourceId}/experimentation/edge-config.put.requestBody.content.application/json.schema.properties.data.propertyNames]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/installations/{integrationConfigurationId}/resources/{resourceId}/experimentation/edge-config",
        "put",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "data",
        "propertyNames"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v10/projects.get.responses.200.content.application/json.schema.properties.projects.items.properties.env.items.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v10/projects",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "projects",
        "items",
        "properties",
        "env",
        "items",
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v10/projects.get.responses.200.content.application/json.schema.properties.projects.items.properties.latestDeployments.items.properties.aliasAssigned.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v10/projects",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "projects",
        "items",
        "properties",
        "latestDeployments",
        "items",
        "properties",
        "aliasAssigned",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v10/projects.get.responses.200.content.application/json.schema.properties.projects.items.properties.targets.additionalProperties.properties.aliasAssigned.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v10/projects",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "projects",
        "items",
        "properties",
        "targets",
        "additionalProperties",
        "properties",
        "aliasAssigned",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v10/projects.get.responses.200.content.application/json.schema.properties.projects.items.properties.trustedIps.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v10/projects",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "projects",
        "items",
        "properties",
        "trustedIps",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v11/projects.post.responses.200.content.application/json.schema.properties.env.items.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v11/projects",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "env",
        "items",
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v11/projects.post.responses.200.content.application/json.schema.properties.latestDeployments.items.properties.aliasAssigned.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v11/projects",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "latestDeployments",
        "items",
        "properties",
        "aliasAssigned",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v11/projects.post.responses.200.content.application/json.schema.properties.targets.additionalProperties.properties.aliasAssigned.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v11/projects",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "targets",
        "additionalProperties",
        "properties",
        "aliasAssigned",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v11/projects.post.responses.200.content.application/json.schema.properties.trustedIps.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v11/projects",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "trustedIps",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v9/projects/{idOrName}.get.responses.200.content.application/json.schema.properties.env.items.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "env",
        "items",
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v9/projects/{idOrName}.get.responses.200.content.application/json.schema.properties.latestDeployments.items.properties.aliasAssigned.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "latestDeployments",
        "items",
        "properties",
        "aliasAssigned",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v9/projects/{idOrName}.get.responses.200.content.application/json.schema.properties.targets.additionalProperties.properties.aliasAssigned.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "targets",
        "additionalProperties",
        "properties",
        "aliasAssigned",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v9/projects/{idOrName}.get.responses.200.content.application/json.schema.properties.trustedIps.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "trustedIps",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v9/projects/{idOrName}.patch.responses.200.content.application/json.schema.properties.env.items.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}",
        "patch",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "env",
        "items",
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v9/projects/{idOrName}.patch.responses.200.content.application/json.schema.properties.latestDeployments.items.properties.aliasAssigned.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}",
        "patch",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "latestDeployments",
        "items",
        "properties",
        "aliasAssigned",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v9/projects/{idOrName}.patch.responses.200.content.application/json.schema.properties.targets.additionalProperties.properties.aliasAssigned.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}",
        "patch",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "targets",
        "additionalProperties",
        "properties",
        "aliasAssigned",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v9/projects/{idOrName}.patch.responses.200.content.application/json.schema.properties.trustedIps.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}",
        "patch",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "trustedIps",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `errorMessage` is not expected here. [path: paths./v9/projects/{idOrName}/custom-environments.post.requestBody.content.application/json.schema.properties.slug.errorMessage]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}/custom-environments",
        "post",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "slug",
        "errorMessage"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `errorMessage` is not expected here. [path: paths./v9/projects/{idOrName}/custom-environments.post.requestBody.content.application/json.schema.properties.description.errorMessage]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}/custom-environments",
        "post",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "description",
        "errorMessage"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `errorMessage` is not expected here. [path: paths./v9/projects/{idOrName}/custom-environments.post.requestBody.content.application/json.schema.properties.branchMatcher.properties.pattern.errorMessage]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}/custom-environments",
        "post",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "branchMatcher",
        "properties",
        "pattern",
        "errorMessage"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `errorMessage` is not expected here. [path: paths./v9/projects/{idOrName}/custom-environments/{environmentSlugOrId}.patch.requestBody.content.application/json.schema.properties.slug.errorMessage]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}/custom-environments/{environmentSlugOrId}",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "slug",
        "errorMessage"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `errorMessage` is not expected here. [path: paths./v9/projects/{idOrName}/custom-environments/{environmentSlugOrId}.patch.requestBody.content.application/json.schema.properties.description.errorMessage]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}/custom-environments/{environmentSlugOrId}",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "description",
        "errorMessage"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `errorMessage` is not expected here. [path: paths./v9/projects/{idOrName}/custom-environments/{environmentSlugOrId}.patch.requestBody.content.application/json.schema.properties.branchMatcher.properties.pattern.errorMessage]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}/custom-environments/{environmentSlugOrId}",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "branchMatcher",
        "properties",
        "pattern",
        "errorMessage"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v10/projects/{idOrName}/env.get.responses.200.content.application/json.schema.oneOf.0.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v10/projects/{idOrName}/env",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "oneOf",
        0,
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v10/projects/{idOrName}/env.get.responses.200.content.application/json.schema.oneOf.1.properties.envs.items.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v10/projects/{idOrName}/env",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "oneOf",
        1,
        "properties",
        "envs",
        "items",
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v10/projects/{idOrName}/env.get.responses.200.content.application/json.schema.oneOf.2.properties.envs.items.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v10/projects/{idOrName}/env",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "oneOf",
        2,
        "properties",
        "envs",
        "items",
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v10/projects/{idOrName}/env.post.responses.201.content.application/json.schema.properties.created.oneOf.0.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v10/projects/{idOrName}/env",
        "post",
        "responses",
        201,
        "content",
        "application/json",
        "schema",
        "properties",
        "created",
        "oneOf",
        0,
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v10/projects/{idOrName}/env.post.responses.201.content.application/json.schema.properties.created.oneOf.1.items.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v10/projects/{idOrName}/env",
        "post",
        "responses",
        201,
        "content",
        "application/json",
        "schema",
        "properties",
        "created",
        "oneOf",
        1,
        "items",
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v1/projects/{idOrName}/env/{id}.get.responses.200.content.application/json.schema.oneOf.0.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/projects/{idOrName}/env/{id}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "oneOf",
        0,
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v1/projects/{idOrName}/env/{id}.get.responses.200.content.application/json.schema.oneOf.1.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/projects/{idOrName}/env/{id}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "oneOf",
        1,
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v1/projects/{idOrName}/env/{id}.get.responses.200.content.application/json.schema.oneOf.2.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/projects/{idOrName}/env/{id}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "oneOf",
        2,
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v9/projects/{idOrName}/env/{id}.delete.responses.200.content.application/json.schema.oneOf.0.items.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}/env/{id}",
        "delete",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "oneOf",
        0,
        "items",
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v9/projects/{idOrName}/env/{id}.delete.responses.200.content.application/json.schema.oneOf.1.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}/env/{id}",
        "delete",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "oneOf",
        1,
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v9/projects/{idOrName}/env/{id}.delete.responses.200.content.application/json.schema.oneOf.2.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}/env/{id}",
        "delete",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "oneOf",
        2,
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v9/projects/{idOrName}/env/{id}.patch.responses.200.content.application/json.schema.oneOf.0.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}/env/{id}",
        "patch",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "oneOf",
        0,
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `errorMessage` is not expected here. [path: paths./v1/projects/{idOrName}/protection-bypass.patch.requestBody.content.application/json.schema.properties.generate.properties.secret.errorMessage]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/projects/{idOrName}/protection-bypass",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "generate",
        "properties",
        "secret",
        "errorMessage"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `$schema` is not expected here. [path: paths./v1/security/firewall/config.put.requestBody.content.application/json.schema.$schema]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "put",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "$schema"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v1/security/firewall/config.put.requestBody.content.application/json.schema.properties.rules.items.properties.action.properties.mitigate.properties.rateLimit.anyOf.0.properties.action.anyOf.1.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "put",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "rules",
        "items",
        "properties",
        "action",
        "properties",
        "mitigate",
        "properties",
        "rateLimit",
        "anyOf",
        0,
        "properties",
        "action",
        "anyOf",
        1,
        "type"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v1/security/firewall/config.put.requestBody.content.application/json.schema.properties.rules.items.properties.action.properties.mitigate.properties.rateLimit.anyOf.1.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "put",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "rules",
        "items",
        "properties",
        "action",
        "properties",
        "mitigate",
        "properties",
        "rateLimit",
        "anyOf",
        1,
        "type"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v1/security/firewall/config.put.requestBody.content.application/json.schema.properties.rules.items.properties.action.properties.mitigate.properties.redirect.anyOf.1.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "put",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "rules",
        "items",
        "properties",
        "action",
        "properties",
        "mitigate",
        "properties",
        "redirect",
        "anyOf",
        1,
        "type"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `const` is not expected here. [path: paths./v1/security/firewall/config.patch.requestBody.content.application/json.schema.oneOf.0.properties.action.const]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "oneOf",
        0,
        "properties",
        "action",
        "const"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v1/security/firewall/config.patch.requestBody.content.application/json.schema.oneOf.0.properties.id.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "oneOf",
        0,
        "properties",
        "id",
        "type"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `const` is not expected here. [path: paths./v1/security/firewall/config.patch.requestBody.content.application/json.schema.oneOf.1.properties.action.const]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "oneOf",
        1,
        "properties",
        "action",
        "const"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v1/security/firewall/config.patch.requestBody.content.application/json.schema.oneOf.1.properties.id.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "oneOf",
        1,
        "properties",
        "id",
        "type"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v1/security/firewall/config.patch.requestBody.content.application/json.schema.oneOf.1.properties.value.properties.action.properties.mitigate.properties.rateLimit.anyOf.0.properties.action.anyOf.1.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "oneOf",
        1,
        "properties",
        "value",
        "properties",
        "action",
        "properties",
        "mitigate",
        "properties",
        "rateLimit",
        "anyOf",
        0,
        "properties",
        "action",
        "anyOf",
        1,
        "type"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v1/security/firewall/config.patch.requestBody.content.application/json.schema.oneOf.1.properties.value.properties.action.properties.mitigate.properties.rateLimit.anyOf.1.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "oneOf",
        1,
        "properties",
        "value",
        "properties",
        "action",
        "properties",
        "mitigate",
        "properties",
        "rateLimit",
        "anyOf",
        1,
        "type"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v1/security/firewall/config.patch.requestBody.content.application/json.schema.oneOf.1.properties.value.properties.action.properties.mitigate.properties.redirect.anyOf.1.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "oneOf",
        1,
        "properties",
        "value",
        "properties",
        "action",
        "properties",
        "mitigate",
        "properties",
        "redirect",
        "anyOf",
        1,
        "type"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `const` is not expected here. [path: paths./v1/security/firewall/config.patch.requestBody.content.application/json.schema.oneOf.2.properties.action.const]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "oneOf",
        2,
        "properties",
        "action",
        "const"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v1/security/firewall/config.patch.requestBody.content.application/json.schema.oneOf.2.properties.value.properties.action.properties.mitigate.properties.rateLimit.anyOf.0.properties.action.anyOf.1.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "oneOf",
        2,
        "properties",
        "value",
        "properties",
        "action",
        "properties",
        "mitigate",
        "properties",
        "rateLimit",
        "anyOf",
        0,
        "properties",
        "action",
        "anyOf",
        1,
        "type"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v1/security/firewall/config.patch.requestBody.content.application/json.schema.oneOf.2.properties.value.properties.action.properties.mitigate.properties.rateLimit.anyOf.1.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "oneOf",
        2,
        "properties",
        "value",
        "properties",
        "action",
        "properties",
        "mitigate",
        "properties",
        "rateLimit",
        "anyOf",
        1,
        "type"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v1/security/firewall/config.patch.requestBody.content.application/json.schema.oneOf.2.properties.value.properties.action.properties.mitigate.properties.redirect.anyOf.1.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "oneOf",
        2,
        "properties",
        "value",
        "properties",
        "action",
        "properties",
        "mitigate",
        "properties",
        "redirect",
        "anyOf",
        1,
        "type"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `const` is not expected here. [path: paths./v1/security/firewall/config.patch.requestBody.content.application/json.schema.oneOf.3.properties.action.const]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "oneOf",
        3,
        "properties",
        "action",
        "const"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v1/security/firewall/config.patch.requestBody.content.application/json.schema.oneOf.3.properties.value.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "oneOf",
        3,
        "properties",
        "value",
        "type"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `const` is not expected here. [path: paths./v1/security/firewall/config.patch.requestBody.content.application/json.schema.oneOf.4.properties.action.const]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "oneOf",
        4,
        "properties",
        "action",
        "const"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `const` is not expected here. [path: paths./v1/security/firewall/config.patch.requestBody.content.application/json.schema.oneOf.5.properties.action.const]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "oneOf",
        5,
        "properties",
        "action",
        "const"
      ],
      "target": "import-url_root-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Found 4 absolute http references: [(('components', 'securitySchemes', 'oauth2', 'flows', 'authorizationCode', 'authorizationUrl'), 'authorizationUrl', 'https://api.vercel.com/oauth/authorize'), (('components', 'securitySchemes', 'oauth2', 'flows', 'authorizationCode', 'tokenUrl'), 'tokenUrl', 'https://api.vercel.com/oauth/access_token'), (('servers', 0, 'url'), 'url', 'https://api.vercel.com'), (('info', 'contact', 'url'), 'url', 'https://vercel.com/support')]",
    "severity": 3,
    "code": "found-absolute-http-references",
    "code_description": null,
    "source": "repair",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec",
      "absoluteRefsCount": "4"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Security scheme 'oauth2' is defined in components.securitySchemes but not used in any security requirement.",
    "severity": 2,
    "code": "UNUSED_SECURITY_SCHEME_DEFINED",
    "code_description": null,
    "source": "default-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "securitySchemes"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'enum': ['running', 'succeeded', 'failed']}, 'statusText': {'type': 'string'}, 'outcomes': {'type': 'array', 'items': {'oneOf': [{'type': 'object', 'properties': {'kind': {'type': 'string', 'const': 'resource-secrets'}, 'secrets': {'type': 'array', 'items': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'value': {'type': 'string'}}, 'required': ['name', 'value'], 'additionalProperties': False}}}, 'required': ['kind', 'secrets'], 'additionalProperties': False}]}}}, 'required': [], 'additionalProperties': False}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/deployments/{deploymentId}/integrations/{integrationConfigurationId}/resources/{resourceId}/actions/{action}",
        "patch",
        "requestBody"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/json': {'schema': {'required': ['type'], 'properties': {'type': {'description': 'The type of record, it could be one of the valid DNS records.', 'type': 'string', 'enum': ['A', 'AAAA', 'ALIAS', 'CAA', 'CNAME', 'HTTPS', 'MX', 'SRV', 'TXT', 'NS']}}, 'anyOf': [{'type': 'object', 'additionalProperties': False, 'required': ['type', 'value', 'name'], 'properties': {'name': {'description': 'A subdomain name or an empty string for the root domain.', 'type': 'string', 'example': 'subdomain'}, 'type': {'description': 'Must be of type `A`.', 'type': 'string', 'enum': ['A']}, 'ttl': {'description': 'The TTL value. Must be a number between 60 and 2147483647. Default value is 60.', 'type': 'number', 'minimum': 60, 'maximum': 2147483647, 'example': 60}, 'value': {'description': 'The record value must be a valid IPv4 address.', 'type': 'string', 'format': 'ipv4', 'example': '192.0.2.42'}, 'comment': {'type': 'string', 'description': 'A comment to add context on what this DNS record is for', 'example': 'used to verify ownership of domain', 'maxLength': 500}}}, {'type': 'object', 'additionalProperties': False, 'required': ['type', 'value', 'name'], 'properties': {'name': {'description': 'A subdomain name or an empty string for the root domain.', 'type': 'string', 'example': 'subdomain'}, 'type': {'description': 'Must be of type `AAAA`.', 'type': 'string', 'enum': ['AAAA']}, 'ttl': {'description': 'The TTL value. Must be a number between 60 and 2147483647. Default value is 60.', 'type': 'number', 'minimum': 60, 'maximum': 2147483647, 'example': 60}, 'value': {'description': 'An AAAA record pointing to an IPv6 address.', 'type': 'string', 'format': 'ipv6', 'example': '2001:DB8::42'}, 'comment': {'type': 'string', 'description': 'A comment to add context on what this DNS record is for', 'example': 'used to verify ownership of domain', 'maxLength': 500}}}, {'type': 'object', 'additionalProperties': False, 'required': ['type', 'value', 'name'], 'properties': {'name': {'description': 'A subdomain name or an empty string for the root domain.', 'type': 'string', 'example': 'subdomain'}, 'type': {'description': 'Must be of type `ALIAS`.', 'type': 'string', 'enum': ['ALIAS']}, 'ttl': {'description': 'The TTL value. Must be a number between 60 and 2147483647. Default value is 60.', 'type': 'number', 'minimum': 60, 'maximum': 2147483647, 'example': 60}, 'value': {'description': 'An ALIAS virtual record pointing to a hostname resolved to an A record on server side.', 'type': 'string', 'example': 'cname.vercel-dns.com'}, 'comment': {'type': 'string', 'description': 'A comment to add context on what this DNS record is for', 'example': 'used to verify ownership of domain', 'maxLength': 500}}}, {'type': 'object', 'additionalProperties': False, 'required': ['type', 'value', 'name'], 'properties': {'name': {'description': 'A subdomain name or an empty string for the root domain.', 'type': 'string', 'example': 'subdomain'}, 'type': {'description': 'Must be of type `CAA`.', 'type': 'string', 'enum': ['CAA']}, 'ttl': {'description': 'The TTL value. Must be a number between 60 and 2147483647. Default value is 60.', 'type': 'number', 'minimum': 60, 'maximum': 2147483647, 'example': 60}, 'value': {'description': 'A CAA record to specify which Certificate Authorities (CAs) are allowed to issue certificates for the domain.', 'type': 'string', 'example': '0 issue \\\\\"letsencrypt.org\\\\\"'}, 'comment': {'type': 'string', 'description': 'A comment to add context on what this DNS record is for', 'example': 'used to verify ownership of domain', 'maxLength': 500}}}, {'type': 'object', 'additionalProperties': False, 'required': ['type', 'name'], 'properties': {'name': {'description': 'A subdomain name or an empty string for the root domain.', 'type': 'string', 'example': 'subdomain'}, 'type': {'description': 'Must be of type `CNAME`.', 'type': 'string', 'enum': ['CNAME']}, 'ttl': {'description': 'The TTL value. Must be a number between 60 and 2147483647. Default value is 60.', 'type': 'number', 'minimum': 60, 'maximum': 2147483647, 'example': 60}, 'value': {'description': 'A CNAME record mapping to another domain name.', 'type': 'string', 'example': 'cname.vercel-dns.com'}, 'comment': {'type': 'string', 'description': 'A comment to add context on what this DNS record is for', 'example': 'used to verify ownership of domain', 'maxLength': 500}}}, {'type': 'object', 'additionalProperties': False, 'required': ['type', 'value', 'name', 'mxPriority'], 'properties': {'name': {'description': 'A subdomain name or an empty string for the root domain.', 'type': 'string', 'example': 'subdomain'}, 'type': {'description': 'Must be of type `MX`.', 'type': 'string', 'enum': ['MX']}, 'ttl': {'description': 'The TTL value. Must be a number between 60 and 2147483647. Default value is 60.', 'type': 'number', 'minimum': 60, 'maximum': 2147483647, 'example': 60}, 'value': {'description': 'An MX record specifying the mail server responsible for accepting messages on behalf of the domain name.', 'type': 'string', 'example': '10 mail.example.com.'}, 'mxPriority': {'type': 'number', 'minimum': 0, 'maximum': 65535, 'example': 10}, 'comment': {'type': 'string', 'description': 'A comment to add context on what this DNS record is for', 'example': 'used to verify ownership of domain', 'maxLength': 500}}}, {'type': 'object', 'additionalProperties': False, 'required': ['type', 'name', 'srv'], 'properties': {'name': {'description': 'A subdomain name or an empty string for the root domain.', 'type': 'string', 'name': 'subdomain'}, 'type': {'description': 'Must be of type `SRV`.', 'type': 'string', 'enum': ['SRV']}, 'ttl': {'description': 'The TTL value. Must be a number between 60 and 2147483647. Default value is 60.', 'type': 'number', 'minimum': 60, 'maximum': 2147483647, 'example': 60}, 'srv': {'type': 'object', 'additionalProperties': False, 'required': ['weight', 'port', 'priority', 'target'], 'properties': {'priority': {'anyOf': [{'type': 'number', 'minimum': 0, 'maximum': 65535, 'example': 10}, {'type': 'null'}]}, 'weight': {'anyOf': [{'type': 'number', 'minimum': 0, 'maximum': 65535, 'example': 10}, {'type': 'null'}]}, 'port': {'anyOf': [{'type': 'number', 'minimum': 0, 'maximum': 65535, 'example': 5000}, {'type': 'null'}]}, 'target': {'type': 'string', 'example': 'host.example.com'}}}, 'comment': {'type': 'string', 'description': 'A comment to add context on what this DNS record is for', 'example': 'used to verify ownership of domain', 'maxLength': 500}}}, {'type': 'object', 'additionalProperties': False, 'required': ['type', 'value', 'name'], 'properties': {'name': {'description': 'A subdomain name or an empty string for the root domain.', 'type': 'string', 'name': 'subdomain'}, 'type': {'description': 'Must be of type `TXT`.', 'type': 'string', 'enum': ['TXT']}, 'ttl': {'description': 'The TTL value. Must be a number between 60 and 2147483647. Default value is 60.', 'type': 'number', 'minimum': 60, 'maximum': 2147483647, 'example': 60}, 'value': {'description': 'A TXT record containing arbitrary text.', 'type': 'string', 'example': 'hello'}, 'comment': {'type': 'string', 'description': 'A comment to add context on what this DNS record is for', 'example': 'used to verify ownership of domain', 'maxLength': 500}}}, {'type': 'object', 'additionalProperties': False, 'required': ['type', 'name'], 'properties': {'name': {'description': 'A subdomain name.', 'type': 'string', 'example': 'subdomain'}, 'type': {'description': 'Must be of type `NS`.', 'type': 'string', 'enum': ['NS']}, 'ttl': {'description': 'The TTL value. Must be a number between 60 and 2147483647. Default value is 60.', 'type': 'number', 'minimum': 60, 'maximum': 2147483647, 'example': 60}, 'value': {'description': 'An NS domain value.', 'type': 'string', 'example': 'ns1.example.com'}, 'comment': {'type': 'string', 'description': 'A comment to add context on what this DNS record is for', 'example': 'used to verify ownership of domain', 'maxLength': 500}}}, {'type': 'object', 'additionalProperties': False, 'required': ['type', 'name', 'https'], 'properties': {'name': {'description': 'A subdomain name or an empty string for the root domain.', 'type': 'string', 'name': 'subdomain'}, 'type': {'description': 'Must be of type `HTTPS`.', 'type': 'string', 'enum': ['HTTPS']}, 'ttl': {'description': 'The TTL value. Must be a number between 60 and 2147483647. Default value is 60.', 'type': 'number', 'minimum': 60, 'maximum': 2147483647, 'example': 60}, 'https': {'type': 'object', 'additionalProperties': False, 'required': ['priority', 'target'], 'properties': {'priority': {'anyOf': [{'type': 'number', 'minimum': 0, 'maximum': 65535, 'example': 10}, {'type': 'null'}]}, 'target': {'type': 'string', 'example': 'host.example.com'}, 'params': {'type': 'string', 'example': 'alpn=h2,h3'}}}, 'comment': {'type': 'string', 'description': 'A comment to add context on what this DNS record is for', 'example': 'used to verify ownership of domain', 'maxLength': 500}}}]}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/domains/{domain}/records",
        "post",
        "requestBody"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/json': {'schema': {'properties': {'additionalProperties': False, 'name': {'type': 'string', 'description': 'The name of the DNS record', 'example': 'example-1', 'nullable': True}, 'value': {'type': 'string', 'description': 'The value of the DNS record', 'example': 'google.com', 'nullable': True}, 'type': {'enum': ['A', 'AAAA', 'ALIAS', 'CAA', 'CNAME', 'HTTPS', 'MX', 'SRV', 'TXT', 'NS'], 'type': 'string', 'description': 'The type of the DNS record', 'example': 'A', 'maxLength': 255, 'nullable': True}, 'ttl': {'type': 'integer', 'description': 'The Time to live (TTL) value of the DNS record', 'example': '60', 'minimum': 60, 'maximum': 2147483647, 'nullable': True}, 'mxPriority': {'type': 'integer', 'description': 'The MX priority value of the DNS record', 'nullable': True}, 'srv': {'additionalProperties': False, 'required': ['target', 'weight', 'port', 'priority'], 'properties': {'target': {'type': 'string', 'description': '', 'example': 'example2.com.', 'maxLength': 255, 'nullable': True}, 'weight': {'description': '', 'type': 'integer', 'nullable': True}, 'port': {'description': '', 'type': 'integer', 'nullable': True}, 'priority': {'description': '', 'type': 'integer', 'nullable': True}}, 'type': 'object', 'nullable': True}, 'https': {'additionalProperties': False, 'required': ['priority', 'target'], 'properties': {'priority': {'description': '', 'type': 'integer', 'nullable': True}, 'target': {'type': 'string', 'description': '', 'example': 'example2.com.', 'maxLength': 255, 'nullable': True}, 'params': {'description': '', 'type': 'string', 'nullable': True}}, 'type': 'object', 'nullable': True}, 'comment': {'type': 'string', 'description': 'A comment to add context on what this DNS record is for', 'example': 'used to verify ownership of domain', 'maxLength': 500}}, 'type': 'object'}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/domains/records/{recordId}",
        "patch",
        "requestBody"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'name': 'domain', 'in': 'path', 'schema': {'type': 'string'}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v3/domains/{domain}",
        "patch",
        "parameters",
        0
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/json': {'schema': {'type': 'object', 'additionalProperties': False, 'required': ['deliveryFormat', 'url', 'sources'], 'properties': {'deliveryFormat': {'description': 'The delivery log format', 'example': 'json', 'enum': ['json', 'ndjson']}, 'url': {'description': 'The log drain url', 'format': 'uri', 'pattern': '^(http|https)?://', 'type': 'string'}, 'headers': {'description': 'Headers to be sent together with the request', 'type': 'object', 'additionalProperties': {'type': 'string'}}, 'projectIds': {'minItems': 1, 'maxItems': 50, 'type': 'array', 'items': {'pattern': '^[a-zA-z0-9_]+$', 'type': 'string'}}, 'sources': {'type': 'array', 'uniqueItems': True, 'items': {'type': 'string', 'enum': ['static', 'lambda', 'build', 'edge', 'external', 'firewall']}, 'minItems': 1}, 'environments': {'type': 'array', 'uniqueItems': True, 'items': {'type': 'string', 'enum': ['preview', 'production']}, 'minItems': 1}, 'secret': {'description': 'Custom secret of log drain', 'type': 'string'}, 'samplingRate': {'type': 'number', 'description': 'The sampling rate for this log drain. It should be a percentage rate between 0 and 100. With max 2 decimal points', 'multiplesOf': 0.01, 'minimum': 0.01, 'maximum': 1}, 'name': {'type': 'string', 'description': 'The custom name of this log drain.'}}}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/log-drains",
        "post",
        "requestBody"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/json': {'schema': {'type': 'object', 'required': ['slug'], 'properties': {'slug': {'maxLength': 64, 'pattern': '^[\\\\\\\\w-]+$', 'type': 'string'}, 'items': {'type': 'object', 'propertyNames': {'maxLength': 256, 'pattern': '^[\\\\\\\\w-]+$', 'type': 'string'}, 'additionalProperties': {}}}}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/edge-config",
        "post",
        "requestBody"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/json': {'schema': {'type': 'object', 'additionalProperties': False, 'required': ['items', 'definition'], 'properties': {'items': {'type': 'array', 'items': {'oneOf': [{'type': 'object', 'properties': {'operation': {'enum': ['create', 'update', 'upsert', 'delete']}, 'key': {'maxLength': 256, 'pattern': '^[\\\\\\\\w-]+$', 'type': 'string'}, 'value': {}, 'description': {'oneOf': [{'type': 'string', 'maxLength': 512}, {'type': 'null'}]}}, 'anyOf': [{'properties': {'operation': {'const': 'create'}}, 'required': ['operation', 'key', 'value']}, {'properties': {'operation': {'enum': ['update', 'upsert']}}, 'required': ['operation', 'key', 'value']}, {'properties': {'operation': {'enum': ['update', 'upsert']}}, 'required': ['operation', 'key', 'description']}, {'properties': {'operation': {'const': 'delete'}}, 'required': ['operation', 'key'], 'not': {'required': ['value', 'description']}}]}]}}, 'definition': {}}}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/edge-config/{edgeConfigId}/items",
        "patch",
        "requestBody"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'name': 'namespaceId', 'in': 'query', 'schema': {'type': ['string', 'number'], 'nullable': True}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/integrations/search-repo",
        "get",
        "parameters",
        1
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/json': {'schema': {'type': 'object', 'additionalProperties': False, 'required': ['data'], 'properties': {'data': {'type': 'object', 'propertyNames': {'maxLength': 256, 'pattern': '^[\\\\\\\\w-]+$', 'type': 'string'}, 'additionalProperties': {}}}}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/installations/{integrationConfigurationId}/resources/{resourceId}/experimentation/edge-config",
        "put",
        "requestBody"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/json': {'schema': {'type': 'object', 'properties': {'slug': {'description': 'The slug of the custom environment to create.', 'type': 'string', 'maxLength': 32, 'errorMessage': 'Slug must be 32 characters or less.'}, 'description': {'description': 'Description of the custom environment. This is optional.', 'type': 'string', 'maxLength': 256, 'errorMessage': 'Description must be 256 characters or less.'}, 'branchMatcher': {'required': ['type', 'pattern'], 'description': 'How we want to determine a matching branch. This is optional.', 'type': 'object', 'properties': {'type': {'description': 'Type of matcher. One of \\\\\"equals\\\\\", \\\\\"startsWith\\\\\", or \\\\\"endsWith\\\\\".', 'enum': ['equals', 'startsWith', 'endsWith']}, 'pattern': {'description': 'Git branch name or portion thereof.', 'type': 'string', 'maxLength': 100, 'errorMessage': 'Branch matcher pattern must be 100 characters or less.'}}}, 'copyEnvVarsFrom': {'description': 'Where to copy environment variables from. This is optional.', 'type': 'string'}}}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}/custom-environments",
        "post",
        "requestBody"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/json': {'schema': {'type': 'object', 'properties': {'slug': {'description': 'The slug of the custom environment.', 'type': 'string', 'maxLength': 32, 'errorMessage': 'Slug must be 32 characters or less.'}, 'description': {'description': 'Description of the custom environment. This is optional.', 'type': 'string', 'maxLength': 256, 'errorMessage': 'Description must be 256 characters or less.'}, 'branchMatcher': {'required': ['type', 'pattern'], 'description': 'How we want to determine a matching branch. This is optional.', 'type': 'object', 'properties': {'type': {'description': 'Type of matcher. One of \\\\\"equals\\\\\", \\\\\"startsWith\\\\\", or \\\\\"endsWith\\\\\".', 'enum': ['equals', 'startsWith', 'endsWith']}, 'pattern': {'description': 'Git branch name or portion thereof.', 'type': 'string', 'maxLength': 100, 'errorMessage': 'Branch matcher pattern must be 100 characters or less.'}}, 'nullable': True}}}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}/custom-environments/{environmentSlugOrId}",
        "patch",
        "requestBody"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/json': {'schema': {'type': 'object', 'required': [], 'properties': {'deleteUnassignedEnvironmentVariables': {'description': 'Delete Environment Variables that are not assigned to any environments.', 'type': 'boolean'}}}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}/custom-environments/{environmentSlugOrId}",
        "delete",
        "requestBody"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/json': {'schema': {'type': 'object', 'properties': {'revoke': {'description': 'Optional instructions for revoking and regenerating a automation bypass', 'type': 'object', 'properties': {'secret': {'description': 'Automation bypass to revoked', 'type': 'string'}, 'regenerate': {'description': 'Whether or not a new automation bypass should be created after the provided secret is revoked', 'type': 'boolean'}}, 'required': ['secret', 'regenerate']}, 'generate': {'description': 'Generate a new secret. If neither generate or revoke are provided, a new random secret will be generated.', 'type': 'object', 'properties': {'secret': {'description': 'Optional value of the secret to generate', 'type': 'string', 'pattern': '^[a-zA-Z0-9]{32}$', 'errorMessage': 'Invalid value for `generate.secret` provided. Must be a string with a length of 32 characters. Cannot include special characters.'}}}}, 'additionalProperties': False}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/projects/{idOrName}/protection-bypass",
        "patch",
        "requestBody"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/json': {'schema': {'type': 'object', 'properties': {'firewallEnabled': {'type': 'boolean'}, 'managedRules': {'type': 'object', 'additionalProperties': {'anyOf': [{'not': {}}, {'type': 'object', 'properties': {'active': {'type': 'boolean'}, 'action': {'type': 'string', 'enum': ['log', 'challenge', 'deny']}, 'ruleGroups': {'type': 'object', 'additionalProperties': {'type': 'object', 'properties': {'active': {'type': 'boolean'}, 'action': {'type': 'string', 'enum': ['log', 'challenge', 'deny']}}, 'additionalProperties': False}}}, 'required': ['active'], 'additionalProperties': False}]}}, 'crs': {'type': 'object', 'properties': {'sd': {'type': 'object', 'properties': {'active': {'type': 'boolean'}, 'action': {'type': 'string', 'enum': ['deny', 'log']}}, 'required': ['active', 'action'], 'additionalProperties': False}, 'ma': {'type': 'object', 'properties': {'active': {'type': 'boolean'}, 'action': {'type': 'string', 'enum': ['deny', 'log']}}, 'required': ['active', 'action'], 'additionalProperties': False}, 'lfi': {'type': 'object', 'properties': {'active': {'type': 'boolean'}, 'action': {'type': 'string', 'enum': ['deny', 'log']}}, 'required': ['active', 'action'], 'additionalProperties': False}, 'rfi': {'type': 'object', 'properties': {'active': {'type': 'boolean'}, 'action': {'type': 'string', 'enum': ['deny', 'log']}}, 'required': ['active', 'action'], 'additionalProperties': False}, 'rce': {'type': 'object', 'properties': {'active': {'type': 'boolean'}, 'action': {'type': 'string', 'enum': ['deny', 'log']}}, 'required': ['active', 'action'], 'additionalProperties': False}, 'php': {'type': 'object', 'properties': {'active': {'type': 'boolean'}, 'action': {'type': 'string', 'enum': ['deny', 'log']}}, 'required': ['active', 'action'], 'additionalProperties': False}, 'gen': {'type': 'object', 'properties': {'active': {'type': 'boolean'}, 'action': {'type': 'string', 'enum': ['deny', 'log']}}, 'required': ['active', 'action'], 'additionalProperties': False}, 'xss': {'type': 'object', 'properties': {'active': {'type': 'boolean'}, 'action': {'type': 'string', 'enum': ['deny', 'log']}}, 'required': ['active', 'action'], 'additionalProperties': False}, 'sqli': {'type': 'object', 'properties': {'active': {'type': 'boolean'}, 'action': {'type': 'string', 'enum': ['deny', 'log']}}, 'required': ['active', 'action'], 'additionalProperties': False}, 'sf': {'type': 'object', 'properties': {'active': {'type': 'boolean'}, 'action': {'type': 'string', 'enum': ['deny', 'log']}}, 'required': ['active', 'action'], 'additionalProperties': False}, 'java': {'type': 'object', 'properties': {'active': {'type': 'boolean'}, 'action': {'type': 'string', 'enum': ['deny', 'log']}}, 'required': ['active', 'action'], 'additionalProperties': False}}, 'additionalProperties': False}, 'rules': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'string'}, 'name': {'type': 'string', 'maxLength': 160}, 'description': {'type': 'string', 'maxLength': 256}, 'active': {'type': 'boolean'}, 'conditionGroup': {'type': 'array', 'items': {'type': 'object', 'properties': {'conditions': {'type': 'array', 'items': {'type': 'object', 'properties': {'type': {'type': 'string', 'enum': ['host', 'path', 'method', 'header', 'query', 'cookie', 'target_path', 'raw_path', 'ip_address', 'region', 'protocol', 'scheme', 'environment', 'user_agent', 'geo_continent', 'geo_country', 'geo_country_region', 'geo_city', 'geo_as_number', 'ja4_digest', 'ja3_digest', 'rate_limit_api_id']}, 'op': {'type': 'string', 'enum': ['re', 'eq', 'neq', 'ex', 'nex', 'inc', 'ninc', 'pre', 'suf', 'sub', 'gt', 'gte', 'lt', 'lte']}, 'neg': {'type': 'boolean'}, 'key': {'type': 'string'}, 'value': {'anyOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}, 'maxItems': 75}, {'type': 'number'}]}}, 'required': ['type', 'op'], 'additionalProperties': False}, 'maxItems': 65}}, 'required': ['conditions'], 'additionalProperties': False}, 'maxItems': 25}, 'action': {'type': 'object', 'properties': {'mitigate': {'type': 'object', 'properties': {'action': {'type': 'string', 'enum': ['log', 'challenge', 'deny', 'bypass', 'rate_limit', 'redirect']}, 'rateLimit': {'anyOf': [{'type': 'object', 'properties': {'algo': {'type': 'string', 'enum': ['fixed_window', 'token_bucket']}, 'window': {'type': 'number'}, 'limit': {'type': 'number'}, 'keys': {'type': 'array', 'items': {'type': 'string'}}, 'action': {'anyOf': [{'type': 'string', 'enum': ['log', 'challenge', 'deny', 'rate_limit']}, {'type': 'null'}]}}, 'required': ['algo', 'window', 'limit', 'keys'], 'additionalProperties': False}, {'type': 'null'}]}, 'redirect': {'anyOf': [{'type': 'object', 'properties': {'location': {'type': 'string'}, 'permanent': {'type': 'boolean'}}, 'required': ['location', 'permanent'], 'additionalProperties': False}, {'type': 'null'}]}, 'actionDuration': {'type': 'string', 'nullable': True}, 'bypassSystem': {'type': 'boolean', 'nullable': True}}, 'required': ['action'], 'additionalProperties': False}}, 'additionalProperties': False}}, 'required': ['name', 'active', 'conditionGroup', 'action'], 'additionalProperties': False}}, 'ips': {'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'string'}, 'hostname': {'type': 'string'}, 'ip': {'type': 'string'}, 'notes': {'type': 'string'}, 'action': {'type': 'string', 'enum': ['deny', 'challenge', 'log', 'bypass']}}, 'required': ['hostname', 'ip', 'action'], 'additionalProperties': False}}}, 'required': ['firewallEnabled'], 'additionalProperties': False, '$schema': 'http://json-schema.org/draft-07/schema#'}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "put",
        "requestBody"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/json': {'schema': {'oneOf': [{'description': 'Enable Firewall', 'type': 'object', 'properties': {'action': {'type': 'string', 'const': 'firewallEnabled'}, 'id': {'type': 'null'}, 'value': {'type': 'boolean'}}, 'required': ['action', 'value'], 'additionalProperties': False}, {'description': 'Add a custom rule', 'type': 'object', 'properties': {'action': {'type': 'string', 'const': 'rules.insert'}, 'id': {'type': 'null'}, 'value': {'type': 'object', 'properties': {'name': {'type': 'string', 'maxLength': 160}, 'description': {'type': 'string', 'maxLength': 256}, 'active': {'type': 'boolean'}, 'conditionGroup': {'type': 'array', 'items': {'type': 'object', 'properties': {'conditions': {'type': 'array', 'items': {'type': 'object', 'properties': {'type': {'type': 'string', 'enum': ['host', 'path', 'method', 'header', 'query', 'cookie', 'target_path', 'raw_path', 'ip_address', 'region', 'protocol', 'scheme', 'environment', 'user_agent', 'geo_continent', 'geo_country', 'geo_country_region', 'geo_city', 'geo_as_number', 'ja4_digest', 'ja3_digest', 'rate_limit_api_id']}, 'op': {'type': 'string', 'enum': ['re', 'eq', 'neq', 'ex', 'nex', 'inc', 'ninc', 'pre', 'suf', 'sub', 'gt', 'gte', 'lt', 'lte']}, 'neg': {'type': 'boolean'}, 'key': {'type': 'string'}, 'value': {'oneOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}, 'maxItems': 75}, {'type': 'number'}]}}, 'required': ['type', 'op'], 'additionalProperties': False}, 'maxItems': 65}}, 'required': ['conditions'], 'additionalProperties': False}, 'maxItems': 25}, 'action': {'type': 'object', 'properties': {'mitigate': {'type': 'object', 'properties': {'action': {'type': 'string', 'enum': ['log', 'challenge', 'deny', 'bypass', 'rate_limit', 'redirect']}, 'rateLimit': {'anyOf': [{'type': 'object', 'properties': {'algo': {'type': 'string', 'enum': ['fixed_window', 'token_bucket']}, 'window': {'type': 'number'}, 'limit': {'type': 'number'}, 'keys': {'type': 'array', 'items': {'type': 'string'}}, 'action': {'anyOf': [{'type': 'string', 'enum': ['log', 'challenge', 'deny', 'rate_limit']}, {'type': 'null'}]}}, 'required': ['algo', 'window', 'limit', 'keys'], 'additionalProperties': False}, {'type': 'null'}]}, 'redirect': {'anyOf': [{'type': 'object', 'properties': {'location': {'type': 'string'}, 'permanent': {'type': 'boolean'}}, 'required': ['location', 'permanent'], 'additionalProperties': False}, {'type': 'null'}]}, 'actionDuration': {'type': 'string', 'nullable': True}, 'bypassSystem': {'type': 'boolean', 'nullable': True}}, 'required': ['action'], 'additionalProperties': False}}, 'additionalProperties': False}}, 'required': ['name', 'active', 'conditionGroup', 'action'], 'additionalProperties': False}}, 'required': ['action', 'value'], 'additionalProperties': False}, {'description': 'Update a custom rule', 'type': 'object', 'properties': {'action': {'type': 'string', 'const': 'rules.update'}, 'id': {'type': 'string'}, 'value': {'type': 'object', 'properties': {'name': {'type': 'string', 'maxLength': 160}, 'description': {'type': 'string', 'maxLength': 256}, 'active': {'type': 'boolean'}, 'conditionGroup': {'type': 'array', 'items': {'type': 'object', 'properties': {'conditions': {'type': 'array', 'items': {'type': 'object', 'properties': {'type': {'type': 'string', 'enum': ['host', 'path', 'method', 'header', 'query', 'cookie', 'target_path', 'raw_path', 'ip_address', 'region', 'protocol', 'scheme', 'environment', 'user_agent', 'geo_continent', 'geo_country', 'geo_country_region', 'geo_city', 'geo_as_number', 'ja4_digest', 'ja3_digest', 'rate_limit_api_id']}, 'op': {'type': 'string', 'enum': ['re', 'eq', 'neq', 'ex', 'nex', 'inc', 'ninc', 'pre', 'suf', 'sub', 'gt', 'gte', 'lt', 'lte']}, 'neg': {'type': 'boolean'}, 'key': {'type': 'string'}, 'value': {'anyOf': [{'type': 'string'}, {'type': 'array', 'items': {'type': 'string'}, 'maxItems': 75}, {'type': 'number'}]}}, 'required': ['type', 'op'], 'additionalProperties': False}, 'maxItems': 65}}, 'required': ['conditions'], 'additionalProperties': False}, 'maxItems': 25}, 'action': {'type': 'object', 'properties': {'mitigate': {'type': 'object', 'properties': {'action': {'type': 'string', 'enum': ['log', 'challenge', 'deny', 'bypass', 'rate_limit', 'redirect']}, 'rateLimit': {'anyOf': [{'type': 'object', 'properties': {'algo': {'type': 'string', 'enum': ['fixed_window', 'token_bucket']}, 'window': {'type': 'number'}, 'limit': {'type': 'number'}, 'keys': {'type': 'array', 'items': {'type': 'string'}}, 'action': {'anyOf': [{'type': 'string', 'enum': ['log', 'challenge', 'deny', 'rate_limit']}, {'type': 'null'}]}}, 'required': ['algo', 'window', 'limit', 'keys'], 'additionalProperties': False}, {'type': 'null'}]}, 'redirect': {'anyOf': [{'type': 'object', 'properties': {'location': {'type': 'string'}, 'permanent': {'type': 'boolean'}}, 'required': ['location', 'permanent'], 'additionalProperties': False}, {'type': 'null'}]}, 'actionDuration': {'type': 'string', 'nullable': True}, 'bypassSystem': {'type': 'boolean', 'nullable': True}}, 'required': ['action'], 'additionalProperties': False}}, 'additionalProperties': False}}, 'required': ['name', 'active', 'conditionGroup', 'action'], 'additionalProperties': False}}, 'required': ['action', 'id', 'value'], 'additionalProperties': False}, {'description': 'Remove a custom rule', 'type': 'object', 'properties': {'action': {'type': 'string', 'const': 'rules.remove'}, 'id': {'type': 'string'}, 'value': {'type': 'null'}}, 'required': ['action', 'id'], 'additionalProperties': False}, {'description': 'Reorder a custom rule', 'type': 'object', 'properties': {'action': {'type': 'string', 'const': 'rules.priority'}, 'id': {'type': 'string'}, 'value': {'type': 'number'}}, 'required': ['action', 'id', 'value'], 'additionalProperties': False}, {'description': 'Enable a managed rule', 'type': 'object', 'properties': {'action': {'type': 'string', 'const': 'crs.update'}, 'id': {'type': 'string', 'enum': ['sd', 'ma', 'lfi', 'rfi', 'rce', 'php', 'gen', 'xss', 'sqli', 'sf', 'java']}, 'value': {'type': 'object', 'properties': {'active': {'type': 'boolean'}, 'action': {'type': 'string', 'enum': ['deny', 'log']}}, 'required': ['active', 'action'], 'additionalProperties': False}}, 'required': ['action', 'id', 'value'], 'additionalProperties': False}, {'description': 'Disable a managed rule', 'type': 'object', 'properties': {'action': {'type': 'string', 'const': 'crs.disable'}, 'id': {'type': 'null'}, 'value': {'type': 'null'}}, 'required': ['action'], 'additionalProperties': False}, {'description': 'Add an IP Blocking rule', 'type': 'object', 'properties': {'action': {'type': 'string', 'const': 'ip.insert'}, 'id': {'type': 'null'}, 'value': {'type': 'object', 'properties': {'hostname': {'type': 'string'}, 'ip': {'type': 'string'}, 'notes': {'type': 'string'}, 'action': {'type': 'string', 'enum': ['deny', 'challenge', 'log', 'bypass']}}, 'required': ['hostname', 'ip', 'action'], 'additionalProperties': False}}, 'required': ['action', 'value'], 'additionalProperties': False}, {'description': 'Update an IP Blocking rule', 'type': 'object', 'properties': {'action': {'type': 'string', 'const': 'ip.update'}, 'id': {'type': 'string'}, 'value': {'type': 'object', 'properties': {'hostname': {'type': 'string'}, 'ip': {'type': 'string'}, 'notes': {'type': 'string'}, 'action': {'type': 'string', 'enum': ['deny', 'challenge', 'log', 'bypass']}}, 'required': ['hostname', 'ip', 'action'], 'additionalProperties': False}}, 'required': ['action', 'id', 'value'], 'additionalProperties': False}, {'description': 'Remove an IPBlocking rule', 'type': 'object', 'properties': {'action': {'type': 'string', 'const': 'ip.remove'}, 'id': {'type': 'string'}, 'value': {'type': 'null'}}, 'required': ['action', 'id'], 'additionalProperties': False}, {'description': 'Update a managed ruleset', 'type': 'object', 'properties': {'action': {'type': 'string', 'const': 'managedRules.update'}, 'id': {'type': 'string'}, 'value': {'type': 'object', 'properties': {'action': {'type': 'string', 'enum': ['log', 'challenge', 'deny']}, 'active': {'type': 'boolean'}}, 'required': ['active'], 'additionalProperties': False}}, 'required': ['action', 'id', 'value'], 'additionalProperties': False}, {'description': 'Update a managed rule group', 'type': 'object', 'properties': {'action': {'type': 'string', 'const': 'managedRuleGroup.update'}, 'id': {'type': 'string'}, 'value': {'type': 'object', 'additionalProperties': {'type': 'object', 'properties': {'active': {'type': 'boolean'}, 'action': {'type': 'string', 'enum': ['log', 'challenge', 'deny']}}, 'required': ['active'], 'additionalProperties': False}}}, 'required': ['action', 'id', 'value'], 'additionalProperties': False}]}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'name': 'userId', 'in': 'path', 'required': False, 'schema': {'type': 'string'}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/teams/{teamId}/request/{userId}",
        "get",
        "parameters",
        0
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/json': {'schema': {'type': 'object', 'properties': {'confirmed': {'type': 'boolean', 'enum': [True], 'description': 'Accept a user who requested access to the team.', 'example': True}, 'role': {'type': 'string', 'description': 'The role in the team of the member.', 'default': ['MEMBER', 'VIEWER'], 'example': ['MEMBER', 'VIEWER']}, 'projects': {'type': 'array', 'items': {'type': 'object', 'additionalProperties': False, 'required': ['role', 'projectId'], 'properties': {'projectId': {'type': 'string', 'maxLength': 256, 'example': 'prj_ndlgr43fadlPyCtREAqxxdyFK', 'description': 'The ID of the project.'}, 'role': {'type': 'string', 'enum': ['ADMIN', 'PROJECT_VIEWER', 'PROJECT_DEVELOPER', None], 'example': 'ADMIN', 'description': 'The project role of the member that will be added. \\\\\"null\\\\\" will remove this project level role.', 'nullable': True}}}}, 'joinedFrom': {'additionalProperties': False, 'type': 'object', 'properties': {'ssoUserId': {'type': 'null'}}}}}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/teams/{teamId}/members/{uid}",
        "patch",
        "requestBody"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'description': 'The Team identifier to perform the request on behalf of.', 'in': 'path', 'name': 'teamId', 'schema': {'type': 'string'}, 'required': False} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/teams/{teamId}",
        "get",
        "parameters",
        1
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "{'content': {'application/json': {'schema': {'type': 'object', 'additionalProperties': False, 'properties': {'avatar': {'type': 'string', 'format': 'regex', 'regex': '^[0-9a-f]{40}$', 'description': 'The hash value of an uploaded image.'}, 'description': {'type': 'string', 'maxLength': 140, 'example': 'Our mission is to make cloud computing accessible to everyone', 'description': 'A short text that describes the team.'}, 'emailDomain': {'type': 'string', 'format': 'regex', 'regex': '\\\\\\\\b((?=[a-z0-9-]{1,63}\\\\\\\\.)(xn--)?[a-z0-9]+(-[a-z0-9]+)*\\\\\\\\.)+[a-z]{2,63}\\\\\\\\b', 'example': 'example.com', 'nullable': True}, 'name': {'type': 'string', 'maxLength': 256, 'example': 'My Team', 'description': 'The name of the team.'}, 'previewDeploymentSuffix': {'type': 'string', 'format': 'hostname', 'example': 'example.dev', 'description': 'Suffix that will be used for all preview deployments.', 'nullable': True}, 'regenerateInviteCode': {'type': 'boolean', 'example': True, 'description': 'Create a new invite code and replace the current one.'}, 'saml': {'type': 'object', 'additionalProperties': False, 'properties': {'enforced': {'type': 'boolean', 'example': True, 'description': 'Require that members of the team use SAML Single Sign-On.'}, 'roles': {'type': 'object', 'description': 'Directory groups to role or access group mappings.', 'additionalProperties': {'anyOf': [{'type': 'string', 'enum': ['OWNER', 'MEMBER', 'DEVELOPER', 'SECURITY', 'BILLING', 'VIEWER', 'CONTRIBUTOR']}, {'type': 'object', 'additionalProperties': False, 'required': ['accessGroupId'], 'properties': {'accessGroupId': {'type': 'string', 'pattern': '^ag_[A-z0-9_ -]+$'}}}]}}}}, 'slug': {'type': 'string', 'example': 'my-team', 'description': 'A new slug for the team.'}, 'enablePreviewFeedback': {'type': 'string', 'example': 'on', 'description': 'Enable preview toolbar: one of on, off or default.'}, 'enableProductionFeedback': {'type': 'string', 'example': 'on', 'description': 'Enable production toolbar: one of on, off or default.'}, 'sensitiveEnvironmentVariablePolicy': {'type': 'string', 'example': 'on', 'description': 'Sensitive environment variable policy: one of on, off or default.'}, 'remoteCaching': {'type': 'object', 'description': 'Whether or not remote caching is enabled for the team', 'additionalProperties': False, 'properties': {'enabled': {'type': 'boolean', 'example': True, 'description': 'Enable or disable remote caching for the team.'}}}, 'hideIpAddresses': {'type': 'boolean', 'example': False, 'description': 'Display or hide IP addresses in Monitoring queries.'}, 'hideIpAddressesInLogDrains': {'type': 'boolean', 'example': False, 'description': 'Display or hide IP addresses in Log Drains.'}}}}}} is not valid under any of the given schemas",
    "severity": 1,
    "code": "oneOf",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/teams/{teamId}",
        "patch",
        "requestBody"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Path parameter 'domain' for 'get' operation in '/v1/domains/{domain}/registry' was not resolved",
    "severity": 1,
    "code": "<unset>",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Path parameter 'configVersion' for 'get' operation in '/v1/security/firewall/config/{configVersion}' was not resolved",
    "severity": 1,
    "code": "<unset>",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Path parameter 'teamId' for 'get' operation in '/v2/teams/{teamId}/members' was not resolved",
    "severity": 1,
    "code": "<unset>",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Path parameter 'teamId' for 'post' operation in '/v1/teams/{teamId}/members' was not resolved",
    "severity": 1,
    "code": "<unset>",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Path parameter 'teamId' for 'post' operation in '/v1/teams/{teamId}/request' was not resolved",
    "severity": 1,
    "code": "<unset>",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Path parameter 'teamId' for 'get' operation in '/v1/teams/{teamId}/request/{userId}' was not resolved",
    "severity": 1,
    "code": "<unset>",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Path parameter 'teamId' for 'post' operation in '/v1/teams/{teamId}/members/teams/join' was not resolved",
    "severity": 1,
    "code": "<unset>",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Path parameter 'teamId' for 'patch' operation in '/v1/teams/{teamId}/members/{uid}' was not resolved",
    "severity": 1,
    "code": "<unset>",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Path parameter 'teamId' for 'delete' operation in '/v1/teams/{teamId}/members/{uid}' was not resolved",
    "severity": 1,
    "code": "<unset>",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Path parameter 'teamId' for 'delete' operation in '/v1/teams/{teamId}/invites/{inviteId}' was not resolved",
    "severity": 1,
    "code": "<unset>",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Path parameter 'name' for 'post' operation in '/v2/secrets/{name}' was not resolved",
    "severity": 1,
    "code": "<unset>",
    "code_description": null,
    "source": "openapi-spec-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The path already exists which differs only by path parameter name(s): `/v1/access-groups/{idOrName}/projects` and `/v1/access-groups/{accessGroupIdOrName}/projects`. [path: paths./v1/access-groups/{accessGroupIdOrName}/projects]",
    "severity": 1,
    "code": "no-identical-paths",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/access-groups/{accessGroupIdOrName}/projects"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The path already exists which differs only by path parameter name(s): `/v13/deployments/{idOrUrl}` and `/v13/deployments/{id}`. [path: paths./v13/deployments/{id}]",
    "severity": 1,
    "code": "no-identical-paths",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v13/deployments/{id}"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The path already exists which differs only by path parameter name(s): `/v2/secrets/{name}` and `/v2/secrets/{idOrName}`. [path: paths./v2/secrets/{idOrName}]",
    "severity": 1,
    "code": "no-identical-paths",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/secrets/{idOrName}"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v8/artifacts.post.responses.200.content.application/json.schema.additionalProperties.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v8/artifacts",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "additionalProperties",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./data-cache/purge-all.delete.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/data-cache/purge-all",
        "delete",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./data-cache/billing-settings.patch.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/data-cache/billing-settings",
        "patch",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v1/data-cache/projects/{projectId}.patch.responses.200.content.application/json.schema.properties.env.items.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/data-cache/projects/{projectId}",
        "patch",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "env",
        "items",
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v1/data-cache/projects/{projectId}.patch.responses.200.content.application/json.schema.properties.latestDeployments.items.properties.aliasAssigned.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/data-cache/projects/{projectId}",
        "patch",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "latestDeployments",
        "items",
        "properties",
        "aliasAssigned",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v1/data-cache/projects/{projectId}.patch.responses.200.content.application/json.schema.properties.targets.additionalProperties.properties.aliasAssigned.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/data-cache/projects/{projectId}",
        "patch",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "targets",
        "additionalProperties",
        "properties",
        "aliasAssigned",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v1/data-cache/projects/{projectId}.patch.responses.200.content.application/json.schema.properties.trustedIps.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/data-cache/projects/{projectId}",
        "patch",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "trustedIps",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `const` is not expected here. [path: paths./v1/deployments/{deploymentId}/integrations/{integrationConfigurationId}/resources/{resourceId}/actions/{action}.patch.requestBody.content.application/json.schema.properties.outcomes.items.oneOf.0.properties.kind.const]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/deployments/{deploymentId}/integrations/{integrationConfigurationId}/resources/{resourceId}/actions/{action}",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "outcomes",
        "items",
        "oneOf",
        0,
        "properties",
        "kind",
        "const"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v13/deployments/{idOrUrl}.get.responses.200.content.application/json.schema.oneOf.0.properties.aliasAssignedAt.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v13/deployments/{idOrUrl}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "oneOf",
        0,
        "properties",
        "aliasAssignedAt",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v13/deployments/{idOrUrl}.get.responses.200.content.application/json.schema.oneOf.0.properties.gitRepo.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v13/deployments/{idOrUrl}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "oneOf",
        0,
        "properties",
        "gitRepo",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.FlagJSONValue.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "FlagJSONValue",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v13/deployments.post.responses.200.content.application/json.schema.properties.aliasAssignedAt.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v13/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "aliasAssignedAt",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v13/deployments.post.responses.200.content.application/json.schema.properties.gitRepo.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v13/deployments",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "gitRepo",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v12/deployments/{id}/cancel.patch.responses.200.content.application/json.schema.properties.aliasAssignedAt.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v12/deployments/{id}/cancel",
        "patch",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "aliasAssignedAt",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v12/deployments/{id}/cancel.patch.responses.200.content.application/json.schema.properties.gitRepo.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v12/deployments/{id}/cancel",
        "patch",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "gitRepo",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `name` is not expected here. [path: paths./v2/domains/{domain}/records.post.requestBody.content.application/json.schema.anyOf.6.properties.name.name]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/domains/{domain}/records",
        "post",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "anyOf",
        6,
        "properties",
        "name",
        "name"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v2/domains/{domain}/records.post.requestBody.content.application/json.schema.anyOf.6.properties.srv.properties.priority.anyOf.1.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/domains/{domain}/records",
        "post",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "anyOf",
        6,
        "properties",
        "srv",
        "properties",
        "priority",
        "anyOf",
        1,
        "type"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v2/domains/{domain}/records.post.requestBody.content.application/json.schema.anyOf.6.properties.srv.properties.weight.anyOf.1.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/domains/{domain}/records",
        "post",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "anyOf",
        6,
        "properties",
        "srv",
        "properties",
        "weight",
        "anyOf",
        1,
        "type"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v2/domains/{domain}/records.post.requestBody.content.application/json.schema.anyOf.6.properties.srv.properties.port.anyOf.1.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/domains/{domain}/records",
        "post",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "anyOf",
        6,
        "properties",
        "srv",
        "properties",
        "port",
        "anyOf",
        1,
        "type"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `name` is not expected here. [path: paths./v2/domains/{domain}/records.post.requestBody.content.application/json.schema.anyOf.7.properties.name.name]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/domains/{domain}/records",
        "post",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "anyOf",
        7,
        "properties",
        "name",
        "name"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `name` is not expected here. [path: paths./v2/domains/{domain}/records.post.requestBody.content.application/json.schema.anyOf.9.properties.name.name]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/domains/{domain}/records",
        "post",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "anyOf",
        9,
        "properties",
        "name",
        "name"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v2/domains/{domain}/records.post.requestBody.content.application/json.schema.anyOf.9.properties.https.properties.priority.anyOf.1.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v2/domains/{domain}/records",
        "post",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "anyOf",
        9,
        "properties",
        "https",
        "properties",
        "priority",
        "anyOf",
        1,
        "type"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Expected type `Schema` (object) but got `boolean` [path: paths./v1/domains/records/{recordId}.patch.requestBody.content.application/json.schema.properties.additionalProperties]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/domains/records/{recordId}",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "additionalProperties"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The operation does not define the path parameter `{domain}` expected by path `/v1/domains/{domain}/registry`. [path: paths./v1/domains/{domain}/registry.get.parameters]",
    "severity": 1,
    "code": "path-parameters-defined",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/domains/{domain}/registry",
        "get",
        "parameters"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `multiplesOf` is not expected here. [path: paths./v1/log-drains.post.requestBody.content.application/json.schema.properties.samplingRate.multiplesOf]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/log-drains",
        "post",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "samplingRate",
        "multiplesOf"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `propertyNames` is not expected here. [path: paths./v1/edge-config.post.requestBody.content.application/json.schema.properties.items.propertyNames]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/edge-config",
        "post",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "items",
        "propertyNames"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.EdgeConfigItemValue.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "EdgeConfigItemValue",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `const` is not expected here. [path: paths./v1/edge-config/{edgeConfigId}/items.patch.requestBody.content.application/json.schema.properties.items.items.oneOf.0.anyOf.0.properties.operation.const]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/edge-config/{edgeConfigId}/items",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "items",
        "items",
        "oneOf",
        0,
        "anyOf",
        0,
        "properties",
        "operation",
        "const"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `const` is not expected here. [path: paths./v1/edge-config/{edgeConfigId}/items.patch.requestBody.content.application/json.schema.properties.items.items.oneOf.0.anyOf.3.properties.operation.const]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/edge-config/{edgeConfigId}/items",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "items",
        "items",
        "oneOf",
        0,
        "anyOf",
        3,
        "properties",
        "operation",
        "const"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v1/edge-config/{edgeConfigId}/items.patch.requestBody.content.application/json.schema.properties.items.items.oneOf.0.properties.description.oneOf.1.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/edge-config/{edgeConfigId}/items",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "items",
        "items",
        "oneOf",
        0,
        "properties",
        "description",
        "oneOf",
        1,
        "type"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.UserEvent.properties.payload.oneOf.61.properties.newOwner.properties.importFlowGitNamespace.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "UserEvent",
        "properties",
        "payload",
        "oneOf",
        61,
        "properties",
        "newOwner",
        "properties",
        "importFlowGitNamespace",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.UserEvent.properties.payload.oneOf.61.properties.newOwner.properties.importFlowGitNamespaceId.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "UserEvent",
        "properties",
        "payload",
        "oneOf",
        61,
        "properties",
        "newOwner",
        "properties",
        "importFlowGitNamespaceId",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.UserEvent.properties.payload.oneOf.61.properties.newOwner.properties.preferredScopesAndGitNamespaces.items.properties.gitNamespaceId.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "UserEvent",
        "properties",
        "payload",
        "oneOf",
        61,
        "properties",
        "newOwner",
        "properties",
        "preferredScopesAndGitNamespaces",
        "items",
        "properties",
        "gitNamespaceId",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.UserEvent.properties.payload.oneOf.76.properties.ssoProtection.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "UserEvent",
        "properties",
        "payload",
        "oneOf",
        76,
        "properties",
        "ssoProtection",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.UserEvent.properties.payload.oneOf.76.properties.oldSsoProtection.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "UserEvent",
        "properties",
        "payload",
        "oneOf",
        76,
        "properties",
        "oldSsoProtection",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.UserEvent.properties.payload.oneOf.77.properties.passwordProtection.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "UserEvent",
        "properties",
        "payload",
        "oneOf",
        77,
        "properties",
        "passwordProtection",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: components.schemas.UserEvent.properties.payload.oneOf.77.properties.oldPasswordProtection.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "components",
        "schemas",
        "UserEvent",
        "properties",
        "payload",
        "oneOf",
        77,
        "properties",
        "oldPasswordProtection",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v1/integrations/sso/token.post.responses.200.content.application/json.schema.properties.access_token.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/integrations/sso/token",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "access_token",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v1/integrations/sso/token.post.responses.200.content.application/json.schema.properties.token_type.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/integrations/sso/token",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "token_type",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v1/integrations/search-repo.get.parameters.1.schema.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/integrations/search-repo",
        "get",
        "parameters",
        1,
        "schema",
        "type"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v1/integrations/search-repo.get.responses.200.content.application/json.schema.oneOf.1.properties.gitAccount.properties.namespaceId.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/integrations/search-repo",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "oneOf",
        1,
        "properties",
        "gitAccount",
        "properties",
        "namespaceId",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Operation object should contain `summary` field. [path: paths./v1/experimentation/items.get.summary]",
    "severity": 1,
    "code": "operation-summary",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/experimentation/items",
        "get",
        "summary"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `propertyNames` is not expected here. [path: paths./v1/installations/{integrationConfigurationId}/resources/{resourceId}/experimentation/edge-config.put.requestBody.content.application/json.schema.properties.data.propertyNames]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/installations/{integrationConfigurationId}/resources/{resourceId}/experimentation/edge-config",
        "put",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "data",
        "propertyNames"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v10/projects.get.responses.200.content.application/json.schema.properties.projects.items.properties.env.items.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v10/projects",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "projects",
        "items",
        "properties",
        "env",
        "items",
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v10/projects.get.responses.200.content.application/json.schema.properties.projects.items.properties.latestDeployments.items.properties.aliasAssigned.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v10/projects",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "projects",
        "items",
        "properties",
        "latestDeployments",
        "items",
        "properties",
        "aliasAssigned",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v10/projects.get.responses.200.content.application/json.schema.properties.projects.items.properties.targets.additionalProperties.properties.aliasAssigned.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v10/projects",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "projects",
        "items",
        "properties",
        "targets",
        "additionalProperties",
        "properties",
        "aliasAssigned",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v10/projects.get.responses.200.content.application/json.schema.properties.projects.items.properties.trustedIps.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v10/projects",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "projects",
        "items",
        "properties",
        "trustedIps",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v11/projects.post.responses.200.content.application/json.schema.properties.env.items.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v11/projects",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "env",
        "items",
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v11/projects.post.responses.200.content.application/json.schema.properties.latestDeployments.items.properties.aliasAssigned.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v11/projects",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "latestDeployments",
        "items",
        "properties",
        "aliasAssigned",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v11/projects.post.responses.200.content.application/json.schema.properties.targets.additionalProperties.properties.aliasAssigned.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v11/projects",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "targets",
        "additionalProperties",
        "properties",
        "aliasAssigned",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v11/projects.post.responses.200.content.application/json.schema.properties.trustedIps.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v11/projects",
        "post",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "trustedIps",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v9/projects/{idOrName}.get.responses.200.content.application/json.schema.properties.env.items.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "env",
        "items",
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v9/projects/{idOrName}.get.responses.200.content.application/json.schema.properties.latestDeployments.items.properties.aliasAssigned.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "latestDeployments",
        "items",
        "properties",
        "aliasAssigned",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v9/projects/{idOrName}.get.responses.200.content.application/json.schema.properties.targets.additionalProperties.properties.aliasAssigned.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "targets",
        "additionalProperties",
        "properties",
        "aliasAssigned",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v9/projects/{idOrName}.get.responses.200.content.application/json.schema.properties.trustedIps.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "trustedIps",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v9/projects/{idOrName}.patch.responses.200.content.application/json.schema.properties.env.items.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}",
        "patch",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "env",
        "items",
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v9/projects/{idOrName}.patch.responses.200.content.application/json.schema.properties.latestDeployments.items.properties.aliasAssigned.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}",
        "patch",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "latestDeployments",
        "items",
        "properties",
        "aliasAssigned",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v9/projects/{idOrName}.patch.responses.200.content.application/json.schema.properties.targets.additionalProperties.properties.aliasAssigned.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}",
        "patch",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "targets",
        "additionalProperties",
        "properties",
        "aliasAssigned",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v9/projects/{idOrName}.patch.responses.200.content.application/json.schema.properties.trustedIps.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}",
        "patch",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "properties",
        "trustedIps",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `errorMessage` is not expected here. [path: paths./v9/projects/{idOrName}/custom-environments.post.requestBody.content.application/json.schema.properties.slug.errorMessage]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}/custom-environments",
        "post",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "slug",
        "errorMessage"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `errorMessage` is not expected here. [path: paths./v9/projects/{idOrName}/custom-environments.post.requestBody.content.application/json.schema.properties.description.errorMessage]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}/custom-environments",
        "post",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "description",
        "errorMessage"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `errorMessage` is not expected here. [path: paths./v9/projects/{idOrName}/custom-environments.post.requestBody.content.application/json.schema.properties.branchMatcher.properties.pattern.errorMessage]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}/custom-environments",
        "post",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "branchMatcher",
        "properties",
        "pattern",
        "errorMessage"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `errorMessage` is not expected here. [path: paths./v9/projects/{idOrName}/custom-environments/{environmentSlugOrId}.patch.requestBody.content.application/json.schema.properties.slug.errorMessage]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}/custom-environments/{environmentSlugOrId}",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "slug",
        "errorMessage"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `errorMessage` is not expected here. [path: paths./v9/projects/{idOrName}/custom-environments/{environmentSlugOrId}.patch.requestBody.content.application/json.schema.properties.description.errorMessage]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}/custom-environments/{environmentSlugOrId}",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "description",
        "errorMessage"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `errorMessage` is not expected here. [path: paths./v9/projects/{idOrName}/custom-environments/{environmentSlugOrId}.patch.requestBody.content.application/json.schema.properties.branchMatcher.properties.pattern.errorMessage]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}/custom-environments/{environmentSlugOrId}",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "branchMatcher",
        "properties",
        "pattern",
        "errorMessage"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v10/projects/{idOrName}/env.get.responses.200.content.application/json.schema.oneOf.0.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v10/projects/{idOrName}/env",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "oneOf",
        0,
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v10/projects/{idOrName}/env.get.responses.200.content.application/json.schema.oneOf.1.properties.envs.items.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v10/projects/{idOrName}/env",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "oneOf",
        1,
        "properties",
        "envs",
        "items",
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v10/projects/{idOrName}/env.get.responses.200.content.application/json.schema.oneOf.2.properties.envs.items.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v10/projects/{idOrName}/env",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "oneOf",
        2,
        "properties",
        "envs",
        "items",
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v10/projects/{idOrName}/env.post.responses.201.content.application/json.schema.properties.created.oneOf.0.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v10/projects/{idOrName}/env",
        "post",
        "responses",
        201,
        "content",
        "application/json",
        "schema",
        "properties",
        "created",
        "oneOf",
        0,
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v10/projects/{idOrName}/env.post.responses.201.content.application/json.schema.properties.created.oneOf.1.items.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v10/projects/{idOrName}/env",
        "post",
        "responses",
        201,
        "content",
        "application/json",
        "schema",
        "properties",
        "created",
        "oneOf",
        1,
        "items",
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v1/projects/{idOrName}/env/{id}.get.responses.200.content.application/json.schema.oneOf.0.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/projects/{idOrName}/env/{id}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "oneOf",
        0,
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v1/projects/{idOrName}/env/{id}.get.responses.200.content.application/json.schema.oneOf.1.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/projects/{idOrName}/env/{id}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "oneOf",
        1,
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v1/projects/{idOrName}/env/{id}.get.responses.200.content.application/json.schema.oneOf.2.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/projects/{idOrName}/env/{id}",
        "get",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "oneOf",
        2,
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v9/projects/{idOrName}/env/{id}.delete.responses.200.content.application/json.schema.oneOf.0.items.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}/env/{id}",
        "delete",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "oneOf",
        0,
        "items",
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v9/projects/{idOrName}/env/{id}.delete.responses.200.content.application/json.schema.oneOf.1.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}/env/{id}",
        "delete",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "oneOf",
        1,
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v9/projects/{idOrName}/env/{id}.delete.responses.200.content.application/json.schema.oneOf.2.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}/env/{id}",
        "delete",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "oneOf",
        2,
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "The `type` field must be defined when the `nullable` field is used. [path: paths./v9/projects/{idOrName}/env/{id}.patch.responses.200.content.application/json.schema.oneOf.0.properties.contentHint.nullable]",
    "severity": 1,
    "code": "nullable-type-sibling",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v9/projects/{idOrName}/env/{id}",
        "patch",
        "responses",
        200,
        "content",
        "application/json",
        "schema",
        "oneOf",
        0,
        "properties",
        "contentHint",
        "nullable"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `errorMessage` is not expected here. [path: paths./v1/projects/{idOrName}/protection-bypass.patch.requestBody.content.application/json.schema.properties.generate.properties.secret.errorMessage]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/projects/{idOrName}/protection-bypass",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "generate",
        "properties",
        "secret",
        "errorMessage"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `$schema` is not expected here. [path: paths./v1/security/firewall/config.put.requestBody.content.application/json.schema.$schema]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "put",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "$schema"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v1/security/firewall/config.put.requestBody.content.application/json.schema.properties.rules.items.properties.action.properties.mitigate.properties.rateLimit.anyOf.0.properties.action.anyOf.1.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "put",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "rules",
        "items",
        "properties",
        "action",
        "properties",
        "mitigate",
        "properties",
        "rateLimit",
        "anyOf",
        0,
        "properties",
        "action",
        "anyOf",
        1,
        "type"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v1/security/firewall/config.put.requestBody.content.application/json.schema.properties.rules.items.properties.action.properties.mitigate.properties.rateLimit.anyOf.1.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "put",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "rules",
        "items",
        "properties",
        "action",
        "properties",
        "mitigate",
        "properties",
        "rateLimit",
        "anyOf",
        1,
        "type"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v1/security/firewall/config.put.requestBody.content.application/json.schema.properties.rules.items.properties.action.properties.mitigate.properties.redirect.anyOf.1.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "put",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "properties",
        "rules",
        "items",
        "properties",
        "action",
        "properties",
        "mitigate",
        "properties",
        "redirect",
        "anyOf",
        1,
        "type"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `const` is not expected here. [path: paths./v1/security/firewall/config.patch.requestBody.content.application/json.schema.oneOf.0.properties.action.const]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "oneOf",
        0,
        "properties",
        "action",
        "const"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v1/security/firewall/config.patch.requestBody.content.application/json.schema.oneOf.0.properties.id.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "oneOf",
        0,
        "properties",
        "id",
        "type"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `const` is not expected here. [path: paths./v1/security/firewall/config.patch.requestBody.content.application/json.schema.oneOf.1.properties.action.const]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "oneOf",
        1,
        "properties",
        "action",
        "const"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v1/security/firewall/config.patch.requestBody.content.application/json.schema.oneOf.1.properties.id.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "oneOf",
        1,
        "properties",
        "id",
        "type"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v1/security/firewall/config.patch.requestBody.content.application/json.schema.oneOf.1.properties.value.properties.action.properties.mitigate.properties.rateLimit.anyOf.0.properties.action.anyOf.1.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "oneOf",
        1,
        "properties",
        "value",
        "properties",
        "action",
        "properties",
        "mitigate",
        "properties",
        "rateLimit",
        "anyOf",
        0,
        "properties",
        "action",
        "anyOf",
        1,
        "type"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v1/security/firewall/config.patch.requestBody.content.application/json.schema.oneOf.1.properties.value.properties.action.properties.mitigate.properties.rateLimit.anyOf.1.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "oneOf",
        1,
        "properties",
        "value",
        "properties",
        "action",
        "properties",
        "mitigate",
        "properties",
        "rateLimit",
        "anyOf",
        1,
        "type"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v1/security/firewall/config.patch.requestBody.content.application/json.schema.oneOf.1.properties.value.properties.action.properties.mitigate.properties.redirect.anyOf.1.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "oneOf",
        1,
        "properties",
        "value",
        "properties",
        "action",
        "properties",
        "mitigate",
        "properties",
        "redirect",
        "anyOf",
        1,
        "type"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `const` is not expected here. [path: paths./v1/security/firewall/config.patch.requestBody.content.application/json.schema.oneOf.2.properties.action.const]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "oneOf",
        2,
        "properties",
        "action",
        "const"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v1/security/firewall/config.patch.requestBody.content.application/json.schema.oneOf.2.properties.value.properties.action.properties.mitigate.properties.rateLimit.anyOf.0.properties.action.anyOf.1.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "oneOf",
        2,
        "properties",
        "value",
        "properties",
        "action",
        "properties",
        "mitigate",
        "properties",
        "rateLimit",
        "anyOf",
        0,
        "properties",
        "action",
        "anyOf",
        1,
        "type"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v1/security/firewall/config.patch.requestBody.content.application/json.schema.oneOf.2.properties.value.properties.action.properties.mitigate.properties.rateLimit.anyOf.1.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "oneOf",
        2,
        "properties",
        "value",
        "properties",
        "action",
        "properties",
        "mitigate",
        "properties",
        "rateLimit",
        "anyOf",
        1,
        "type"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v1/security/firewall/config.patch.requestBody.content.application/json.schema.oneOf.2.properties.value.properties.action.properties.mitigate.properties.redirect.anyOf.1.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "oneOf",
        2,
        "properties",
        "value",
        "properties",
        "action",
        "properties",
        "mitigate",
        "properties",
        "redirect",
        "anyOf",
        1,
        "type"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `const` is not expected here. [path: paths./v1/security/firewall/config.patch.requestBody.content.application/json.schema.oneOf.3.properties.action.const]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "oneOf",
        3,
        "properties",
        "action",
        "const"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "`type` can be one of the following only: \"object\", \"array\", \"string\", \"number\", \"integer\", \"boolean\". [path: paths./v1/security/firewall/config.patch.requestBody.content.application/json.schema.oneOf.3.properties.value.type]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "oneOf",
        3,
        "properties",
        "value",
        "type"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `const` is not expected here. [path: paths./v1/security/firewall/config.patch.requestBody.content.application/json.schema.oneOf.4.properties.action.const]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "oneOf",
        4,
        "properties",
        "action",
        "const"
      ],
      "target": "import-url_bundled-spec"
    }
  },
  {
    "range": {
      "start": {
        "line": 0,
        "character": 0
      },
      "end": {
        "line": 0,
        "character": 0
      }
    },
    "message": "Property `const` is not expected here. [path: paths./v1/security/firewall/config.patch.requestBody.content.application/json.schema.oneOf.5.properties.action.const]",
    "severity": 1,
    "code": "struct",
    "code_description": null,
    "source": "redocly-validator",
    "tags": null,
    "related_information": null,
    "data": {
      "fixable": true,
      "path": [
        "paths",
        "/v1/security/firewall/config",
        "patch",
        "requestBody",
        "content",
        "application/json",
        "schema",
        "oneOf",
        5,
        "properties",
        "action",
        "const"
      ],
      "target": "import-url_bundled-spec"
    }
  }
]