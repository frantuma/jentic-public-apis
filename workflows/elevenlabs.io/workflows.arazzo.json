{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "https://raw.githubusercontent.com/jentic/jentic-public-apis/refs/heads/main/apis/openapi/elevenlabs.io/main/1.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "dubbing-workflow",
      "summary": "Dubs a video or audio file into a specified language. This workflow allows users to translate and generate audio for videos or audio files.",
      "description": "Dubs a video or audio file into a specified language. This workflow allows users to translate and generate audio for videos or audio files.",
      "inputs": {
        "type": "object",
        "properties": {
          "xi-api-key": {
            "type": "string"
          },
          "dub-audio-video_body": {
            "type": "object"
          },
          "language_code": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "dub-audio-video",
          "description": "Dubs a provided audio or video file into a given language.",
          "operationId": "Dub_a_video_or_an_audio_file_v1_dubbing_post",
          "parameters": [
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "requestBody": {
            "contentType": "multipart/form-data",
            "payload": "$inputs.dub-audio-video_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "dubbing_id": "$response.body#/dubbing_id"
          }
        },
        {
          "stepId": "get-dubbed-file",
          "description": "Retrieves the dubbed audio or video file.",
          "operationId": "Get_dubbed_file_v1_dubbing__dubbing_id__audio__language_code__get",
          "parameters": [
            {
              "name": "dubbing_id",
              "in": "path",
              "value": "$steps.dub-audio-video.outputs.dubbing_id"
            },
            {
              "name": "language_code",
              "in": "path",
              "value": "$inputs.language_code"
            },
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "file_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "dubbing_id": "$steps.dub-audio-video.outputs.dubbing_id",
        "file_data": "$steps.get-dubbed-file.outputs.file_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "conversational-ai-agent-creation-and-configuration",
      "summary": "Creates a conversational AI agent, configures its knowledge base, and retrieves its widget configuration. This workflow allows users to set up and customize an AI agent for conversational interactions.",
      "description": "Creates a conversational AI agent, configures its knowledge base, and retrieves its widget configuration. This workflow allows users to set up and customize an AI agent for conversational interactions.",
      "inputs": {
        "type": "object",
        "properties": {
          "use_tool_ids": {
            "type": "string"
          },
          "xi-api-key": {
            "type": "string"
          },
          "conversation_config": {
            "type": "string"
          },
          "add-to-knowledge-base_body": {
            "type": "object"
          },
          "conversation_signature": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-agent",
          "description": "Creates a new conversational AI agent.",
          "operationId": "Create_Agent_v1_convai_agents_create_post",
          "parameters": [
            {
              "name": "use_tool_ids",
              "in": "query",
              "value": "$inputs.use_tool_ids"
            },
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "conversation_config": "$inputs.conversation_config"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "agent_id": "$response.body#/agent_id"
          }
        },
        {
          "stepId": "add-to-knowledge-base",
          "description": "Adds a document to the agent's knowledge base.",
          "operationId": "Add_to_knowledge_base_v1_convai_agents__agent_id__add_to_knowledge_base_post",
          "parameters": [
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "requestBody": {
            "contentType": "multipart/form-data",
            "payload": "$inputs.add-to-knowledge-base_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id"
          }
        },
        {
          "stepId": "get-agent-widget-config",
          "description": "Retrieves the widget configuration for the agent.",
          "operationId": "Get_Agent_widget_config_v1_convai_agents__agent_id__widget_get",
          "parameters": [
            {
              "name": "agent_id",
              "in": "path",
              "value": "$steps.create-agent.outputs.agent_id"
            },
            {
              "name": "conversation_signature",
              "in": "query",
              "value": "$inputs.conversation_signature"
            },
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "config_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "agent_id": "$steps.create-agent.outputs.agent_id",
        "id": "$steps.add-to-knowledge-base.outputs.id",
        "config_data": "$steps.get-agent-widget-config.outputs.config_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "studio-project-creation-and-conversion",
      "summary": "Creates a Studio project from a URL and then converts it to audio. This workflow allows users to quickly generate audio from online content.",
      "description": "Creates a Studio project from a URL and then converts it to audio. This workflow allows users to quickly generate audio from online content.",
      "inputs": {
        "type": "object",
        "properties": {
          "xi-api-key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "default_title_voice_id": {
            "type": "string"
          },
          "default_paragraph_voice_id": {
            "type": "string"
          },
          "default_model_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "add-project",
          "description": "Creates a new Studio project from a URL.",
          "operationId": "Add_project_v1_projects_add_post",
          "parameters": [
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "requestBody": {
            "contentType": "multipart/form-data",
            "payload": {
              "name": "$inputs.name",
              "default_title_voice_id": "$inputs.default_title_voice_id",
              "default_paragraph_voice_id": "$inputs.default_paragraph_voice_id",
              "default_model_id": "$inputs.default_model_id"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "project": "$response.body#/project"
          }
        },
        {
          "stepId": "convert-project",
          "description": "Starts conversion of the Studio project to audio.",
          "operationId": "Convert_project_v1_projects__project_id__convert_post",
          "parameters": [
            {
              "name": "project_id",
              "in": "path",
              "value": "$steps.add-project.outputs.project#/project_id"
            },
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "project_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "project": "$steps.add-project.outputs.project",
        "project_data": "$steps.convert-project.outputs.project_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "pronunciation-dictionary-management",
      "summary": "Creates a pronunciation dictionary and adds rules to it. This workflow allows users to customize the pronunciation of words in their audio.",
      "description": "Creates a pronunciation dictionary and adds rules to it. This workflow allows users to customize the pronunciation of words in their audio.",
      "inputs": {
        "type": "object",
        "properties": {
          "xi-api-key": {
            "type": "string"
          },
          "rules": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "pronunciation_dictionary_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "add-pronunciation-dictionary",
          "description": "Creates a new pronunciation dictionary from provided rules.",
          "operationId": "Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_rules_post",
          "parameters": [
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "rules": "$inputs.rules",
              "name": "$inputs.name"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "version_id": "$response.body#/version_id"
          }
        },
        {
          "stepId": "add-rules-to-dictionary",
          "description": "Adds rules to the pronunciation dictionary.",
          "operationId": "Add_rules_to_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__add_rules_post",
          "parameters": [
            {
              "name": "pronunciation_dictionary_id",
              "in": "path",
              "value": "$inputs.pronunciation_dictionary_id"
            },
            {
              "name": "xi-api-key",
              "in": "header",
              "value": "$inputs.xi-api-key"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "rules": "$inputs.rules"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "dictionary_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "id": "$steps.add-pronunciation-dictionary.outputs.id",
        "version_id": "$steps.add-pronunciation-dictionary.outputs.version_id",
        "dictionary_data": "$steps.add-rules-to-dictionary.outputs.dictionary_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}
