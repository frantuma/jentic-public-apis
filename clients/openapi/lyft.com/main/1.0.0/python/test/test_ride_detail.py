# coding: utf-8

"""
    Lyft

    Drive your app to success with Lyft's API

    The version of the OpenAPI document: 1.0.0
    Contact: api-support@lyft.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ride_detail import RideDetail

class TestRideDetail(unittest.TestCase):
    """RideDetail unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RideDetail:
        """Test RideDetail
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RideDetail`
        """
        model = RideDetail()
        if include_optional:
            return RideDetail(
                beacon_color = '',
                can_cancel = [
                    'driver'
                    ],
                canceled_by = '',
                cancellation_price = openapi_client.models.cancellation_cost.CancellationCost(),
                destination = {"address":"123 Main St, Anytown, CA","eta_seconds":200,"lat":36.9442175,"lng":-123.8679133},
                distance_miles = 1.337,
                driver = {"first_name":"Joe","image_url":"http://example.com/lyft.png","phone_number":"+15554445000","rating":"4.9","user_id":"123456789"},
                dropoff = {"address":"123 Main St, Anytown, CA","lat":36.9442175,"lng":-123.8679133,"time":"2015-09-24T23:26:25.000Z"},
                duration_seconds = 56,
                feedback = '',
                generated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                line_items = [
                    openapi_client.models.line_item.LineItem(
                        amount = 56, 
                        currency = '', 
                        type = '', )
                    ],
                location = {"bearing":134.8789520264,"lat":37.776157,"lng":-122.393817},
                origin = {"address":"123 Main St, Anytown, CA","eta_seconds":200,"lat":36.9442175,"lng":-123.8679133},
                passenger = {"first_name":"Jane","image_url":"https://public-api.lyft.com/static/images/user.png","last_name":"Doe","rating":4.9},
                pickup = {"address":"123 Main St, Anytown, CA","lat":36.9442175,"lng":-123.8679133,"time":"2015-09-24T23:26:25.000Z"},
                price = {"amount":500,"currency":"USD","description":"Total cost"},
                pricing_details_url = '',
                primetime_percentage = '',
                rating = 56,
                requested_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                ride_id = '',
                ride_profile = 'personal',
                ride_type = 'lyft',
                route_url = '',
                status = 'pending',
                vehicle = {"color":"black","image_url":"http://example.com/lyft.png","license_plate":"AAAAAAA","license_plate_state":"CA","make":"Audi","model":"A4","year":2016}
            )
        else:
            return RideDetail(
        )
        """

    def testRideDetail(self):
        """Test RideDetail"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
